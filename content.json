{"meta":{"title":"沃德发","subtitle":"相互吹捧，共同进步😍😍😍","description":null,"author":"Yang","url":"http://example.com","root":"/"},"pages":[{"title":"about","date":"2023-12-07T14:14:04.000Z","updated":"2023-12-07T14:19:57.552Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"tags","date":"2023-11-23T12:01:15.000Z","updated":"2023-11-23T12:04:24.284Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2023-11-23T11:58:42.000Z","updated":"2023-11-23T11:59:22.023Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"link","date":"2023-12-07T13:41:21.000Z","updated":"2023-12-07T13:41:48.936Z","comments":true,"path":"link/index.html","permalink":"http://example.com/link/index.html","excerpt":"","text":""}],"posts":[{"title":"Qos","slug":"Qos","date":"2024-08-27T06:57:03.000Z","updated":"2024-08-27T08:15:44.607Z","comments":true,"path":"2024/08/27/Qos/","permalink":"http://example.com/2024/08/27/Qos/","excerpt":"","text":"Qos服务模型 简单流分类是指采用简单的规则，如只根据IP报文的IP优先级或DSCP值、IPv6报文的TC值、MPLS报文的EXP域值、VLAN报文的802.1p值，对报文进行粗略的分类，以识别出具有不同优先级或服务等级特征的流量，实现外部优先级和内部优先级之间的映射。 简单流分类过程实际上就是信任端口的上行报文携带的优先级标记，并进行优先级映射（即根据优先级映射表，将上行报文携带的QoS优先级统一映射到设备内部的服务等级和颜色，将下行报文的内部的服务等级和颜色映射成为QoS优先级）。 不同的报文使用不同的QoS优先级，例如VLAN报文使用802.1p，IP报文使用DSCP，MPLS报文使用EXP。为了保证不同报文的服务质量，在报文进设备时，需要将报文携带的QoS优先级统一映射到设备内部的服务等级Service Class（也叫做调度优先级PHB）和丢弃优先级（也叫颜色Color），在设备内部，根据报文的服务等级进行拥塞管理，根据报文的颜色进行拥塞避免；在报文出设备时，需要将内部的服务等级和颜色映射为QoS优先级，以便后续网络设备能够根据QoS优先级提供相应的服务质量。 服务等级，即队列Service Class是指报文在设备内部的服务等级，支持8种取值，优先级从高到低依次为CS7、CS6、EF、AF4、AF3、AF2、AF1、BE。Service Class决定了报文在设备内部所属的队列类型。服务等级的高低取决于具体的队列调度算法配置：如果8种类型的队列都配置为PQ调度，则CS7&gt;CS6&gt;EF&gt;AF4&gt;AF3&gt;AF2&gt;AF1&gt;BE；如果BE配置为PQ调度（一般不会这么配置），其余7种类型的队列配置为WFQ调度，则BE的优先级比其余7个都高；如果8种类型的队列都配置成WFQ调度，则相互之间无优先级高低之分。 复杂流分类 令牌桶 流量监管 如图例子：通过边缘网络设备连接广域网和局域网，局域网的带宽（100 Mbps）通常比广域网（2 Mbps或更低）高。当局域网用户试图通过广域网发送大量数据时，在网络边缘就会发生拥塞。这种情况下，可以在网络边缘的入口处进行流量监管，限制大流量数据的速率。流量监管的特点：丢弃超额流量或将超额流量重标记为低优先级量不需要额外的内存资源，不会带来延迟和抖动丢包可能引发重传可以重标记流 流量整形 拥塞避免技术 拥塞避免是指通过监视网络资源（如队列或内存缓冲区）的使用情况，在拥塞有加剧的趋势时，主动丢弃报文，通过调整网络的流量来解除网络过载的一种流控机制。 拥塞管理技术","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"Qos","slug":"Qos","permalink":"http://example.com/tags/Qos/"},{"name":"队列","slug":"队列","permalink":"http://example.com/tags/%E9%98%9F%E5%88%97/"}]},{"title":"EVPN","slug":"EVPN","date":"2024-08-26T16:06:21.000Z","updated":"2024-08-26T16:26:49.293Z","comments":true,"path":"2024/08/27/EVPN/","permalink":"http://example.com/2024/08/27/EVPN/","excerpt":"","text":"ES（Ethernet Segment）代表用户站点（设备或网络）连接到PE的一组以太链路，使用ESI（Ethernet Segment Identifier）来表示。 EVI（EVPN instance）代表一个EVPN实例，用于标识一个EVPN客户。 MAC-VRF是PE上属于EVI的MAC地址表。 RD（Route Distinguisher）是EVPN的唯一标识，用于区分EVI。 RT（Route Target）用于控制EVPN路由的引入。 DF（Designated Forwarder）用于在CE多归属场景下只转发一份BUM流量至CE。 ESI Label是EVPN Type 1路由所携带的扩展团体属性。在多归场景下，用于实现快速收敛和水平分割。 BUM（Broadcast、Unknown unicast、Multicast）Label是由Type 3路由携带，用于转发BUM流量。单播Label由Type 2路由携带，用于转发单播流量。 EVPN路由： EVPN定义了一种新的BGP NLRI（Network Layer Reachable Information）来承载所有的EVPN路由，被称为EVPN NLRI。EVPN NLRI被MP-BGP携带。 MP-BGP支持多协议扩展，定义EVPN的AFI（Address Family Identifier）是25，SAFI（Subsequent Address Family Identifier）是70。 启动阶段：EVPN对等体交互EVPN Type 3路由建立BUM流量转发表。EVPN对等体交互Type 4路由完成ES发现和DF选举（在ES多归属场景下）。EVPN对等体交互Type 1路由，交互ESI标签，进而实现水平分割、别名等功能。 流量转发：CE侧流量触发PE通过Type 2路由通告MAC地址，该路由携带分配的标签信息，后续根据该标签执行单播流量转发。 type3： type4： type1： type2：（流量转发阶段）","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"EVPN","slug":"EVPN","permalink":"http://example.com/tags/EVPN/"}]},{"title":"ipv6路由","slug":"ipv6路由","date":"2024-08-22T13:36:27.000Z","updated":"2024-08-22T13:45:30.305Z","comments":true,"path":"2024/08/22/ipv6路由/","permalink":"http://example.com/2024/08/22/ipv6%E8%B7%AF%E7%94%B1/","excerpt":"","text":"静态IPv6静态路由与IPv4静态路由类似，也需要管理员手工配置，适合于一些结构比较简单的IPv6网络。 在创建IPv6静态路由时，可以同时指定出接口和下一跳，或者只指定出接口或只指定下一跳。 对于点到点接口：指定出接口。 对于广播类型接口：指定下一跳。 IPv6静态路由负载分担和备份：在创建相同目的地址的多条IPv6静态路由时，如果指定相同优先级，则可实现负载分担，如果指定不同优先级，则可实现路由备份。 OSPFv3OSPFv3基于链路运行以及拓扑计算，而不再是网段。 OSPFv3支持一个链路上多个实例。 OSPFv3报文和LSA中去掉了IP地址的意义，且重构了报文格式和LSA格式。 OSPFv3报文和Router LSA&#x2F;Network LSA中不包含IP地址。 OSPFv3的LSA中定义了LSA的泛洪范围。OSPFv3中创建了新的LSA承载IPv6地址和前缀。 OSPFv3邻居不再由IP地址标识，只由Router ID标识。 Router id：Router ID长度32 bit，本地标识符，与IPv6地址无关，用点分十进制表示法来表示。 OSPFv3是基于链路运行的，设备只要在同一链路，就可以建立邻居关系。 接口地址不在同一网段，但是R1与R2仍然可以建立OSPFv3邻居关系。OSPFv3运行时，仅需邻居双方处于相同直连链路即可 多实例：一个OSPFv3物理接口可以和多个实例绑定，并用不同的实例标识（Instance ID）区分，即OSPFv3的单个链路支持运行多个OSPFv3实例。这些运行在同一条物理链路上的多个OSPFv3实例，分别与链路对端设备建立邻居及发送报文，且互不干扰，这样可以充分共享同一链路资源。 OSPFv3使用链路本地（FE80::&#x2F;10）地址作为发送报文的源地址和路由的下一跳地址。 使用链路本地地址来维持邻居关系，同步LSA数据库。 优势：不需要配置IPv6全球单播地址，就可以得到OSPFv3拓扑，实现拓扑与地址分离。OSPFv3报文不会被转发到始发链路范围之外，减少了报文不必要的泛洪，节省了带宽。 ISIS BGP4+MP-BGP支持的地址族有：IPv4单播地址族IPv4组播地址族IPv6单播地址族VPNv4地址族VPNv6地址族","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"ospfv3","slug":"ospfv3","permalink":"http://example.com/tags/ospfv3/"},{"name":"isis（ipv6）","slug":"isis（ipv6）","permalink":"http://example.com/tags/isis%EF%BC%88ipv6%EF%BC%89/"},{"name":"bgp（ipv6）","slug":"bgp（ipv6）","permalink":"http://example.com/tags/bgp%EF%BC%88ipv6%EF%BC%89/"}]},{"title":"MPLSVPN跨域","slug":"MPLSVPN跨域","date":"2024-08-20T11:29:15.000Z","updated":"2024-08-21T14:38:33.908Z","comments":true,"path":"2024/08/20/MPLSVPN跨域/","permalink":"http://example.com/2024/08/20/MPLSVPN%E8%B7%A8%E5%9F%9F/","excerpt":"","text":"Option A跨域VPN-OptionA是基本BGP&#x2F;MPLS IP VPN在跨域环境下的应用，ASBR之间不需要运行MPLS，也不需要为跨域进行特殊配置。这种方式下，两个AS的边界路由器ASBR直接相连，ASBR同时也是各自所在自治系统的PE。两个ASBR都把对端ASBR看作自己的CE设备，通过EBGP对等体关系向对端发布IPv4路由。 注意，每个跨域vpn在asbr PE上都需要一个接口绑定相应的VRF 跨域VPN-OptionA是基本IPv4 L3VPN在跨域环境下的应用，ASBR之间不需要运行MPLS，也不需要为跨域进行特殊配置。这种方式下，两个AS的边界ASBR直接相连，ASBR同时也是各自所在自治系统的PE。两个ASBR都把对端ASBR看作自己的CE设备，将会为每一个VPN创建VPN实例，使用EBGP方式向对端发布IPv4路由。（ASBR PE在VPN实例下建立EBGP，传递IPv4路由） 采用跨域VPN-OptionA方案，要求AS的边界设备ASBR支持VPN实例，能够管理VPN路由。并且，ASBR上必须需要为每个跨域的VPN准备专用的接口（可以是子接口、物理接口、捆绑的逻辑接口）。因此，此方案对ASBR的性能要求较高，但ASBR上不必为跨域做任何特殊的配置。 我们只通过单方向来解释控制平面的工作过程，同时假设在站点Site1有一VPN路由Client1连接，如上图，现在需要把Client1这条路由从CE1穿过AS100和AS200传递到CE2： 在AS100中，通过运行LDP协议，PE1分配一个与去往PE1的路由相关联的隧道标签(外层标签)T1给P1。 在AS100中，通过运行LDP协议，P1分配一个与去往PE1的路由相关联的隧道标签(外层标签)T2给ASBR-PE1。 在AS200中，同样通过运行LDP协议，ASBR-PE2分配一个与去往ASBR-PE2的路由相关联的隧道标签(外层标签)T3给P2。 在AS200中，通过运行LDP协议，P2分配一个与去往ASBR-PE2的路由相关联的隧道标签(外层标签)T4给PE2。 CE1 通告路由Client1给PE1，路由的下一跳为CE1的接口地址。 PE1将IPv4路由Client1通过MP-BGP重发布为VPNv4路由，并且下一跳改为PE1，分配一个VPN标签V1，然后通告给ASBR-PE1。 ASBR-PE1将VPNv4路由变为IPv4路由，把IPv4路由Client1通告给ASBR-PE2，并且下一跳指向ASBR-PE1。 ASBR-PE2将IPv4路由Client1通过MP-BGP重发布为VPNv4路由，并且下一跳为ASBR-PE2，为该路由分配一个VPN标签V2，将其通告给PE2。PE2将VPNv4路由转变为IPv4路由Client1，把路由Client1通告给CE2，并且下一跳指向PE2。 通过前文的过程分析，我们从反向来分析转发平面的工作过程，即CE2要发送一个目的地为Client1的IP报文给CE1，如上图所示： CE2发送一个目的地为Client1的IP报文给PE2。PE2收到IP报文后进行MPLS标签的封装，先封装VPN标签V2，再封装外层标签T4，然后将此报文发送给P2。 P2进行标签交换，把外层标签T4换成T3，然后将此报文发送给ASBR-PE2。 ASBR-PE2去掉所有标签，将报文(普通IP报文)转发给ASBR-PE1。 ASBR-PE1收到IP报文后进行MPLS标签的封装，先封装VPN标签V1，再封装外层标签T2，然后将此报文发送给P1。 P1进行标签交换，把外层标签T2换成T1，然后将此报文发送给PE1。PE1收到后去掉所有标签，将报文(普通IP报文)转发给CE1。 实验： R10和R11属于VPN aa能够互通，R1和R8属于VPN bb能够互通。 配置接口ip 创建VPN实例aa和bb，绑定接口 配置CE和PE之间的EBGP（PE在实例配） 配置骨干网的igp协议 配置骨干网的MP-BGP（ibgp 开启vpnv4） R4R5配置EBGP（实例中，因为有两个vpn所以需要额外创建一个子接口绑定bb，建立EBGP） 基本配置不再赘述，基本和单域的一致 R4所有配置 sysname R4# ip vpn-instance aa ipv4-family route-distinguisher 500:1 vpn-target 1:1 export-extcommunity vpn-target 1:1 import-extcommunity# ip vpn-instance bb ipv4-family route-distinguisher 700:1 vpn-target 2:2 export-extcommunity vpn-target 2:2 import-extcommunity#mpls lsr-id 4.4.4.4mpls#mpls ldp#interface GigabitEthernet0&#x2F;0&#x2F;0 ip address 10.0.34.4 255.255.255.0 mpls mpls ldp#interface GigabitEthernet0&#x2F;0&#x2F;1 ip binding vpn-instance aa ip address 10.0.45.4 255.255.255.0#interface GigabitEthernet0&#x2F;0&#x2F;1.1（子接口绑定VPN bb） dot1q termination vid 10 ip binding vpn-instance bb ip address 10.0.54.4 255.255.255.0 arp broadcast enable interface LoopBack0 ip address 4.4.4.4 255.255.255.255#bgp 100 peer 2.2.2.2 as-number 100 peer 2.2.2.2 connect-interface LoopBack0 ipv4-family vpnv4 policy vpn-target peer 2.2.2.2 enable # ipv4-family vpn-instance aa peer 10.0.45.5 as-number 200 # ipv4-family vpn-instance bb（子接口的EBGP） peer 10.0.54.5 as-number 200#ospf 1 area 0.0.0.0 network 10.0.34.0 0.0.0.255 network 4.4.4.4 0.0.0.0 R5所有配置 sysname R5 ip vpn-instance aa ipv4-family route-distinguisher 600:1 vpn-target 3:3 export-extcommunity vpn-target 3:3 import-extcommunity#ip vpn-instance bb ipv4-family route-distinguisher 800:1 vpn-target 4:4 export-extcommunity vpn-target 4:4 import-extcommunity#mpls lsr-id 5.5.5.5mpls#mpls ldp#isis 1 is-level level-2 network-entity 49.0000.0000.0005.00#interface GigabitEthernet0&#x2F;0&#x2F;0 ip binding vpn-instance aa ip address 10.0.45.5 255.255.255.0#interface GigabitEthernet0&#x2F;0&#x2F;0.1 dot1q termination vid 10 ip binding vpn-instance bb ip address 10.0.54.5 255.255.255.0 arp broadcast enable#interface GigabitEthernet0&#x2F;0&#x2F;1 ip address 10.0.56.5 255.255.255.0 isis enable 1 mpls mpls ldp#interface LoopBack0 ip address 5.5.5.5 255.255.255.255 isis enable 1#bgp 200 peer 7.7.7.7 as-number 200 peer 7.7.7.7 connect-interface LoopBack0 # ipv4-family unicast undo synchronization peer 7.7.7.7 enable # ipv4-family vpnv4 policy vpn-target peer 7.7.7.7 enable # ipv4-family vpn-instance aa peer 10.0.45.4 as-number 100 # ipv4-family vpn-instance bb peer 10.0.54.4 as-number 100# 此时R11能学习到R10的10.10.10.10路由，能通 同理下边的VPN也是 Option B 从PE1传递到ASBR1，再到ASBR2，之间不比较RT，RT还是之前最原始的RT，所以PE1和PE2的RT要匹配（一样） 当VPN实例数量较多时，可以部署专门的RR设备。如图，AS内的PE和ASBR设备只与RR设备建立MP-BGP邻居关系，由RR负责路由的反射传递，PE和ASBR之间无需建立BGP邻居。RR只负责控制平面的VPNv4路由传递，数据转发时，流量不经过RR。 配置思路： 各AS内的MPLS骨干网上分别配置MPLS基本能力和MPLS LDP，建立LDP LSP。（略） 各AS内，PE与ASBR-PE之间建立MP-IBGP对等体关系，交换VPN路由信息。（略） 各AS内，与CE相连的PE上需配置VPN实例，PE与CE之间建立EBGP对等体关系，交换VPN路由信息。（略） 在ASBR上与另一ASBR相连接口上分别使能MPLS，且ASBR之间建立MP-EBGP对等体关系，并且不对接收的VPNv4路由进行VPN-target过滤。 （OptionA中ASBR之间走的是ipv4，所以不需要，mpls，ipv4报文携带数据过去。OptionB中两个ASBR之间传递vpnv4路由，所以要开启mpls走隧道，并且要开启分配标签apply-label per-nexthop，并且不比较RT undo policy vpn-target）两端的RT必须一样才能接受 R4配置 sysname R4# mpls lsr-id 4.4.4.4mpls#mpls ldp# interface GigabitEthernet0&#x2F;0&#x2F;0 ip address 10.0.34.4 255.255.255.0 mpls mpls ldp#interface GigabitEthernet0&#x2F;0&#x2F;1 ip address 10.0.45.4 255.255.255.0 mpls# interface LoopBack0 ip address 4.4.4.4 255.255.255.255#bgp 100 peer 2.2.2.2 as-number 100 peer 2.2.2.2 connect-interface LoopBack0 peer 10.0.45.5 as-number 200 # ipv4-family unicast undo synchronization peer 2.2.2.2 enable peer 10.0.45.5 enable（ASBR之间开启MP-BGP） # ipv4-family vpnv4 undo policy vpn-target（不比较RT） apply-label per-nexthop（给ASBR之间喷配标签） peer 2.2.2.2 enable peer 10.0.45.5 enable# ospf 1 area 0.0.0.0 network 10.0.34.0 0.0.0.255 network 4.4.4.4 0.0.0.0 R5 sysname R5#mpls lsr-id 5.5.5.5mpls#mpls ldp#isis 1 is-level level-2 network-entity 49.0000.0000.0005.00#interface GigabitEthernet0&#x2F;0&#x2F;0 ip address 10.0.45.5 255.255.255.0 mpls# interface GigabitEthernet0&#x2F;0&#x2F;1 ip address 10.0.56.5 255.255.255.0 isis enable 1 mpls mpls ldp#interface GigabitEthernet0&#x2F;0&#x2F;2#interface GigabitEthernet0&#x2F;0&#x2F;3#interface LoopBack0 ip address 5.5.5.5 255.255.255.255 isis enable 1#bgp 200 peer 7.7.7.7 as-number 200 peer 7.7.7.7 connect-interface LoopBack0 peer 10.0.45.4 as-number 100 # ipv4-family unicast undo synchronization peer 7.7.7.7 enable peer 10.0.45.4 enable # ipv4-family vpnv4 undo policy vpn-target apply-label per-nexthop peer 7.7.7.7 enable peer 10.0.45.4 enable# 有RR 两端RT一样 interface GigabitEthernet0&#x2F;0&#x2F;0 ip address 10.0.31.1 255.255.255.0 RR1配置 interface LoopBack0 ip address 11.11.11.11 255.255.255.255#bgp 100 peer 2.2.2.2 as-number 100 peer 2.2.2.2 connect-interface LoopBack0 peer 4.4.4.4 as-number 100 peer 4.4.4.4 connect-interface LoopBack0 # ipv4-family unicast undo synchronization peer 2.2.2.2 enable peer 4.4.4.4 enable # ipv4-family vpnv4 undo policy vpn-target peer 2.2.2.2 enable peer 2.2.2.2 reflect-client peer 4.4.4.4 enable peer 4.4.4.4 reflect-client#ospf 1 area 0.0.0.0 network 10.0.31.0 0.0.0.255 network 11.11.11.11 0.0.0.0 Option C","categories":[{"name":"ie实验","slug":"ie实验","permalink":"http://example.com/categories/ie%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"跨域","slug":"跨域","permalink":"http://example.com/tags/%E8%B7%A8%E5%9F%9F/"}]},{"title":"Hub-Spoke组网","slug":"Hub-Spoke组网","date":"2024-08-19T12:14:31.000Z","updated":"2024-08-19T13:07:29.980Z","comments":true,"path":"2024/08/19/Hub-Spoke组网/","permalink":"http://example.com/2024/08/19/Hub-Spoke%E7%BB%84%E7%BD%91/","excerpt":"","text":"拓扑图如上图，R3，R4，R5之间运行ospf（都是进程1），并建立mpls，R1和R3运行ospf（R3ospf2在vpn实例aa中），R2和R3运行isis（R3的isis在VPN实例bb中）。 粗略记录主要步骤： R1interface GigabitEthernet0&#x2F;0&#x2F;0 ip address 10.0.13.1 255.255.255.0 ospf 1 area 0.0.0.0 network 10.0.13.0 0.0.0.255 network 1.1.1.1 0.0.0.0 R2isis 1 is-level level-2 network-entity 49.0000.0000.0002.00 interface GigabitEthernet0&#x2F;0&#x2F;0 ip address 10.0.23.2 255.255.255.0 isis enable 1 interface LoopBack0 ip address 2.2.2.2 255.255.255.255 isis enable 1 运营商骨干网ospf建立，建立mpls，R3，R5建立ibgp（开启vpnv4功能）：略 R3创建vpn实例aa： ip vpn-instance aa ipv4-family route-distinguisher 100:1 vpn-target 200:1 export-extcommunity vpn-target 100:1 import-extcommunity 创建vpn实例bb： ip vpn-instance bb ipv4-family route-distinguisher 100:2 vpn-target 200:2 export-extcommunity vpn-target 100:1 import-extcommunity 在实例bb建立isis，并引入bgp路由： isis 1 vpn-instance bb is-level level-2 network-entity 49.0000.0000.0003.00 import-route bgp#interface GigabitEthernet0&#x2F;0&#x2F;0 ip binding vpn-instance aa ip address 10.0.13.3 255.255.255.0#interface GigabitEthernet0&#x2F;0&#x2F;1 ip binding vpn-instance bb ip address 10.0.23.3 255.255.255.0 isis enable 1 bgp引入ospf2 bgp100 ipv4-family vpn-instance aa import-route ospf 2 bgp引入isis bgp100 ipv4-family vpn-instance bb import-route isis 1 ospf 2 引入bgpospf 2 vpn-instance aa import-route bgp R5创建两个vpn实例vpnin（只有import RT），vpnout（只有export RT） ip vpn-instance vpnin ipv4-family route-distinguisher 100:60 vpn-target 200:1 200:2 import-extcommunity（两个入的，匹配R1和R2的出）# ip vpn-instance vpnout ipv4-family route-distinguisher 100:6060 vpn-target 100:1 export-extcommunity（一个出，匹配R1和R2的入） interface GigabitEthernet0&#x2F;0&#x2F;1（物理口绑定了出的vpnout实例） ip binding vpn-instance vpnout ip address 10.0.56.5 255.255.255.0# interface GigabitEthernet0&#x2F;0&#x2F;1.1（创建子接口绑定vpnin实例） dot1q termination vid 10 ip binding vpn-instance vpnin ip address 10.0.65.5 255.255.255.0 arp broadcast enable 与R6建立ebgp（两个实例中） ipv4-family vpn-instance vpnin peer 10.0.65.6 as-number 200 # ipv4-family vpn-instance vpnout peer 10.0.56.6 as-number 200 peer 10.0.56.6 allow-as-loop 2（必须有这一条，运行带本地as号通过，不然R5发给R6带as100，R6出去再发给R5带as100不给过） R6interface GigabitEthernet0&#x2F;0&#x2F;1 ip address 10.0.56.6 255.255.255.0 创建子接口 interface GigabitEthernet0&#x2F;0&#x2F;1.1 dot1q termination vid 10 ip address 10.0.65.6 255.255.255.0 arp broadcast enable interface LoopBack0 ip address 6.6.6.6 255.255.255.255 与R5建立ebgp bgp 200 peer 10.0.56.5 as-number 100 peer 10.0.65.5 as-number 100 通告6.6.6.6 bgp200 network 6.6.6.6 255.255.255.255 此时都能学习到所有路由，R1pingR2能通（经过R5-R6中转） 在R5的出口抓包 R1pingR2能抓到icmp的包 以上实验Hub PE和Hub CE之间用的是bgp，也可以采用ospf，要创建两个ospf进程，分别绑定vpnin和vpnout，两个进程的两端宣告用不同的区域，在PE上把bgp引入vpnin的ospf实例中，在CE上把入方向的ospf引入出方向的ospf，在PE上把出方向的ospf引入bgp R5 创建两个vpn ip vpn-instance vpnin ipv4-family route-distinguisher 100:60 vpn-target 200:1 200:2 export-extcommunity vpn-target 200:1 200:2 import-extcommunity#ip vpn-instance vpnout ipv4-family route-distinguisher 100:6060 vpn-target 100:1 export-extcommunity 子接口和物理接口分别绑定两个vpn实例 interface GigabitEthernet0&#x2F;0&#x2F;1 ip binding vpn-instance vpnout ip address 10.0.56.5 255.255.255.0 interface GigabitEthernet0&#x2F;0&#x2F;1.1 dot1q termination vid 10 ip binding vpn-instance vpnin ip address 10.0.65.5 255.255.255.0 arp broadcast enable 在vpn实例中创ospf两个进程 ipv4-family vpn-instance vpnout import-route ospf 200 ospf 100 vpn-instance vpnin（vpnin在ospf 100进程，用area 0） import-route bgp area 0.0.0.0 network 10.0.65.0 0.0.0.255 ospf 200 vpn-instance vpnout（vpnout在ospf 200进程，用area 1） area 0.0.0.1 network 10.0.56.0 0.0.0.255 ipv4-family vpn-instance vpnout import-route ospf 200 R6 interface GigabitEthernet0&#x2F;0&#x2F;1.1 dot1q termination vid 10 ip address 10.0.65.6 255.255.255.0 arp broadcast enable ospf 100 area 0.0.0.0 network 10.0.65.0 0.0.0.255 ospf 200 import-route ospf 100 area 0.0.0.1 network 10.0.56.0 0.0.0.255","categories":[{"name":"ie实验","slug":"ie实验","permalink":"http://example.com/categories/ie%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"Hub&Spoke","slug":"Hub-Spoke","permalink":"http://example.com/tags/Hub-Spoke/"},{"name":"RT","slug":"RT","permalink":"http://example.com/tags/RT/"}]},{"title":"网络安全技术","slug":"网络安全技术","date":"2024-08-13T11:14:23.000Z","updated":"2024-08-14T11:08:36.525Z","comments":true,"path":"2024/08/13/网络安全技术/","permalink":"http://example.com/2024/08/13/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/","excerpt":"","text":"端口隔离为了实现报文之间的二层隔离，用户可以将不同的端口加入不同的VLAN，但这样会浪费有限的VLAN资源。采用端口隔离功能，可以实现同一VLAN内端口之间的隔离。用户只需要将端口加入到隔离组中，就可以实现隔离组内端口之间二层数据的隔离。端口隔离功能为用户提供了更安全、更灵活的组网方案。 端口隔离分为二层隔离三层互通和二层三层都隔离两种模式： 如果用户希望隔离同一VLAN内的广播报文，但是不同端口下的用户还可以进行三层通信，则可以将隔离模式设置为二层隔离三层互通。 如果用户希望同一VLAN不同端口下用户彻底无法通信，则可以将隔离模式配置为二层三层均隔离。 MAC地址表安全动态MAC地址表项：由接口通过报文中的源MAC地址学习获得，表项可老化。在系统复位、接口板热插拔或接口板复位后，动态表项会丢失。 静态MAC地址表项：由用户手工配置并下发到各接口板，表项不老化。在系统复位、接口板热插拔或接口板复位后，保存的表项不会丢失。接口和MAC地址静态绑定后，其他接口收到源MAC是该MAC地址的报文将会被丢弃。 黑洞MAC地址表项：由用户手工配置，并下发到各接口板，表项不可老化。配置黑洞MAC地址后，源MAC地址或目的MAC地址是该MAC的报文将会被丢弃。 端口安全通过在交换机的特定接口上部署端口安全，可以限制接口的MAC地址学习数量，并且配置出现越限时的惩罚措施。 端口安全通过将接口学习到的动态MAC地址转换为安全MAC地址（包括安全动态MAC，安全静态MAC和Sticky MAC），阻止非法用户通过本接口和交换机通信，从而增强设备的安全性。 MAC地址漂移MAC地址漂移是指交换机上一个VLAN内有两个端口学习到同一个MAC地址，后学习到的MAC地址表项覆盖原MAC地址表项的现象。 当一个MAC地址在两个端口之间频繁发生迁移时，即会产生MAC地址漂移现象。 正常情况下，网络中不会在短时间内出现大量MAC地址漂移的情况。出现这种现象一般都意味着网络中存在环路，或者存在网络攻击行为。 防止mac地址漂移： 交换机支持MAC地址漂移检测机制，分为以下两种方式： 基于VLAN的MAC地址漂移检测 配置VLAN的MAC地址漂移检测功能可以检测指定VLAN下的所有的MAC地址是否发生漂移。当MAC地址发生漂移后，可以配置指定的动作，例如告警、阻断接口或阻断MAC地址。 全局MAC地址漂移检测该功能可以检测设备上的所有的MAC地址是否发生了漂移。若发生漂移，设备会上报告警到网管系统。用户也可以指定发生漂移后的处理动作，例如将接口关闭或退出VLAN。 MACsec 交换机流量控制流量抑制： 络中存在的问题：正常情况下，当设备某个二层以太接口收到广播、未知组播或未知单播报文时，会向同一VLAN内的其他二层以太接口转发这些报文，从而导致流量泛洪，降低设备转发性能。 当设备某个以太接口收到已知组播或已知单播报文时，如果某种报文流量过大则可能会对设备造成冲击，影响其他业务的正常处理。 可用的解决方案：流量抑制可以通过配置阈值来限制广播、未知组播、未知单播、已知组播和已知单播报文的速率，防止广播、未知组播报文和未知单播报文产生流量泛洪，阻止已知组播报文和已知单播报文的大流量冲击。 在交换机接口的入方向，例如下图中SW1的GE0&#x2F;0&#x2F;1入方向，通过流量抑制功能可以限制任意报文的发送速率。 在交换机接口出方向，例如下图中SW1的GE0&#x2F;0&#x2F;1出方向，通过流量抑制功能可以阻塞广播，未知组播和未知单播报文。 在交换机的VLAN视图下，通过配置VLAN内流量抑制限制VLAN内广播报文。 风暴控制： 网络中存在的问题：正常情况下，当设备某个二层以太接口收到广播、未知组播或未知单播报文时，会向同一VLAN内的其他二层以太接口转发这些报文，如果网络存在环路，则会导致广播风暴，严重降低设备转发性能。 可用的解决方案：风暴控制可以通过阻塞报文或关闭端口来阻断广播、未知组播和未知单播报文的流量。 风暴控制与流量抑制相比的优势是可以同时监控接口下的广播报文、未知组播报文和未知单播报文各自的包平均速率，并根据阈值对接口采取阻塞相关报文或者关闭物理接口的惩罚动作。 DHCP Snooping DHCP Snooping绑定表根据DHCP租期进行老化或根据用户释放IP地址时发出的DHCP Release报文自动删除对应表项。 DHCP饿死攻击是攻击者通过持续大量地向DHCP Server申请IP地址来实现的，其目的是耗尽DHCP Server地址池中的IP地址，导致DHCP Server没有IP地址分配给正常的用户。 DHCP消息中有一个名叫CHADDR（Client Hardware Address）的字段，该字段是由DHCP客户端填写的，表示的是客户端的硬件地址（也就是客户端的MAC地址）。DHCP Server是针对CHADDR来分配IP地址的，对于不同的CHADDR，DHCP Server会分配不同的IP地址；DHCP Server无法区分什么样的CHADDR是合法的，什么样的CHADDR是非法的。利用这个漏洞，攻击者每申请一个IP地址时，就在DHCP消息的CHADDR字段中填写一个不同的值，以此来冒充是不同的用户在申请IP地址 为了弥补上述漏洞，从而阻止饿死攻击，DHCP Snooping技术支持在端口下对DHCP Request报文的源MAC地址与CHADDR进行一致性检查：如果二者相同，则转发报文；如果二者不相同，则丢弃。如果要在某端口下实施源MAC地址与CHADDR的一致性检查，可以在该端口下使用命令dhcp snooping check dhcp-chaddr enable。还可能存在这样一种饿死攻击，就是攻击者不断同时变换MAC地址和CHADDR，并且每一次变换时，都让CHADDR与MAC地址相同，如此一来，便可以躲过上述源MAC地址与CHADDR的一致性检查！ IPSG 防火墙双机热备在网络中部署防火墙双机时面临的问题 双机热备需要两台硬件和软件配置均相同的防火墙组成双机热备系统。 防火墙之间通过独立的链路连接（心跳线），通过心跳线了解对端的健康状况，向对端备份配置和表项（如会话表、IPsec SA等）。 当一台防火墙出现故障时，业务流量能平滑地切换到另一台设备上处理，使业务不中断。 部署要求： 目前只支持两台设备进行双机热备。 主备设备的产品型号和版本必须相同。 主备设备业务板和接口卡的位置、类型和数目都须相同，否则会出现主用设备备份过去的信息，与备用设备的物理配置无法兼容，导致主备切换后出现问题 为了实现主用设备出现故障时备用设备能平滑地接替工作，必须在主用和备用设备之间备份关键配置命令和状态信息。 防火墙能够备份的配置如下： 策略：安全策略、NAT策略（包括NAT地址池）、NAT Server等。对象：地址、地区、服务、应用、用户等。 网络：安全区域、DNS、IPsec、SSL VPN等。 系统：管理员、虚拟系统、日志配置。 防火墙能够备份的状态信息如下：会话表、SeverMap表、黑名单&#x2F;白名单、PAT方式端口映射表、NO-PAT方式地址映射表、二层转发表（静态MAC备份）、AAA用户表（缺省用户admin不备份）、在线用户监控表、PKI证书、IPsec备份等。 防火墙虚拟系统 1、创建虚拟系统 [FW1]vsys enable [FW1]vsys name A [FW1-vsys-A]assign interface g1&#x2F;0&#x2F;0 2、接口加入安全区域 [FW1]switch vsys A [FW1-A]firewall zone trust [FW1-A-zone-trust]add int g1&#x2F;0&#x2F;0 [FW1-A]fir zon untrust [FW1-A-zone-untrust]add interface Virtual-if 1 3、配置IP地址 4、配置安全策略 进入虚拟系统配置安全策略 se rule name 111 source-zone trust destination-zone untrust source-address 10.1.1.0 mask 255.255.255.0 destination-address 10.2.2.0 mask 255.255.255.0 service icmp action permit 5、配置路由 每个虚拟系统都只有自己的路由，需要配置虚拟系统之间的互通路由 [FW1]ip route-static vpn-instance A 10.2.2.0 24 vpn-instance B","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"端口隔离","slug":"端口隔离","permalink":"http://example.com/tags/%E7%AB%AF%E5%8F%A3%E9%9A%94%E7%A6%BB/"},{"name":"DHCP Snooping","slug":"DHCP-Snooping","permalink":"http://example.com/tags/DHCP-Snooping/"},{"name":"MAC地址漂移","slug":"MAC地址漂移","permalink":"http://example.com/tags/MAC%E5%9C%B0%E5%9D%80%E6%BC%82%E7%A7%BB/"},{"name":"MAC地址表安全","slug":"MAC地址表安全","permalink":"http://example.com/tags/MAC%E5%9C%B0%E5%9D%80%E8%A1%A8%E5%AE%89%E5%85%A8/"}]},{"title":"BGP高级特性","slug":"BGP高级特性","date":"2024-08-12T11:24:30.000Z","updated":"2024-08-13T11:11:37.164Z","comments":true,"path":"2024/08/12/BGP高级特性/","permalink":"http://example.com/2024/08/12/BGP%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/","excerpt":"","text":"正则表达式正则表达式是按照一定的模板来匹配字符串的公式，由普通字符（如字符a到z）和特殊字符组成。 普通字符：匹配的对象是普通字符本身。包括所有的大写和小写字母、数字、标点符号以及一些特殊符号。例如：a匹配abc中的a，10匹配10.113.25.155中的10，@匹配&#120;&#x78;&#120;&#x40;&#120;&#120;&#120;&#x2e;&#x63;&#111;&#109;中的@。 特殊字符：配合普通字符匹配复杂或特殊的字符串组合。位于普通字符之前或之后用来限制或扩充普通字符的独立控制字符或占位符。用来描述它前面的字符的重复使用方式。限定一个完整的范围。 AS_Path FilterAS_Path Filter是将BGP中的AS_Path属性作为匹配条件的过滤器，利用BGP路由携带的AS_Path列表对路由进行过滤。 在不希望接收某些AS的路由时，可以利用AS_Path Filter对携带这些AS号的路由进行过滤，从而实现拒绝某些路由。 配置 （两种方式，①直接peer as-path-filter 1 export②用router-policy过滤） AS路径过滤器的默认行为是deny，即路由如果没有在某一次过滤中被permit则最终不能通过该过滤器的过滤。如果一个过滤器中的所有过滤规则都是deny，则没有路由能通过该过滤器的过滤，这种情况下需要在多次（或一次）deny之后设置一次permit，允许其余所有路由通过过滤器的过滤。(注意加空节点) 本地始发的路由，再本地上做export方向的as过滤不行，原因：会先匹配，最后带上as-path发送给邻居 Community FilterCommunity Filter与Community属性配合使用，可以在不便使用IP Prefix List和AS_Path Filter时，降低路由管理难度。 团体属性过滤器有两种类型： 基本Community Filter。匹配团体号或公认Community属性。（1-99） 高级Community Filter。使用正则表达式匹配团体号。（&gt;100） 默认是internet 配置： 思路： 先邻居开启允许通告com unity属性功能（单向的，如果对端也需要传递，对端也要开启） router-policy1设置路由的com unity值 配置comunity-filter router-policy2中调用com unity-filter bgp视图下，对邻居的export&#x2F;import方向调用router-policy2 ORF邻居按需发送路由 如果设备希望只接收自己需要的路由，但对端设备又无法针对每个与它连接的设备维护不同的出口策略。此时，可以通过配置BGP基于前缀的ORF（Outbound Route Filters，出口路由过滤器）来满足两端设备的需求。 配置： 命令：[Huawei-bgp-af-ipv4] peer { group-name | ipv4-address } ip-prefix ip-prefix-name { import | export } import：对由指定对等体（组）接收的路由应用过滤策略。 export：对向指定对等体（组）发送的路由应用过滤策略。 命令：[Huawei-bgp] peer { group-name | ipv4-address } capability-advertise orf [ non-standard-compatible ] ip-prefix { both | receive | send } [ standard-match ] non-standard-compatible：指定与非标准设备兼容。 both：表示允许发送和接收ORF报文。 receive：表示只允许接收ORF报文。 send：表示只允许发送ORF报文。 standard-match：指定按照RFC标准规定的前缀匹配规则来匹配路由。 案例： BGP对等体组对等体组（Peer Group）是一些具有某些相同策略的对等体的集合。 当一个对等体加入对等体组中时，该对等体将获得与所在对等体组相同的配置。 当对等体组的配置改变时，组内成员的配置也相应改变。 在大型BGP网络中，对等体的数量会很多，其中很多对等体具有相同的策略，在配置时会重复使用一些命令，利用对等体组可以简化配置 group-name：指定对等体组的名称。字符串形式，区分大小写，不支持空格，长度范围是1~47。当输入的字符串两端使用双引号时，可在字符串中输入空格。 external：表示创建EBGP对等体组。 internal：表示创建IBGP对等体组。 BGP认证 BGP使用TCP作为传输协议，只要TCP数据包的源地址、目的地址、源端口、目的端口和TCP序号是正确的，BGP就会认为这个数据包有效，但数据包的大部分参数对于攻击者来说是不难获得的。 为了保证BGP免受攻击，可以在BGP邻居之间使用MD5认证或者Keychain认证来降低被攻击的可能性。 MD5算法配置简单，配置后生成单一密码，需要人为干预才可以更换密码。 Keychain具有一组密码，可以根据配置自动切换，但是配置过程较为复杂，适用于对安全性能要求比较高的网络。 注意：BGP的MD5认证与BGP的Keychain认证互斥。 BGP的GTSM 如果没有使能BGP的GTSM功能，设备收到大量非法BGP报文后，发现是发送给本机的报文，会直接上送控制层面处理。这时将会因为控制层面处理大量攻击报文，导致设备CPU占用率高，系统异常繁忙。 hops：指定需要检测的TTL跳数值。整数形式，取值范围是1~255，缺省值是255。如果配置为hops，则被检测的报文的TTL值有效范围为[255–hops+1, 255]。 4字节AS号 路由反射器 RR1和RR2形成备份，RR1down之后，client2可以从RR2反射学习到路由。配置一样的cluster id，减少路由。 每个集群中的RR之间建立不建立客户关系，普通的ibgp邻居 分级RR与单级RR的路由发布规则相同。 分级RR设计需要考虑两个因素： 顶层全互联的拓扑大小：如果IBGP全互联数量已经多到难以管理了，则可考虑引入RR分级部署。 可替代路径的数量：该因素影响负载分担和资源消耗。越多的层次越会减少负载分担链路的数量，但需要的路由器资源更少。","categories":[],"tags":[{"name":"BGP高级特性","slug":"BGP高级特性","permalink":"http://example.com/tags/BGP%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/"},{"name":"as-path-filter","slug":"as-path-filter","permalink":"http://example.com/tags/as-path-filter/"},{"name":"comunity-filter","slug":"comunity-filter","permalink":"http://example.com/tags/comunity-filter/"},{"name":"正则表达式","slug":"正则表达式","permalink":"http://example.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"备份RR","slug":"备份RR","permalink":"http://example.com/tags/%E5%A4%87%E4%BB%BDRR/"},{"name":"分级RR","slug":"分级RR","permalink":"http://example.com/tags/%E5%88%86%E7%BA%A7RR/"},{"name":"ORF","slug":"ORF","permalink":"http://example.com/tags/ORF/"}]},{"title":"IGP高级特性","slug":"IGP高级特性","date":"2024-08-09T08:10:23.000Z","updated":"2024-08-12T11:24:10.167Z","comments":true,"path":"2024/08/09/IGP高级特性/","permalink":"http://example.com/2024/08/09/IGP%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/","excerpt":"","text":"OSPF快速收敛PRC 智能定时器 OSPF IP FRROSPF IP FRR是动态IP FRR，利用LFA（Loop-Free Alternates）算法预先计算出备份路径，保存在转发表中，以备在故障时将流量快速切换到备份链路上，保证流量不中断，从而达到流量保护的目的，该功能可将故障恢复时间降低到50 ms以内。 LFA计算备份链路的基本思路是：以可提供备份链路的邻居为根节点，利用SPF算法计算出到目的节点的最短距离。然后，按照不等式计算出开销最小且无环的备份链路 ospf与bfd联动 等价路由当路由表中存在到达同一目的地址，且同一路由协议发现的多条路由时，若这几条路由的开销值也相同，那么这些路由就是等价路由，可以实现负载分担。 设备将按照负载分担的方式从多条等价路由发送报文到同一目的地址。 设置进行负载分担的等价路由的最大数量： [Huawei-ospf-1] maximum load-balancing number 缺省路由 通告： 过滤LSA ospf与bgp联动当有新的设备加入到网络中，或者设备重启时，可能会出现在BGP收敛期间内网络流量丢失的现象。这是IGP收敛速度比BGP快造成的。 FAFA（Forwarding Address，转发地址）：到达所通告的目的地的数据包应该被转发到的地址，如果转发地址为0.0.0.0，那么数据包将被转发到始发ASBR上。 OSPF的Type5 LSA和Type7 LSA中包含一个特别的字段FA，FA的引入使得OSPF在某些特殊的场景下可以避免次优路径问题。 当ASBR引入外部路由时，若Type5 LSA中的FA字段为0，表示路由器认为到达目的网段的数据包应该发往该ASBR； 若Type5 LSA中的FA字段不为0，表示路由器认为到达目的网段的数据包应该发往这个FA所标识的设备。 当以下条件全部满足时，FA字段才可以被设置为非0： ASBR在其连接外部网络的接口（外部路由的出接口）上激活了OSPF； 该接口没有被配置为Silent-Interface；该接口的OSPF网络类型为Broadcast或NBMA； 该接口的IP地址在OSPF配置的network命令指定的网段范围内； 到达FA地址的路由必须是OSPF区域内部路由或区域间路由，这样接收到该外部LSA的路由器才能够加载该LSA进入路由表。加载的外部LSA生成的路由条目下一跳与到达FA地址的下一跳相同。 NSSA区域Type7 LSA转化为Type5 LSA：缺省情况下，转换路由器是NSSA区域中Router ID最大的区域边界路由器（ABR）。LSA头部Options字段中的P-bit（Propagate bit）用于告知转化路由器该条Type7 LSA是否需要转化为Type5 LSA。只有P-bit置位并且FA不为0的Type7 LSA才能转化为Type5 LSA。区域边界路由器产生的Type7 LSA缺省路由不会置位P-bit。注意：所有的OSPF LSA有相同的LSA头部，P-bit在LSA头部中的Options字段。 GRGR（Graceful Restart，平滑重启）技术保证了设备在重启过程中转发层面能够继续指导数据的转发，同时控制层面邻居关系的重建以及路由计算等动作不会影响转发层面的功能，从而避免了路由振荡引发的业务中断，保证了关键业务的数据转发，提高了整网的可靠性。 ISIS高级特性I-SPFI-SPF的工作原理：当网络拓扑改变的时候，只对受影响的节点进行路由计算，而不是对全部节点重新进行路由计算，从而加快了路由的计算。 使用SPF算法进行路由计算：当网络拓扑中有一个节点发生变化时，SPF算法需要重新计算网络中的所有节点，计算时间长，占用过多的CPU资源，影响整个网络的收敛速度。 I-SPF改进了SPF算法，除了第一次SPF计算时需要计算全部节点外，之后每次都通过I-SPF计算受到影响的节点，而最后生成的最短路径树与原来的算法所计算的结果相同，大大降低了CPU的占用率，提高了网络收敛速度。 在IS-IS网络中，I-SPF和PRC结合使用。 如果I-SPF计算后的最短路径树改变，PRC会只处理那个变化的节点上的所有叶子（路由）。如果经过I-SPF计算后的最短路径树并没有变化，则PRC只处理变化的叶子信息。比如一个节点使能一个IS-IS接口，则整个网络拓扑的最短路径树是不变的，这时PRC只更新这个节点的接口路由，从而节省CPU占用率。 （注意区分PRC，I-SPF是计算变化的节点，PRC计算变化的路由） LSP快速扩散LSP快速扩散：此特性可以加快LSP的扩散速度。 正常情况下，当IS-IS路由器收到其它路由器发来的LSP时，如果此LSP比本地LSDB中相应的LSP要新，则更新LSDB中的LSP，并用一个定时器定期将LSDB内已更新的LSP扩散出去。 LSP快速扩散特性改进了这种方式，使能了此特性的设备收到一个或多个较新的LSP时，在路由计算之前，先将小于指定数目的LSP扩散出去，加快LSDB的同步过程。这种方式在很大程度上可以提高整个网络的收敛速度。 配置LSP快速扩散： [Huawei-isis-1] flash-flood [ lsp-count | max-timer-interval interval | [ level-1 | level-2 ] ] 注意：用户可以指定每次扩散的LSP数量，这个数量是针对所有IS-IS接口的。如果需要发送的LSP的数量大于这个数，则就发送lsp-count个LSP。如果配置了定时器，在路由计算之前如果这个定时器未超时，则立即扩散；否则在该定时器超时后发送。 lsp-count：指定每个接口一次扩散LSP的最大数量。整数形式，取值范围是1～15。缺省值是5。 max-timer-interval interval：指定LSP扩散的最大间隔时间。整数形式，取值范围是10～50000，单位是毫秒。缺省值是10毫秒。 level-1：表示在Level-1中使能此特性。如果命令中没有指定级别，则缺省同时在Level-1和Level-2中使能此功能。 level-2：表示在Level-2中使能此特性。如果命令中没有指定级别，则缺省同时在Level-1和Level-2中使能此功能。 等价路由当IS-IS网络中有多条冗余链路时，可能会出现多条等价路由， 此时可以采取两种方式：配置负载分担。 流量会被均匀的分配到每条链路上。该方式可以提高网络中链路的利用率及减少某些链路负担过重造成阻塞发生的情况。但是由于对流量转发具有一定的随机性，因此可能不利于对业务流量的管理。 配置等价路由优先级。 针对等价路由中的每一条路由，明确指定其优先级，优先级高的路由将被优选，优先级低的路由可以作为备用链路。当IS-IS网络中有多条冗余链路时，可能会出现多条等价路由，即达到某一目的网段有多条等开销路径。配置等价路由优先级可以在不修改原有配置的基础上，指定某条路由被优选，便于业务的管理，同时提高网络的可靠性。注意：配置等价路由优先级后，IS-IS设备在转发到达目的网段的流量时，将不采用负载分担方式，而是将流量转发到优先级最高的下一跳。 缺省路由在IS-IS中，主要通过以下3种方式控制缺省路由的生成和发布。 在Level-1-2设备上，控制其产生的Level-1 LSP中ATT位的置位情况。 在Level-1设备上，通过配置使其即使收到ATT位置位的Level-1 LSP也不会自动产生缺省路由。 在IS-IS中发布缺省路由 设置ATT置位控制产生缺省路由: IS-IS规定，如果IS-IS Level-1-2设备根据LSDB判断通过Level-2区域比Level-1区域能够到达更多的区域，该设备会在所发布的Level-1 LSP内将ATT位置位。对于收到ATT位置位的LSP报文的Level-1设备，会生成一条目的地为发送该LSP的Level-1-2设备地址的缺省路由。 以上是协议的默认原则，在实际应用中，可以根据需要对ATT比特位进行手动配置以更好地为网络服务。 命令： [Huawei-isis-1] attached-bit advertise { always | never }always：指定ATT位永远置位，收到该LSP的Level-1设备会生成缺省路由。never：指定ATT位永不置位，可以避免Level-1设备生成缺省路由，减小路由表的规模。 虽然ATT位同时在Level-1 LSP和Level-2 LSP中进行了定义，但是它只会在Level-1 LSP中被置位，并且只有Level-1-2设备会设置这个字段，因此，该命令仅对Level-1-2设备生效。 配置Level-1设备不将缺省路由下发到路由表，有以下两种方式可以实现： 在Level-1-2设备上配置attached-bit advertise never命令，使得其不会发布ATT位置位的LSP。 在与Level-1-2设备相连的Level-1设备上配置attached-bit avoid-learning命令。其中，attached-bit avoid-learning命令适用于需要针对指定设备配置的情况。 ISIS发布缺省路由 在具有外部路由的边界设备上配置IS-IS发布缺省路由可以使该设备在IS-IS路由域内发布一条0.0.0.0&#x2F;0的缺省路由。 在执行此配置后，IS-IS域内的其他设备在转发流量时，将所有去往外部路由域的流量首先转发到该设备，然后通过该设备去往外部路由域。 通常，当网络中部署了IS-IS和其他路由协议时，为了实现IS-IS域内的流量可以到达IS-IS域外，通常有如下两种方式：在边界设备上配置IS-IS设备向IS-IS域发布缺省路由。该方式较为简单，不需要学习外部路由。在边界设备上将其他路由域的路由引入到IS-IS中。 [Huawei-isis-1] default-route-advertise [ always | match default | route-policy route-policy-name ] [ cost cost | tag tag | [ level-1 | level-1-2 | level-2 ] ] [ avoid-learning ] LSP分片 Mode-2工作原理：虚拟系统不参与路由SPF计算，网络中所有路由器都知道虚拟系统生成的LSP实际属于初始系统。","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"IGP高级特性","slug":"IGP高级特性","permalink":"http://example.com/tags/IGP%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/"}]},{"title":"BFD","slug":"BFD","date":"2024-08-07T11:43:29.000Z","updated":"2024-08-15T11:28:50.005Z","comments":true,"path":"2024/08/07/BFD/","permalink":"http://example.com/2024/08/07/BFD/","excerpt":"","text":"定义双向转发检测BFD（Bidirectional Forwarding Detection）是一种高速故障检测机制，在两个系统之间建立BFD会话并周期性地发送BFD报文，如果一方在协商的检测时间内没有接收到BFD报文，则认为这条双向通道上发生了故障。上层协议通过BFD感知到链路故障后可以及时采取措施，进行故障恢复。 BFD提供如下功能： 对相邻设备之间的通道提供轻负荷、快速故障检测。这些故障包括接口故障，数据链路故障，甚至有可能是设备本身故障。 提供一个单一的机制，能够用来对任何媒介、任何协议层进行实时地检测。 检测机制 BFD的检测机制是两个系统建立BFD会话，并沿它们之间的路径周期性发送BFD控制报文，如果一方在既定的时间内没有收到BFD控制报文，则认为路径上发生了故障。 BFD控制报文封装在UDP报文中传送。会话开始阶段，双方系统通过控制报文中携带的参数（会话标识符、期望的收发报文最小时间间隔、本端BFD会话状态等）进行协商。协商成功后，以协商的报文收发时间在彼此之间的路径上定时发送BFD控制报文。 BFD的主要操作模式称为异步模式。在这种模式下，系统之间相互周期性地发送BFD控制报文，如果某个系统连续几个报文都没有接收到，就认为此BFD会话的状态是Down。 报文 重要字段解释： vers：版本，1 My Discriminator 32 bits BFD会话连接本地标识符。发送系统产生的一个唯一的、非0鉴别值，用来区分一个系统的多个BFD会话。 Your Discriminator 32 bits BFD会话连接远端标识符。0：未知。Non-0：从远端系统接收到的鉴别值，这个域直接返回接收到的“My Discriminator”。 Desired Min TX Interval 32 bits 本地支持的最小BFD报文发送间隔，单位为毫秒。 Required Min RX Interval 32 bits 本地支持的最小BFD报文接收间隔，单位为毫秒。 Required Min Echo RX Interval 32 bits 本地支持的最小Echo报文接收间隔，单位为毫秒（如果本地不支持Echo功能，则设置0）。 BFD会话建立 BFD会话建立方式 描述 静态BFD会话 手工指定标识符的静态BFD会话静态BFD会话是指通过命令行手工配置BFD会话参数，包括了配置本地标识符和远端标识符等，手工下发BFD会话建立请求。当BFD会话的一端收到BFD控制报文时，将收到报文中的My Discriminator和Your Discriminator的值，与本地BFD会话进行比较，判断是否匹配。标识符自协商的静态BFD会话标识符自协商的静态BFD会话是指手工创建BFD会话，但不需要配置本地标识符和远端标识符，本地标识符和远端标识符通过会话协商获得。在静态路由与BFD联动应用中，如果对端设备不支持静态BFD会话，而采用动态BFD会话，此时本端设备既要与之互通，又要能够实现静态路由与BFD联动时，必须使用静态标识符自协商BFD会话。 动态BFD会话 动态BFD会话是指由路由协议动态触发BFD会话建立。动态BFD中，本地标识符是动态分配的，远端标识符从对端的BFD报文中获取。路由协议在建立了新的邻居关系时，将对应的参数及检测参数（包括目的地址、源地址等）通告给BFD，BFD根据收到的参数建立起会话。当发生链路故障时，联动了BFD的路由协议可以快速感知到BFD会话状态变为Down，从而实现将流量快速切换到备份路径，避免了数据大量丢失。动态BFD具有较高的灵活性，适用于全网都对可靠性要求较高的网络。动态建立BFD会话时，系统对本地标识符和远端标识符的处理方式如下：动态分配本地标识符：当应用程序触发动态创建BFD会话时，系统分配属于动态会话标识符区域的值作为BFD会话的本地标识符。然后向对端发送Your Discriminator的值为0的BFD控制报文，进行会话协商。自学习远端标识符：当BFD会话的一端收到Your Discriminator的值为0的BFD控制报文时，根据四元组（源地址、目的地址、出接口、VPN索引）判断该报文是否与本地BFD会话匹配，如果匹配，则学习接收到的BFD报文中My Discriminator的值，获取远端标识符。 会话状态： Down：会话处于Down状态或刚刚创建。 Init：已经能够与对端系统通信，本端希望使会话进入Up状态。 Up：会话已经建立成功。 会话状态变化通过BFD报文的State字段传递，系统根据自己本地的会话状态和接收到的对端BFD报文驱动状态改变。BFD状态机的建立和拆除都采用三次握手机制，以确保两端系统都能知道状态的变化。以BFD会话建立为例，简单介绍状态机的迁移过程。 BFD缺省参数 BFD检测机制 BFD检测时间 单臂回声 配置","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[]},{"title":"IPv6","slug":"IPv6","date":"2024-08-06T10:32:29.000Z","updated":"2024-08-06T12:46:40.426Z","comments":true,"path":"2024/08/06/IPv6/","permalink":"http://example.com/2024/08/06/IPv6/","excerpt":"","text":"地址格式 地址结构： 接口标识 基于mac地址，第七位取反，中间插入FFFE（16位），mac（48位）+FFFE（16位）&#x3D;接口id（64位） 地址类型 单播地址（Unicast Address）：标识一个接口，目的地址为单播地址的报文会被送到被标识的接口。在IPv6中，一个接口拥有多个IPv6地址是非常常见的现象。 IPv6单播地址分成以下几种类型： 全局单播地址 (Global Unicast Addresses) 链路本地地址 (Link Local Addresses) 唯一本地地址 (Unique Local Addresses - ULA) 环回地址 (Loopback (::1)) 未指定地址 (Unspecified (::)) 组播地址（Multicast Address）：标识多个接口，目的地址为组播地址的报文会被送到被标识的所有接口。只有加入相应组播组的设备接口才会侦听发往该组播地址的报文。 任播地址（Anycast Address）：任播地址标识一组网络接口（通常属于不同的节点）。目标地址是任播地址的数据包将发送给其中路由意义上最近的一个网络接口。 IPv6没有定义广播地址（Broadcast Address） 全球单播地址GUA（Global Unicast Address，全球单播地址），也被称为可聚合全球单播地址。该类地址全球唯一，用于需要有互联网访问需求的主机，相当于IPv4的公网地址。2000::&#x2F;3 ****这种类型的地址允许路由前缀的聚合，从而限制了全球路由表项的数量****。 唯一本地地址ULA（Unique Local Address，唯一本地地址）是IPv6私网地址，只能够在内网中使用。该地址空间在IPv6公网中不可被路由，因此不能直接访问公网。 唯一本地地址使用FC00::&#x2F;7地址块，目前仅使用了FD00::&#x2F;8地址段。FC00::&#x2F;8预留为以后拓展用。ULA虽然只在有限范围内有效，但也具有全球唯一的前缀（虽然随机方式产生，但是冲突概率很低）。 链路本地地址LLA（Link-Local Address，链路本地地址）是IPv6中另一种应用范围受限制的地址类型。LLA的有效范围是本地链路，前缀为FE80::&#x2F;10。 LLA用于一条单一链路层面的通信，例如IPv6地址无状态自动配置、IPv6邻居发现等。源或目的IPv6地址为链路本地地址的数据包将不会被转发到始发的链路之外，换句话说，链路本地地址的有效范围为本地链路。每一个IPv6接口都必须具备一个链路本地地址。华为设备支持自动生成和手工指定两种配置方式。 组播地址 FF02::1（链路本地的所有结点） FF02::2（链路本地的所有路由器） FF02::5（所有启用ospfv3的路由器） FF02::6（ospfv3DR和BDR侦听的地址） DD02::D（PIMv2路由器侦听的地址） 组播mac地址 前16bit 33：33，后32bit从组播ipv6地址后32bit映射 复习（IPv4组播MAC地址的高24bit为0x01005E，第25bit为0，低23bit为IPv4组播地址的低23bit映射。） 被请求节点的组播地址 当一个节点具有了单播或任播地址，就会对应生成一个被请求节点组播地址，并且加入这个组播组。 该地址主要用于邻居发现机制和地址重复检测功能。被请求节点组播地址的有效范围为本地链路范围。 被请求节点组播地址的应用场景举例： 在IPv6中，ARP及广播都被取消，当设备需要请求某个IPv6地址对应的MAC地址时，设备依然需要发送请求报文，但是该报文是一个组播报文，其目的IPv6地址是目标IPv6单播地址对应的被请求节点组播地址，由于只有目标节点才会侦听这个被请求节点组播地址，所以该组播报文可以被目标节点所接收，同时不会占用其他非目标节点的网络性能。 任播地址 任播过程涉及一个任播报文发起方和一个或多个响应方。任播报文的发起方通常为请求某一服务（例如，Web服务）的主机。任播地址与单播地址在格式上无任何差异，唯一的区别是一台设备可以给多台具有相同地址的设备发送报文。 网络中运用任播地址有很多优势：业务冗余。比如，用户可以通过多台使用相同地址的服务器获取同一个服务（例如，Web服务）。这些服务器都是任播报文的响应方。如果不是采用任播地址通信，当其中一台服务器发生故障时，用户需要获取另一台服务器的地址才能重新建立通信。如果采用的是任播地址，当一台服务器发生故障时，任播报文的发起方能够自动与使用相同地址的另一台服务器通信，从而实现业务冗余。提供更优质的服务。 比如，某公司在A省和B省各部署了一台提供相同Web服务的服务器。基于路由优选规则，A省的用户在访问该公司提供的Web服务时，会优先访问部署在A省的服务器，提高访问速度，降低访问时延，大大提升了用户体验。 ICMPv6报文格式 icmpv6常用报文 NDP 路由器发现 ipv6 nd ra { max-interval maximum-interval | min-interval minimum-interval }命令用来配置发送周期。 地址解析IPv6地址解析通过ICMPv6（NS和NA报文）来实现。 在三层完成地址解析， 主要带来以下几个好处：地址解析在三层完成，不同的二层介质可以采用相同的地址解析协议。 可以使用三层的安全机制避免地址解析攻击。使用组播方式发送请求报文，减少了二层网络的性能压力。 类似arp协议，ipv6没有广播，所以用组播，目的地址时被请求节点的地址，FF02::1:FFxx:xx(xx是目的ip地址后24位，前104位固定) ipv6邻居状态 R1先发送NS报文，并生成缓存条目，此时，邻居状态为Incomplete。若收到R2回复的NA报文，则邻居状态由Incomplete变为Reachable，否则固定时间后邻居状态由Incomplete变为Empty。经过邻居可达时间（默认30s），邻居状态由Reachable变为Stale，即未知是否可达。如果在Reachable状态，R1收到R2的非请求NA报文，且其中携带的R2的链路层地址和表项中不同，则邻居状态马上变为Stale。在Stale状态若R1要向R2发送数据，则邻居状态由Stale变为Delay，并发送NS请求。在经过一段固定时间后，邻居状态由Delay变为Probe，其间若有NA应答，则邻居状态由Delay变为Reachable。在Probe状态，R1每隔一定时间间隔（默认1s）发送单播NS，发送固定次数后，有应答则邻居状态变为Reachable，否则邻居状态变为Empty。 重复地址检测 一个地址在通过重复地址检测之前称为“tentative地址”，即“试验地址”。 此时该接口不能使用这个试验地址进行单播通讯。若2个节点配置相同地址，同时作重复地址检测时，当一方收到对方发出的DAD NS报文，则接收方将不启用该地址。 重定向 IPv6无状态自动获取地址不需要IPv6地址分配服务器保存和管理每个节点的状态信息的一种IPv6地址自动配置方式，称之为IPv6无状态地址自动配置。 无状态地址自动配置方式基于NDP来实现。 DHCPv6DHCPv6又分为如下三种： DHCPv6有状态自动配置：DHCPv6服务器自动配置IPv6地址&#x2F;前缀及其他网络配置参数（DNS、NIS、SNTP服务器地址等参数）。 DHCPv6无状态自动配置：主机IPv6地址仍然通过路由通告方式自动生成，DHCPv6服务器只分配除IPv6地址以外的配置参数，包括DNS服务器等参数。 DHCPv6 PD（Prefix Delegation，前缀代理）自动配置：下层网络路由器不需要再手工指定用户侧链路的IPv6地址前缀，它只需要向上层网络路由器提出前缀分配申请，上层网络路由器便可以分配合适的地址前缀给下层路由器，下层路由器把获得的前缀（前缀一般长度小于64）进一步自动细分成64位前缀长度的子网网段，把细分的地址前缀再通过路由通告(RA)至与IPv6主机直连的用户链路上，实现主机的地址自动配置，从而完成整个IPv6网络的层次化布局。 四步交互 两步交互 dhcpv6报文总结 基本配置 路由器配置全球单播地址之后才能配置生成链路本地地址，PC可以自己直接生成链路本地地址 配置案例","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"IPv6","slug":"IPv6","permalink":"http://example.com/tags/IPv6/"},{"name":"DHCPv6","slug":"DHCPv6","permalink":"http://example.com/tags/DHCPv6/"},{"name":"ICMPv6","slug":"ICMPv6","permalink":"http://example.com/tags/ICMPv6/"}]},{"title":"防火墙","slug":"防火墙","date":"2024-08-05T11:45:48.000Z","updated":"2024-08-05T12:25:59.639Z","comments":true,"path":"2024/08/05/防火墙/","permalink":"http://example.com/2024/08/05/%E9%98%B2%E7%81%AB%E5%A2%99/","excerpt":"","text":"包过滤防火墙包过滤是指基于五元组对每个数据包进行检测，根据配置的安全策略转发或丢弃数据包。 包过滤防火墙的基本原理是：通过配置访问控制列表（Access Control List，ACL）实施数据包的过滤。 包过滤防火墙的缺点主要表现以下几点：随着ACL复杂度和长度的增加，其过滤性能呈指数下降；静态的ACL规则难以适应动态的安全要求；包过滤不检查会话状态也不分析数据，这很容易让黑客蒙混过关。例如，攻击者可以使用假冒地址进行欺骗，通过把自己主机IP地址设成一个合法主机IP地址，就能很轻易地通过报文过滤器。 状态检测防火墙 安全区域 防火墙本身的接口默认时local区域，用户可以自己创建区域（优先级不能和默认四个区域优先级一样） 安全策略当防火墙收到流量后，对流量的属性（五元组、用户、时间段等）进行识别，然后与安全策略的条件进行匹配。 如果条件匹配，则此流量被执行对应的动作。 当配置多条安全策略规则时，安全策略的匹配按照策略列表的顺序执行，即从策略列表顶端开始逐条向下匹配。 如果流量匹配了某个安全策略，将不再进行下一个策略的匹配。安全策略的配置顺序很重要，需要先配置条件精确的策略，再配置宽泛的策略。 会话表 通过会话中的五元组（源ip，目的ip，源端口，目的端口，协议）信息可以唯一确定通信双方的一条连接。 防火墙将要删除会话的时间称为会话的老化时间。 一条会话表示通信双方的一个连接。多条会话的集合叫做会话表。 会话建立和包处理流程： 防火墙为各种协议设定了会话老化机制。当一条会话在老化时间内没有被任何报文匹配，则会被从会话表中删除。这种机制可以避免防火墙的设备资源被大量无用、陈旧的会话表项消耗。 ASPF和Server-map 由于某些特殊应用会在通信过程中临时协商端口号等信息，所以需要设备通过检测报文的应用层数据，自动获取相关信息并创建相应的会话表项，以保证这些应用的正常通信。这个功能称为ASPF（Application Specific Packet Filter），所创建的会话表项叫做Server-map表。 对于多通道协议，例如FTP，ASPF功能可以检查控制通道和数据通道的连接建立过程，通过生成server-map表项，确保FTP协议能够穿越设备，同时不影响设备的安全检查功能。 Server-map表相当于在防火墙上开通了“隐形通道”，使得像FTP这样的特殊应用的报文可以正常转发。当然这个通道不是随意开的，是防火墙分析了报文的应用层信息之后，提前预测到后面报文的行为方式，所以才打开了这样的一个通道。 Server-map通常只是用检查首个报文，通道建立后的报文还是根据会话表来转发。Server-map表在防火墙转发中非常重要，不只是ASPF会生成，NAT Server等特性也会生成Server-map表。 如图所示：Server-map表中记录了FTP服务器向FTP客户端的2071端口号发起的数据连接，服务器向客户端发起数据连接时将匹配这个Server-map表转发，而无需再配置反向安全策略。数据连接的第一个报文匹配Server-map表转发后，防火墙将生成这条数据连接的会话，该数据连接的后续报文匹配会话表转发，不再需要重新匹配Server-map表项。Server-map表项由于一直没有报文匹配，经过一定老化时间后就会被删除。这种机制保证了Server-map表项这种较为宽松的通道能够及时被删除，保证了网络的安全性。当后续发起新的数据连接时会重新触发建立Server-map表项。 示例： Server-map表与会话表的关系如下：Server-map表记录了应用层数据中的关键信息，报文命中该表后，不再受安全策略的控制；会话表是通信双方连接状态的具体体现；Server-map表不是当前的连接信息，而是防火墙对当前连接分析后得到的即将到来报文的预测；防火墙收到报文先检查是否命中会话表；如果没有命中则检查是否命中Server-map表；命中Server-map表的报文不受安全策略控制；防火墙最后为命中Server-map表的数据创建会话表。 防火墙nat 当公网用户主动访问Nat地址池中的地址，FW收到此报文后，无法匹配到会话表，根据缺省路由转发给路由器。路由器收到报文后，查找路由表又发送给FW。报文就在路由器和FW之间循环转发，造成路由环路。 黑洞路由的目的是：将目的地址使Nat地址池中地址的报文丢弃 nat server","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"防火墙","slug":"防火墙","permalink":"http://example.com/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"},{"name":"server-map","slug":"server-map","permalink":"http://example.com/tags/server-map/"}]},{"title":"堆叠","slug":"堆叠","date":"2024-07-29T14:10:05.000Z","updated":"2024-07-29T14:59:13.489Z","comments":true,"path":"2024/07/29/堆叠/","permalink":"http://example.com/2024/07/29/%E5%A0%86%E5%8F%A0/","excerpt":"","text":"基本概念堆叠（iStack），将多台支持堆叠特性的交换机通过堆叠线缆连接在一起，从逻辑上虚拟成一台交换设备，作为一个整体参与数据转发。 集群（Cluster Switch System，CSS），将两台支持集群特性的交换机设备组合在一起，从逻辑上虚拟成一台交换设备。 集群只支持两台设备，一般高端框式交换机支持CSS、盒式设备支持iStack。通过使用堆叠、集群技术结合链路聚合技术可以简单构建高可靠、无环的园区网络。 一般接入、汇聚层盒式交换机采用堆叠技术，汇聚、核心层交换机采用集群技术。 在逻辑交换机之间使用链路聚合技术，无需部署STP、VRRP实现高可靠性。 实现高可靠性的同时设备之间的链路可以同时传输流量，链路利用率得以提升。 角色 主交换机（Master） 主交换机负责管理整个堆叠。堆叠系统中只有一台主交换机。 备交换机（Standby） 备交换机是主交换机的备份交换机。堆叠系统中只有一台备交换机。当主交换机故障时，备交换机会接替原主交换机的所有业务。 从交换机（Slave） 从交换机用于业务转发，堆叠系统中可以有多台从交换机。从交换机数量越多，堆叠系统的转发带宽越大。 除主交换机和备交换机外，堆叠中其他所有的成员交换机都是从交换机。当备交换机不可用时，从交换机承担备交换机的角色。 堆叠ID堆叠ID用来标识堆叠成员交换机，是成员交换机的槽位号，取值范围是0～8，默认是0。每个堆叠成员交换机在堆叠系统中具有唯一的堆叠ID。 当堆叠系统有新成员加入时，如果新成员与已有成员堆叠ID冲突，则堆叠主交换机从0～最大的堆叠ID进行遍历，找到第一个空闲的ID分配给该新成员。 在建立堆叠时，建议提前规划好设备的堆叠ID。 当堆叠成员从堆叠系统中移除时，会继续使用堆叠系统使用的堆叠ID，可以执行命令stack slot slot-id renumber 0手动恢复堆叠ID为缺省值0。如果不手动恢复堆叠ID，该交换机再次加入其它堆叠系统，和新堆叠系统的堆叠ID冲突时，才会被重新分配新的堆叠ID。 堆叠建立堆叠优先级： 主要用于角色选举过程中确定成员交换机的角色，优先级值越大表示优先级越高，优先级越高当选为主交换机的可能性越大。 堆叠主交换机的选举过程是：先比较交换机启动时间，再比较堆叠优先级。当两台交换机启动时间相差20秒以内时，则认为交换机启动时间相同，此时堆叠优先级大的交换机将被选举为主交换机。所以建议将优先级最大值分配给希望成为主交换机的设备。 堆叠优先级取值范围为1～255，缺省优先级值为100，可以通过display stack查看，通过命令stack slot slot-id priority priority修改。修改后的堆叠优先级不影响当前主交换机。只有堆叠系统复位重新选举时，修改后的堆叠优先级才生效。 堆叠优先级相同时，MAC地址小的交换机优先竞争为主交换机 物理连接：根据网络需求，选择适当的连接方式和连接拓扑，组建堆叠网络。 主交换机选举：成员交换机之间相互发送堆叠竞争报文，并根据选举原则，选出堆叠系统主交换机。 堆叠ID分配和备交换机选举：主交换机收集所有成员交换机的拓扑信息，向所有成员交换机分配堆叠ID，之后选出堆叠系统备交换机。 软件版本和配置文件同步：主交换机将整个堆叠系统的拓扑信息同步给所有成员交换机，成员交换机同步主交换机的系统软件和配置文件，之后进入稳定运行状态。 堆叠主交换机选举超时时间为20s，堆叠成员交换机上电或重启时，由于不同成员交换机所需的启动时间可能差异比较大，因此不是所有成员交换机都有机会参与主交换机的第一次选举。20s后启动的交换机加入堆叠系统时，会重新进行主交换机的竞争。原主交换机竞争失败时会重启然后再以非主交换机加入堆叠， 堆叠加入（不带电） 新加入的交换机会选举为从交换机，堆叠系统中原有主备从角色不变。新加入的是从 堆叠合并堆叠合并是指稳定运行的两个堆叠系统合并成一个新的堆叠系统。 两个堆叠系统的主交换机通过竞争，选举出一个更优的作为新堆叠系统的主交换机。 竞争成功的主交换机所在的堆叠系统将保持原有主备从角色和配置不变，业务也不会受到影响；而另外一个堆叠系统的所有成员交换机将重新启动，以从交换机的角色加入到新堆叠系统，其堆叠ID将由新主交换机重新分配，并将同步新主交换机的配置文件和系统软件，该堆叠系统的原有业务也将中断。 堆叠系统合并流程与堆叠成员加入流程类似，堆叠合并时主交换机的选举规则为：比较运行时间，运行时间较早的堆叠系统竞争为主；如果两个堆叠系统的运行时间一样，其主交换机的选举规则与堆叠建立时一样。 堆叠分裂与多主检测堆叠分裂后，原主备交换机被分裂到同一个堆叠系统中：原主交换机会重新计算堆叠拓扑，将移出的成员交换机的拓扑信息删除，并将新的拓扑信息同步给其他成员交换机；而移出的成员交换机检测到堆叠协议报文超时，将自行复位，重新进行选举。 堆叠分裂后，原主备交换机被分裂到不同的堆叠系统中：原主交换机所在堆叠系统重新指定备交换机，重新计算拓扑信息并同步给其他成员交换机；原备交换机所在堆叠系统将发生备升主，原备交换机升级为主交换机，重新计算堆叠拓扑并同步到其他成员交换机，并指定新的备交换机。 多主检测MAD（Multi-Active Detection），是一种检测和处理堆叠分裂的协议。链路故障导致堆叠系统分裂后，MAD可以实现堆叠分裂的检测、冲突处理和故障恢复，降低堆叠分裂对业务的影响。 直连检测方式 直连检测方式是指堆叠成员交换机间通过普通线缆直连的专用链路进行多主检测。在直连检测方式中，堆叠系统正常运行时，不发送MAD报文；堆叠系统分裂后，分裂后的两台交换机以1s为周期通过检测链路发送MAD报文进行多主冲突处理。 通过中间设备直连：堆叠系统的所有成员交换机之间至少有一条检测链路与中间设备相连。 Full-mesh方式直连：堆叠系统的各成员交换机之间通过检测链路建立Full-mesh全连接，即每两台成员交换机之间至少有一条检测链路。 代理检测方式 代理检测方式是在堆叠系统Eth-Trunk上启用代理检测，在代理设备上启用MAD检测功能。此种检测方式要求堆叠系统中的所有成员交换机都与代理设备连接，并将这些链路加入同一个Eth-Trunk内。与直连检测方式相比，代理检测方式无需占用额外的接口，Eth-Trunk接口可同时运行MAD代理检测和其他业务。 在代理检测方式中，堆叠系统正常运行时，堆叠成员交换机以30s为周期通过检测链路发送MAD报文。堆叠成员交换机对在正常工作状态下收到的MAD报文不做任何处理；堆叠分裂后，分裂后的两台交换机以1s为周期通过检测链路发送MAD报文进行多主冲突处理。 堆叠分裂后，MAD冲突处理机制会使分裂后的堆叠系统处于Detect状态或Recovery状态。Detect状态表示堆叠正常工作状态，Recovery状态表示堆叠禁用状态。 MAD冲突处理机制如下：MAD分裂检测机制会检测到网络中存在多个处于Detect状态的堆叠系统，这些堆叠系统之间相互竞争，竞争成功的堆叠系统保持Detect状态，竞争失败的堆叠系统会转入Recovery状态；并且在Recovery状态堆叠系统的所有成员交换机上，关闭除保留端口以外的其它所有物理端口包括管理口，以保证该堆叠系统不再转发业务报文。 先比较启动时间，启动完成时间早的堆叠系统成为Detect状态。启动完成时间差在20秒内则认为堆叠的启动完成时间相同。 启动完成时间相同时，比较堆叠中主交换机的优先级，优先级高的堆叠系统成为Detect状态。 优先级相同时，比较堆叠系统的MAC，MAC小的堆叠系统成为Detect状态。 主备倒换 原来的备交换机升为主交换机。 新主交换机重新指定备交换机。 原来的主交换机重启后重新加入堆叠系统，并被选举为从交换机。 配置","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"堆叠","slug":"堆叠","permalink":"http://example.com/tags/%E5%A0%86%E5%8F%A0/"}]},{"title":"数据通信基础","slug":"数据通信基础","date":"2024-07-08T10:53:28.000Z","updated":"2024-07-08T11:41:56.010Z","comments":true,"path":"2024/07/08/数据通信基础/","permalink":"http://example.com/2024/07/08/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80/","excerpt":"","text":"通信基础冲突域 软件：CSMA&#x2F;CD 载波侦听多路访问&#x2F;冲突检测 工作机制：①先听后发；②边发边听；③随机延迟 硬件：交换机 广播域 软件：vlan 硬件：路由器 OSI模型 7. 应用层 对应用程序提供接口。 6. 表示层 进行数据格式的转换，以确保一个系统生成的应用层数据能够被另外一个系统的应用层所识别和理解。 5. 会话层 在通信双方之间建立、管理和终止会话。 4. 传输层 建立、维护和取消一次端到端的数据传输过程。控制传输节奏的快慢，调整数据的排序等等。 3. 网络层 定义逻辑地址；实现数据从源到目的地的转发。 2. 数据链路层 将分组数据封装成帧；在数据链路上实现数据的点到点、或点到多点方式的直接通信；差错检测。 1. 物理层 在媒介上传输比特流；提供机械的和电气的规约。 TCP报文头部：Source Port：源端口，标识哪个应用程序发送。长度为16比特。Destination Port目：的端口，标识哪个应用程序接收。长度为16比特。Sequence Number：序号字段。TCP链接中传输的数据流每个字节都编上一个序号。序号字段的值指的是本报文段所发送数据的第一个字节的序号。长度为32比特。Acknowledgment Number：确认序列号，是期望收到对方下一个报文段数据的第1个字节的序号，即上次已成功接收到的数据段的最后一个字节数据的序号加1。只有Ack标识为1，此字段有效。长度为32比特。Header Length：头部长度，指出TCP报文头部长度，以32比特（4字节）为计算单位。若无选项内容，则该字段为5，即头部为20字节。Reserved：保留，必须填0。长度为6比特。Control bits：控制位，包含FIN、ACK、SYN等标志位，代表不同状态下的TCP数据段。Window：窗口TCP的流量控制，这个值表明当前接收端可接受的最大的数据总数（以字节为单位）。窗口最大为65535字节。长度为16比特。Checksum：校验字段，是一个强制性的字段，由发端计算和存储，并由收端进行验证。在计算检验和时，要包括TCP头部和TCP数据，同时在TCP报文段的前面加上12字节的伪头部。长度为16比特。 如拓朴图 R1，R2建立简单的telnet，模式是password，路由配置完成， R1登录R2（loopback口），抓包 可以看到ARP包和TCP建立的三次握手 ARP局域网同网段下的ARP流程如果主机A要想通过B的IP地址确定其MAC地址并和B进行数据交互，需要按照ARP协议的”广播请求和单播应答”来确定主机B的MAC地址，流程如下：1） A先查看自己的ARP高速缓存表中是否有B主机的MAC地址记录。 2） 如果A的ARP高速缓存表中有B的MAC地址记录，则直接通过这个MAC地址进行数据的传输。 3） 如果A主机的ARP高速缓存中没有B主机的记录，则会向局域网的所有主机广播一个ARP请求，寻找B主机的MAC地址。 4） 当B主机收到A主机广播的ARP请求后，就会直接给A主机回复一个ARP数据包。 5） 当A主机收到B主机发送过来的请求后，将B的MAC地址写入高速缓存中，然后通过该MAC地址，A主机向B主机进行数据的传输。 局域网不同网段下的ARP流程对于跨网段的ARP工作我们首先需要知道的是： ARP请求以广播发送、以单播回应； 路由器隔离广播。每一个网段都是独立的广播域； 跨越网段通信需要使用网关的mac地址。 1、主机A有数据发往主机B，数据封装IP之后发现没有主机B的mac地址；然后查询ARP，ARP回应：“我在192.168.3.0&#x2F;24网段，目标地址在192.168.4.0&#x2F;24,不属于同一网段，需要使用默认网关”；ARP发现默认网关是192.168.3.2，但是没有网关mac地址，需要先进行查询； 2、主机将数据包先放到缓存中，然后发送ARP查询报文：封装自己的mac地址为源mac，目标mac地址写全F的广播地址，请求网关192.168.3.2的mac地址。然后以广播方式发送出去； 3、路由器收到广播数据包，首先将原192.168.3.1添加到自己的mac地址表中，对应mac地址为0800.0222.2222。路由发现是请求自己的mac地址，然后路由回复一个ARP应答：封装自己的IP地址为源IP自己的mac地址为源mac，主机A的IP为目的IP主机A的mac为目的mac，发送一个单播应答“我是192.168.3.2.我的mac地址为0800.0333.2222”； 4、主机收到应答后，将网关mac地址对应192.168.4.2（跨网关通信，其他网段IP地址的mac地址均为网关mac），然后将缓存中的数据包，封装网关mac地址进行发送； 5、路由收到数据包，检查目的IP地址，发现不是给自己的，决定要进行路由，然后查询路由表，需要发往192.168.4.0网段中的192.168.4.2地址。路由准备从相应接口上发出去，然后查询mac地址表，发现没有主机B的映射。路由器发送arp请求查询主机B的mac地址（原理同2、3步，主机B收到请求后首先会添加网关的mac地址，然后单播回复arp请求）； 6、路由器收到主机B的mac地址后，将其添加到路由mac地址表中，然后将缓存中的数据2层帧头去掉，封装自己的mac地址为源mac，主机B的mac地址为目的mac（源和目的IP地址不变），加上二层帧头及校验，发送给主机B； 7、主机B收到数据之后，进行处理，发送过程结束； 8、如果主机B收到数据后进行回复，主机B会进行地址判断，不在同一网段，然后决定将数据发送给网关，主机B查询mac地址表获得网关mac地址，将数据封装后发送（arp地址解析的过程不再需要了，mac地址表条目有一定的有效时间），网关收到数据后直接查询mac表，将二层帧mac地址更改为A的mac发送出去。如此，主机A收到主机B的回复； VRP系统设备系统支持的用户界面有Console用户界面和虚拟类型终端VTY（Virtual Type Terminal）用户界面。 flash目录下有dhcp文件夹 进入dhcp文件夹 dir 发现有 dhcp-duid.txt文件 在flash目录下创建yzy文件夹， 把dhcp-duid.txt 复制到yzy目录 copy dhcp-duid.txt yzy dir可以看到 改个名字 已经改成666 子网划分子网划分 | 沃德发 (yangzhiyu.top)","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"数通基础","slug":"数通基础","permalink":"http://example.com/tags/%E6%95%B0%E9%80%9A%E5%9F%BA%E7%A1%80/"},{"name":"VRP系统","slug":"VRP系统","permalink":"http://example.com/tags/VRP%E7%B3%BB%E7%BB%9F/"},{"name":"ARP","slug":"ARP","permalink":"http://example.com/tags/ARP/"}]},{"title":"MPLSVPN实验","slug":"MPLSVPN实验","date":"2024-07-01T08:19:01.000Z","updated":"2024-08-16T13:23:53.112Z","comments":true,"path":"2024/07/01/MPLSVPN实验/","permalink":"http://example.com/2024/07/01/MPLSVPN%E5%AE%9E%E9%AA%8C/","excerpt":"","text":"网络架构 MPLS VPN不是单一的一种VPN技术，是多种技术结合的综合解决方案，主要包含下列技术：MP-BGP：负责在PE与PE之间传递站点内的路由信息。LDP：负责PE与PE之间的隧道建立。VRF：负责PE的VPN用户管理。静态路由、IGP、BGP：负责PE与CE之间的路由信息交换。 实验 配置接口ip地址以及loopback 0地址：略 目的：CE1和CE2之间不能互访，CE1和CE2可以访问CE3 创建VPN实例 ip vpn-instance CE1 ipv4-family route-distinguisher 100:1 vpn-target 100:1 export-extcommunity vpn-target 100:1 import-extcommunity [PE1-GigabitEthernet0&#x2F;0&#x2F;0]ip binding vpn-instance CE1 （接口绑定） 注意：绑定VPN实例后，接口配置会消失，注意重新配置ip ip vpn-instance CE2 ipv4-family route-distinguisher 200:1 vpn-target 200:1 export-extcommunity vpn-target 100:1 import-extcommunity [PE1-GigabitEthernet0&#x2F;0&#x2F;1]ip binding vpn-instance CE2 PE2上创建VPN实例CE3 ip vpn-instance CE3 ipv4-family route-distinguisher 100:1 vpn-target 100:1 export-extcommunity vpn-target 100:1 200:1 import-extcommunity [PE2-GigabitEthernet0&#x2F;0&#x2F;1]ip binding vpn-instance CE3 PE2和CE3之间OSPF配置 PE2： ospf 1 vpn-instance CE3 （注意在vpn实例中） area 0.0.0.0 network 10.0.56.0 0.0.0.255 CE3： ospf 1 area 0.0.0.0 network 10.0.56.0 0.0.0.255 配置CE1和PE1之间的EBGP： CE1： bgp 100 router-id 1.1.1.1 peer 10.0.12.2 as-number 200 PE1： bgp 200 router-id 3.3.3.3[PE1-bgp]ipv4-family vpn-instance CE1 （注意在vpn实例中建立）[PE1-bgp-CE1]peer 10.0.12.1 as-number 100 查看bgp邻居关系： [PE1]display bgp vpnv4 vpn-instance CE1 peer 运营商网络之间的OSPF配置 PE1： ospf 1 area 0.0.0.0 network 10.0.24.0 0.0.0.255 network 3.3.3.3 0.0.0.0 P： ospf 1 area 0.0.0.0 network 10.0.24.0 0.0.0.255 network 10.0.45.0 0.0.0.255 network 4.4.4.4 0.0.0.0 PE2： ospf 2 （注意是进程2，因为进程1在VPN实例CE3中使用过了，ospf本地进程唯一） area 0.0.0.0 network 10.0.45.0 0.0.0.255 network 5.5.5.5 0.0.0.0 运营商网络的MPLS配置 PE1： mpls lsr-id 3.3.3.3mplsmpls ldp interface GigabitEthernet0&#x2F;0&#x2F;2 mpls mpls ldp 剩余重复操作略 PE1和PE2之间bgp建立 PE2： bgp 200 peer 3.3.3.3 as-number 200 peer 3.3.3.3 connect-interface LoopBack0 ipv4-family vpnv4 peer 3.3.3.3 enable PE1同理操作 路由 在CE1上创建loopback 1接口：10.10.10.10 在CE1上network宣告进入bgp进程 dis bgp vpnv4 all routing-table 查看已经学习到了10.10.10.10网段的路由 此时这条路由可以到达PE2 无法到达CE3 [PE2-ospf-1]import-route bgp 在PE2上ospf 1进程引入bgp，此时CE3可以学习到 （注意是进程1，进程2是运营商网络的ospf，进程1是VPN实例CE3的ospf） CE3上也添加一条loopback 1 [CE3-LoopBack1]ip address 30.30.30.30 32 [CE3-ospf-1]import-route direct （引入） 将右边ospf引入bgp [PE2]bgp 200 [PE2-bgp]ipv4-family vpn-instance CE3 （注意在实例中引入） [PE2-bgp-CE3]import-route ospf 1 （注意指明进程，默认是1） 此时bgp进程中学习到了30.30.30.30网段 在CE1上pingCE3的30.30.30.30（注意ping的时候加源地址-a） 可以通了 CE2的路由 [PE1]ip route-static vpn-instance CE2 2.2.2.2 32 10.0.23.1 添加一条关于VPN实例CE2的静态路由， PE1上查看CE2实例路由表 可以学习到了 PE1在BGP中引入静态路由 [PE1]bgp 200 [PE1-bgp]ipv4-family vpn-instance CE2 （注意在实例中） [PE1-bgp-CE2]import-route static CE2上添加默认路由 [CE2]ip route-static 0.0.0.0 0 10.0.23.2 此时CE2可以ping通CE3的30.30.30.30 实验瑕疵： [PE1]dis bgp vpnv4 all routing-table 可以看到，10.10.10.10网段可能传递给CE2的VPN实例 但是CE1和CE2之间仍然不能互访，这是因为CE2的2.2.2.2不会传递给CE1的VPN实例 原因：CE1和CE2的RT值设置原因，CE1的export 是100：1，CE2的import是100:1，就导致CE2也会接受CE1传递的VPN实例，但是CE2传递的，CE1不会接受，所以理论上也实现了实验要求，但是不够完美。 总结注意的几个点： 1.没有建立mpls，bgp学习到的路由不被优选，原因是mp-bgp传递路由带标签，基于一个隧道转发，需要基于mpls协议，所以需要建立mpls才行 2.PE设备上ospf注意区分运营商网络的igp和ce到pe之间的ospf进程号 3.讲的情况是运营商之间的bgp和ce之间的igp互相引入，但是考虑真实情况，可以不把bgp的路由引入ce之间的igp，可以下发缺省路由，但是需要在vpn实例进程中下发，对端也要配置路由才行 4.运营商网络之间建立ibgp，P设备上不建，注意开启邻居vpnv4的功能 5.区分路由和数据的概念，本质上mpls是为了传递数据的，所以不同的vpn实例带不同的标签是为了区分不同vpn的数据。mp-bgp是为了区分不同vpn的路由（RT，RD），所以需要结合使用 6.如果ce和pe之间是静态，注意在vpn实例中配置路由 7.查看bgp路由，dis bgp vpnv4 all（代表所有vpn实例）routing-table 8.注意接口绑定vpn实例后，ip会消失，重新配置 9.RD值本地路由器唯一就行 10.RT值可以携带多个，注意规划合理，发布出去的export带上所有配置的RT export值，对端查看，只要有一个import能匹配上就可以接受","categories":[{"name":"ie实验","slug":"ie实验","permalink":"http://example.com/categories/ie%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"RT","slug":"RT","permalink":"http://example.com/tags/RT/"},{"name":"MPLS VPN","slug":"MPLS-VPN","permalink":"http://example.com/tags/MPLS-VPN/"},{"name":"MP-BGP","slug":"MP-BGP","permalink":"http://example.com/tags/MP-BGP/"}]},{"title":"ip综合实验","slug":"ip综合实验","date":"2024-06-29T13:27:12.000Z","updated":"2024-06-30T15:32:59.174Z","comments":true,"path":"2024/06/29/ip综合实验/","permalink":"http://example.com/2024/06/29/ip%E7%BB%BC%E5%90%88%E5%AE%9E%E9%AA%8C/","excerpt":"","text":"细节步骤没有完全记录，只记录了大概 1.配置vlan，接口放行vlan （交换机放行vlan10，20，30，66，88，100） 汇聚1汇聚2之间做链路聚合，eth 1放通vlan 注意：汇聚1的g0&#x2F;0&#x2F;7只走WLAN的数据，vlan10 20 30不会走，只需放通vlan 66 88 100即可 2.配置MSTP wlan的主根桥是汇聚1（66 88 100） 有线的主根桥是汇聚2（10 20 30） stp mode mstp stp region-configuration region-name aa instance 1 vlan 66 88 100 instance 2 vlan 10 20 30 active region-configuration 汇聚1： stp instance 1 root primarystp instance 2 root secondary 汇聚2： stp instance 1 root secondarystp instance 2 root primary 3.AC-AP 管理vlan100，业务vlan88和66 AC： vlan 100 int g 0&#x2F;0&#x2F;1 p l t p t a v 100 66 88 int vlanif 100 ip ad 192.168.100.254 24 capwap source interface vlanif 100 wlan配置： wlan ap-group name ap（创建ap组） regulatory-domain-profile default security-profile name yuangong（两个安全模板） security wpa-wpa2 psk pass-phrase yuangong666 aes security-profile name fangke security wpa-wpa2 psk pass-phrase fangke888 aes ssid-profile name yuangong（两个ssid模板） ssid yuangong ssid-profile name fangke ssid fangke vap-profile name yuangong（两个vap模板分别绑定yuangong和fangke） security-profile yuangong ssid-profile yuangong service-vlan vlan-id 66 vap-profile name fangke security-profile fangke ssid-profile fangke service-vlan vlan-id 88 ap-id 0 ap-mac 00e0-fca6-10f0（三个ap上线） ap-name ap1 ap-group ap ap-id 1 ap-mac 00e0-fc64-6810 ap-name ap2 ap-group ap ap-id 2 ap-mac 00e0-fcbb-3530 ap-name ap3 ap-group ap ap-group name ap（下发信号） vap-profile yuangong wlan 1 radio all vap-profile fangke wlan 2 radio all dhcp enable（配置dhcp） int vlanif100 dhcp se int 4.配置VRRP 汇聚1： interface Vlanif10 ip address 192.168.10.1 255.255.255.0 vrrp vrid 1 virtual-ip 192.168.10.254 汇聚2： interface Vlanif10 ip address 192.168.10.2 255.255.255.0 vrrp vrid 1 virtual-ip 192.168.10.254 vrrp vrid 1 priority 120（因为汇聚2是vlan10 20 30的主根桥，所以优先级改大） 只举例vrrp 1的 后边vlan 20 vlan 30同理创建 valn 66 88 的汇聚1优先级改大 5.配置DHCP 因为配置了VRRP，所以汇聚1和汇聚2都要配置dhcp ip pool 10 gateway-list 192.168.10.254 network 192.168.10.0 mask 255.255.255.0 excluded-ip-address 192.168.10.1 192.168.10.2 ip pool 20 gateway-list 192.168.20.254 network 192.168.20.0 mask 255.255.255.0 excluded-ip-address 192.168.20.1 192.168.20.2ip pool 30 gateway-list 192.168.30.254 network 192.168.30.0 mask 255.255.255.0 excluded-ip-address 192.168.30.1 192.168.30.2ip pool 66 gateway-list 192.168.66.254 network 192.168.66.0 mask 255.255.255.0 excluded-ip-address 192.168.66.1 192.168.66.2ip pool 88 gateway-list 192.168.88.254 network 192.168.88.0 mask 255.255.255.0 excluded-ip-address 192.168.88.1 192.168.88.2 int vlanif 10dhcp se gint vlanif 20dhcp se gint vlanif 30dhcp se gint vlanif 66dhcp se gint vlanif 88dhcp se g 6.配置OSPF 首先配置ip地址，汇聚交换机vlanif接口配置：过程略 汇聚1： ospf 1 area 0.0.0.0 network 192.168.10.0 0.0.0.255network 192.168.20.0 0.0.0.255network 192.168.30.0 0.0.0.255network 192.168.66.0 0.0.0.255network 192.168.88.0 0.0.0.255network 10.0.1.0 0.0.0.3network 10.0.3.0 0.0.0.3 汇聚2： ospf 1 area 0.0.0.0 network 192.168.10.0 0.0.0.255network 192.168.20.0 0.0.0.255network 192.168.30.0 0.0.0.255network 192.168.66.0 0.0.0.255network 192.168.88.0 0.0.0.255network 10.0.2.0 0.0.0.3network 10.0.3.0 0.0.0.3 出口路由器： IP地址：略 ospf 1 area 0.0.0.0 network 10.0.1.0 0.0.0.3 network 10.0.2.0 0.0.0.3 network 192.168.60.0 0.0.0.255 7.配置IS-IS 汇聚2和员工宿舍路由器之间用vlanif 43相连：192.168.43.0&#x2F;30网段 汇聚2： isis 1 is-level level-2 network-entity 49.0001.0000.0000.0001.00 int vlan 43 isis enable 员工宿舍路由器： isis 1 is-level level-2 network-entity 49.0001.0000.0000.0002.00 int g0&#x2F;0&#x2F;0 isis enable 8.员工宿舍区单臂路由 二层交换机： vlan b 40 50 int e 0&#x2F;0&#x2F;3 p l a p de v 50 int e 0&#x2F;0&#x2F;1 p l a p de v 40 int g 0&#x2F;0&#x2F;1 p l t p t a v 40 50 路由器： interface GigabitEthernet0&#x2F;0&#x2F;1.10 dot1q termination vid 50 ip address 192.168.50.254 255.255.255.0 arp broadcast enable interface GigabitEthernet0&#x2F;0&#x2F;1.20 dot1q termination vid 40 ip address 192.168.40.254 255.255.255.0 arp broadcast enable 9.汇聚2配置DHCP为员工宿舍区pc分配ip地址 不在同一网段，用dhcp 中继 汇聚2： ip pool 40 gateway-list 192.168.40.254 network 192.168.40.0 mask 255.255.255.0 ip pool 50 gateway-list 192.168.50.254 network 192.168.50.0 mask 255.255.255.0 interface Vlanif43 dhcp select global 员工宿舍区路由器： 开启relay interface GigabitEthernet0&#x2F;0&#x2F;1.10 dhcp select relay dhcp relay server-ip 192.168.43.1 interface GigabitEthernet0&#x2F;0&#x2F;1.20 dhcp select relay dhcp relay server-ip 192.168.43.1 子接口宣告进isis 1 interface GigabitEthernet0&#x2F;0&#x2F;1.10 isis enable 1 interface GigabitEthernet0&#x2F;0&#x2F;1.20 isis enable 1 此时宿舍区可以获取ip 10.汇聚2 ospf和isis互相引入 使得宿舍区不能访问业务大楼（20）和财政大楼（30） ospf 1 import-route isis 1 isis 1 import-route ospf 1 此时内网全部互通 过滤 汇聚2： ip ip-prefix aa index 10 permit 192.168.20.0 24 less-equal 32 ip ip-prefix aa index 20 permit 192.168.30.0 24 less-equal 32 route-policy aa deny node 10 if-match ip-prefix aa route-policy aa permit node 20 isis 1 import-route ospf 1 route-policy aa 11.NAPT nat address-group 1 200.10.10.5 200.10.10.10 acl 2000 rule 5 permit any（都可以访问外网） interface GigabitEthernet4&#x2F;0&#x2F;0 ip address 200.10.10.3 255.255.255.0 nat outbound 2000 address-group 1 12.NAT Server 要求内网正常访问ftp和http服务器 外网只能访问http服务器 nat server protocol tcp global 200.10.10.1 any inside 192.168.60.1 nat server protocol tcp global 200.10.10.2 any inside 192.168.60.2 13.下发缺省路由 出口路由器： ospf 1 default-route-advertise always 汇聚2： isis 1 default-route-advertise always 此时发现pc4ping30网段可以通，但是做了过滤（原因：下发了缺省路由） PC&gt;ping 192.168.30.253 Ping 192.168.30.253: 32 data bytes, Press Ctrl_C to breakFrom 192.168.30.253: bytes&#x3D;32 seq&#x3D;1 ttl&#x3D;126 time&#x3D;79 msFrom 192.168.30.253: bytes&#x3D;32 seq&#x3D;2 ttl&#x3D;126 time&#x3D;93 ms 解决：策略路由做过滤 员工宿舍路由器： acl 3000 rule deny ip source 192.168.40.0 0.0.0.255 destination 192.168.30.0 0.0.0.255 rule deny ip source 192.168.40.0 0.0.0.255 destination 192.168.20.0 0.0.0.255 rule deny ip source 192.168.50.0 0.0.0.255 destination 192.168.30.0 0.0.0.255 rule deny ip source 192.168.50.0 0.0.0.255 destination 192.168.20.0 0.0.0.255 interface GigabitEthernet0&#x2F;0&#x2F;0 traffic-filter outbound acl 3000 此时过滤成功 14.ISP区域配置isis 配置ip地址，配置isis：基操，略 15.ISP区域配置IBGP R5： bgp 100 peer 1.1.1.1 as-number 100 peer 1.1.1.1 connect-interface LoopBack0 peer 1.1.1.1 reflect-client（路由反射器配置客户端） bgp 100 peer 2.2.2.2 as-number 100 peer 2.2.2.2 connect-interface LoopBack0peer 2.2.2.2 reflect-client bgp 100 peer 3.3.3.3 as-number 100 peer 3.3.3.3 connect-interface LoopBack0peer 3.3.3.3 reflect-client bgp 100 peer 4.4.4.4 as-number 100 peer 4.4.4.4 connect-interface LoopBack0peer 4.4.4.4 reflect-client R1R2R3R4： bgp 100 peer 5.5.5.5 as-number 100 peer 5.5.5.5 connect-interface LoopBack0 建立EBGP：略 16.公司B做NAT AR9： acl 2000 rule permit source any int g 0&#x2F;0&#x2F;2 nat outbound 2000 nat server global 200.10.20.3 inside 192.168.10.3（nat server） 17.BGP通告路由 公司B访问A园区的服务器，没有路由 需要将200.10.10.0网段路由通告进BGP AR1： bgp 100 network 200.10.10.0 24 此时发现路由在R3不是最优的 原因：没有改下一跳 R5： bgp 100 peer 1.1.1.1 next-hop -local peer 3.3.3.3 next-hop -local 仍然不是最优 原因：R3在level-1区域，不能学习到level-2区域的路由 解决：isis路由渗透 R5： isis 1 import-route isis level-2 into level-1 此时是最优 R3也要通告200.10.20.0网段的路由到bgp R3： network 200.10.20.0 24 发现R1上可以学习到，并且是最优的 AR9： （缺省路由） ip route-static 0.0.0.0 0 200.10.20.1 A园区出口路由器添加缺省路由： ip route-static 0.0.0.0 0 200.10.10.4 此时公司B应该可以访问A园区的服务器 但是测试ping不通，FTP服务器可以通 原因：做nat server时候没有放通icmp协议，只放通了tcp协议","categories":[{"name":"综合实验","slug":"综合实验","permalink":"http://example.com/categories/%E7%BB%BC%E5%90%88%E5%AE%9E%E9%AA%8C/"}],"tags":[]},{"title":"VRF","slug":"VRF","date":"2024-06-23T09:34:15.000Z","updated":"2024-06-23T10:31:04.401Z","comments":true,"path":"2024/06/23/VRF/","permalink":"http://example.com/2024/06/23/VRF/","excerpt":"","text":"假设PC1与R2这一侧的网络属于一个独立的业务；PC2与R3这一侧的网络属于另一个独立的业务，由于设备资源有限或者其他方面的原因，这两个独立的业务的相关节点连接在R1上，也就是同一台设备上。那么在完成相关配置后，R1的路由表如上图所示。现在如果PC1要发一个数据包到2.2.2.2，那么这个数据包在到达R1后，R1就会去查看自己的路由表，发现有一条2.2.2.0&#x2F;24的路由匹配，因此将这个IP包从GE0&#x2F;0&#x2F;2口转发给192.168.100.2。这是没有问题的，然而如果PC1要访问3.3.3.0&#x2F;24网络呢？也是无压力的，因为数据包到达R1后，她照样查找路由表结果发现有匹配的路由，因此将数据包转给R3。但是实际上，从业务的角度考虑，我们禁止PC1访问3.3.3.0&#x2F;24网络。那么怎么办？ 现在，我们在R1上创建两个VRF：VRF1及VRF2，创建完成后，我们可以理解为，拥有了两台虚拟路由器。当然，现在这两台虚拟路由器上啥也没有。接下去我们将GE0&#x2F;0&#x2F;1口及GE0&#x2F;0&#x2F;2口绑定到VRF1；将GE0&#x2F;0&#x2F;3及GE0&#x2F;0&#x2F;4口绑定到VRF2。如此一来这两台虚拟路由器就各自拥有了两个物理接口。值得注意的是，这两台虚拟路由器是虽然都在同一台物理设备上，但是却是隔离的，他们将有自己的接口，自己的路由表，自己的ARP表等等相关的内容。我们的环境就变成有点像这样： 我们看到，VRF1及VRF2有了自己的接口，也有了自己的路由表。并且相互之间是隔离的。现在PC1要发送一个数据包到2.2.2.2，R1从接口GE0&#x2F;0&#x2F;1收到了这个数据包，由于此时GE0&#x2F;0&#x2F;1已经绑定到了VRF1，因此在执行目的IP的路由查找的时候，查的是VRF1的路由表，查找到匹配的路由条目后，间个数据包从其指示的GE0&#x2F;0&#x2F;1口转发给下一跳192.168.100.2。 那么如果PC1要访问3.3.3.3呢？数据包发到了R1，R1从接口GE0&#x2F;0&#x2F;1收到了这个数据包，于是它在做路由查找的时候，查的仍然是VRF1的路由表。经过查表后，它发现并无匹配的条目，因此将数据包丢弃。 实验 如图，R2属于VPN实例aa，R3属于VPN实例bb，要求pc1可以访问R2，不能访问R3。PC2可以访问R3，不能访问R2. R1下做单臂路由，创建VPN实例aa和bb，子接口分别绑定相应的VPN实例。g0&#x2F;0&#x2F;0绑定vpn实例aa，g0&#x2F;0&#x2F;1绑定vpn实例bb。 S1创建vlan，划分接口：略 注意：接口绑定VPN实例后，ip地址的配置会被移除，需要重新配置 创建vpn实例： ip vpn-instance aa ipv4-family #使能ipv4地址簇 接口绑定：ip binding vpn-instance aa 查看vpn路由表：dis ip routing-table vpn-instance aa 静态路由：ip route-static vpn-instance aa 2.2.2.2 32 192.168.10.1 ping命令：ping -vpn-instance aa 192.168.10.1 R2上添加回程路由：略 至此，PC1可以ping通R2 R1上创建ospf：ospf 1 router-id 1.1.1.1 vpn-instance bb 宣告网段：略 R3上ospf宣告3.3.3.3 pc2ping通3.3.3.3","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"VRF","slug":"VRF","permalink":"http://example.com/tags/VRF/"}]},{"title":"IA综合实验","slug":"IA综合实验","date":"2024-06-21T13:03:16.000Z","updated":"2024-06-22T07:55:53.098Z","comments":true,"path":"2024/06/21/IA综合实验/","permalink":"http://example.com/2024/06/21/IA%E7%BB%BC%E5%90%88%E5%AE%9E%E9%AA%8C/","excerpt":"","text":"如图所示为某园区网络简易拓扑，LSW1,LSW2作为汇聚层交换机，AR1作为核心路由器，LSW3-4作为各自楼层的接入交换机，现按照要求实现如下配置： 一.IP地址规划 1.办公楼1所有PC的网段为：192.168.10.0&#x2F;24 网关地址为：192.168.10.254 2.办公楼2所有PC的网段为：192.168.20.0&#x2F;24 网关地址为：192.168.20.254 3.服务器区所有PC的网段为：192.168.30.0&#x2F;24 网关地址为：192.168.30.254 4.LSW1作为汇聚层交换机使用INT VLANIF 100接口与R1互连，IP地址为100.1.1.1&#x2F;24； R1与LSW1互连接口的IP地址为100.1.1.2&#x2F;24 5.R1与R2接口,R1接口IP地址为：200.1.1.1&#x2F;24,R2接口IP地址为：200.1.1.2&#x2F;24, 6.配置设备的名称 二.配置LSW1与LSW2汇聚交换机之间的链路聚合，采用LACP的方式，活动链路2条 要求G0&#x2F;0&#x2F;3端口down掉之后，数据走G0&#x2F;0&#x2F;2转发。 三.配置交换机之间的生成树 1.要求所有运行RSTP 2.LSW1作为主根桥，LSW2作为备份根桥 3.配置边缘端口，让所有的终端接入到网络中，能立即转发数据四.配置交换机的链路类型以及VLAN 1.在交换机上创建拓扑图中所存在的VLAN 2.配置交换机与PC与路由器的链路类型为access链路，然后将接口划分进相应的VLAN； 办公楼1为VLAN 10 办公楼2为VLAN 20 服务器区为VLAN 30 LSW1与连接R1的接口VLAN 100 3.配置交换机与交换机互连的链路的trunk，并且允许相应的VLAN通过 五.在汇聚交换机LSW1配置相应的VLANIF接口，使不同楼层的PC能实现通讯 六.DHCP配置: 在LSW1上配置全局地址池1： 地址池pool10分配地址段为192.168.10.0&#x2F;24,网关为192.168.10.254,DNS为114.114.114.114， 为VLAN10的主机分配IP地址； 在LSW2上配置全局地址池2： 地址池pool20分配地址段为192.168.20.0&#x2F;24,网关为192.168.20.254,DNS为8.8.8.8 为VLAN20的主机分配IP地址。七.路由协议1.在核心路由器AR1和汇聚交换机LSW1上配置动态路由协议ospf，使R1能学到教学楼和服务器区网段的路由 配置完成之后，测试R1是否访问到每台PC上2.在核心路由器AR1配置一跳静态默认路由指向ISP的路由器AR2 八.NAT技术 1、在AR1上使用NAT技术，使内网VLAN10，VLAN20的网段访问外网时，转化的地址为AR1 g0&#x2F;0&#x2F;1接口的IP地址。 （通过easy ip技术实现） LSW3-1 sys [Huawei]sysn lsw3-1 [lsw3-1]v b 10 20 Info: This operation may take a few seconds. Please wait for a moment…done. [lsw3-1]int e0&#x2F;0&#x2F;3 [lsw3-1-Ethernet0&#x2F;0&#x2F;3]p l a [lsw3-1-Ethernet0&#x2F;0&#x2F;3]p d v 10 [lsw3-1-Ethernet0&#x2F;0&#x2F;3]int e0&#x2F;0&#x2F;4 [lsw3-1-Ethernet0&#x2F;0&#x2F;4]p l a[lsw3-1-Ethernet0&#x2F;0&#x2F;4]p d v 10 [lsw3-1-Ethernet0&#x2F;0&#x2F;4]int e0&#x2F;0&#x2F;1 [lsw3-1-Ethernet0&#x2F;0&#x2F;1]p l t [lsw3-1-Ethernet0&#x2F;0&#x2F;1]p t a v 10 20 [lsw3-1-Ethernet0&#x2F;0&#x2F;1]int e0&#x2F;0&#x2F;2 [lsw3-1-Ethernet0&#x2F;0&#x2F;2]p l t [lsw3-1-Ethernet0&#x2F;0&#x2F;2]p t a v 10 20 [lsw3-1]stp mode r [lsw3-1]int e0&#x2F;0&#x2F;3 [lsw3-1-Ethernet0&#x2F;0&#x2F;3]stp edged-port enable &#x2F;&#x2F;设置边缘端口便于快速收 敛 [lsw3-1-Ethernet0&#x2F;0&#x2F;3]int e0&#x2F;0&#x2F;4 [lsw3-1-Ethernet0&#x2F;0&#x2F;4]stp edged-port enable LSW4 sys Enter system view, return user view with Ctrl+Z. [Huawei]sysn LSW4-1 [LSW4-1]v b 20 [LSW4-1]int e0&#x2F;0&#x2F;4 [LSW4-1-Ethernet0&#x2F;0&#x2F;4]p l a [LSW4-1-Ethernet0&#x2F;0&#x2F;4]p d v 20 [LSW4-1-Ethernet0&#x2F;0&#x2F;4]int e0&#x2F;0&#x2F;5 [LSW4-1-Ethernet0&#x2F;0&#x2F;5]p l a [LSW4-1-Ethernet0&#x2F;0&#x2F;5]p d v 20 [LSW4-1-Ethernet0&#x2F;0&#x2F;5]int e0&#x2F;0&#x2F;1 [LSW4-1-Ethernet0&#x2F;0&#x2F;1]p l t [LSW4-1-Ethernet0&#x2F;0&#x2F;1]p t a v 10 20 [LSW4-1-Ethernet0&#x2F;0&#x2F;1]int e0&#x2F;0&#x2F;2 [LSW4-1-Ethernet0&#x2F;0&#x2F;2]p l t [LSW4-1-Ethernet0&#x2F;0&#x2F;2]p t a v 10 20 [LSW4-1]stp mode r [LSW4-1]int e0&#x2F;0&#x2F;4 [LSW4-1-Ethernet0&#x2F;0&#x2F;4]stp edged-port enable [LSW4-1-Ethernet0&#x2F;0&#x2F;4]int e0&#x2F;0&#x2F;5[LSW4-1-Ethernet0&#x2F;0&#x2F;5]stp ed e [LSW4-1]int e0&#x2F;0&#x2F;1 [LSW4-1-Ethernet0&#x2F;0&#x2F;1]stp cost 300000 &#x2F;&#x2F;修改端口cost来使到达网关最优 LSW1 [LSW1]v b 10 20 12 100 30 [LSW1]int g0&#x2F;0&#x2F;4 [LSW1-GigabitEthernet0&#x2F;0&#x2F;4]p l t [LSW1-GigabitEthernet0&#x2F;0&#x2F;4]p t a v 10 20 [LSW1-GigabitEthernet0&#x2F;0&#x2F;4]int g0&#x2F;0&#x2F;5 [LSW1-GigabitEthernet0&#x2F;0&#x2F;5]p l t [LSW1-GigabitEthernet0&#x2F;0&#x2F;5]p t a v 10 20 [LSW1-GigabitEthernet0&#x2F;0&#x2F;5]q [LSW1]int Eth-Trunk 1 [LSW1-Eth-Trunk1]mode lacp-static [LSW1-Eth-Trunk1]max active-linknumber 2 &#x2F;&#x2F;设置聚合最大数量为2 [LSW1-Eth-Trunk1]trunkport g 0&#x2F;0&#x2F;1 0&#x2F;0&#x2F;2 0&#x2F;0&#x2F;3 [LSW1-Eth-Trunk1]p l t [LSW1-Eth-Trunk1]p t a v 10 20 30 12 [LSW1-Eth-Trunk1]shutdown [LSW1-Eth-Trunk1]undo shutdown [LSW1-Eth-Trunk1]q [LSW1]int g0&#x2F;0&#x2F;6 [LSW1-GigabitEthernet0&#x2F;0&#x2F;6]p l a [LSW1-GigabitEthernet0&#x2F;0&#x2F;6]p d v 100 [LSW1-GigabitEthernet0&#x2F;0&#x2F;6]int g0&#x2F;0&#x2F;7 [LSW1-GigabitEthernet0&#x2F;0&#x2F;7]p l a [LSW1-GigabitEthernet0&#x2F;0&#x2F;7]p d v 30 [LSW1-GigabitEthernet0&#x2F;0&#x2F;7]int g0&#x2F;0&#x2F;8 [LSW1-GigabitEthernet0&#x2F;0&#x2F;8]p l a [LSW1-GigabitEthernet0&#x2F;0&#x2F;8]p d v 30 [LSW1-GigabitEthernet0&#x2F;0&#x2F;8]q [LSW1]stp mode rstp [LSW1]stp root primary [LSW1]int g0&#x2F;0&#x2F;7[LSW1-GigabitEthernet0&#x2F;0&#x2F;7]stp ed e [LSW1-GigabitEthernet0&#x2F;0&#x2F;7]int g0&#x2F;0&#x2F;8 [LSW1-GigabitEthernet0&#x2F;0&#x2F;8]stp ed e [LSW1-GigabitEthernet0&#x2F;0&#x2F;8]q [LSW1]int v 10 [LSW1-Vlanif10]ip add 192.168.10.254 24 [LSW1-Vlanif10]int v 12 [LSW1-Vlanif12]ip add 10.0.12.1 24 [LSW1-Vlanif12]int v 100 [LSW1-Vlanif100]ip add 100.1.1.1 24 [LSW1-Vlanif100]int v 30 [LSW1-Vlanif30]ip add 192.168.30.254 24 [LSW1-Vlanif30]q [LSW1]ip pool vlan10 [LSW1-ip-pool-vlan10]network 192.168.10.0 mask 24 [LSW1-ip-pool-vlan10]gateway-list 192.168.10.254 [LSW1-ip-pool-vlan10]dns-list 8.8.8.8 [LSW1-ip-pool-vlan10]q [LSW1]ip pool vlan30 [LSW1-ip-pool-vlan30]network 192.168.30.0 m 24 [LSW1-ip-pool-vlan30]g 192.168.30.254 [LSW1-ip-pool-vlan30]dns 114.114.114.114 [LSW1-ip-pool-vlan30]q [LSW1]dhcp enable [LSW1]int v 10 [LSW1-Vlanif10]dhcp se g [LSW1-Vlanif10]int v 30 [LSW1-Vlanif30]dhcp s g [LSW1]ospf [LSW1-ospf-1]area 0 [LSW1-ospf-1-area-0.0.0.0]network 10.0.12.0 0.0.0.255 [LSW1-ospf-1-area-0.0.0.0]network 100.1.1.1 0.0.0.255 [LSW1-ospf-1-area-0.0.0.0]network 192.168.10.0 0.0.0.255 [LSW1-ospf-1-area-0.0.0.0]network 192.168.30.0 0.0.0.255 [LSW1-ospf-1-area-0.0.0.0]network 192.168.20.0 0.0.0.255LSW2 sys Enter system view, return user view with Ctrl+Z. [Huawei]v b 12 10 20 40 [Huawei]sysn LSW2 [LSW2]int g0&#x2F;0&#x2F;4 [LSW2-GigabitEthernet0&#x2F;0&#x2F;4]p l t [LSW2-GigabitEthernet0&#x2F;0&#x2F;4]p t a v 10 20 [LSW2-GigabitEthernet0&#x2F;0&#x2F;4]int g0&#x2F;0&#x2F;5 [LSW2-GigabitEthernet0&#x2F;0&#x2F;5]p l t [LSW2-GigabitEthernet0&#x2F;0&#x2F;5]p t a v 10 20 [LSW2]int Eth-Trunk 1 [LSW2-Eth-Trunk1]mode lacp-static [LSW2-Eth-Trunk1]max active-linknumber 2 [LSW2-Eth-Trunk1]trunkport g 0&#x2F;0&#x2F;1 0&#x2F;0&#x2F;2 0&#x2F;0&#x2F;3 [LSW2-Eth-Trunk1]q [LSW2]int g0&#x2F;0&#x2F;2 [LSW2-GigabitEthernet0&#x2F;0&#x2F;2]lacp priority 32769 &#x2F;&#x2F;设置该端口在聚合时 为备份 [LSW2-GigabitEthernet0&#x2F;0&#x2F;2]int e 1 [LSW2-Eth-Trunk1]shutdown [LSW2-Eth-Trunk1]undo shutdown &#x2F;&#x2F;非抢占 所以需要重启 [LSW2-Eth-Trunk1]p l t [LSW2-Eth-Trunk1]p t a v 12 10 20 [LSW2-Eth-Trunk1]q [LSW2]stp mode rs [LSW2]stp root secondary [LSW2]ip pool vlan20 [LSW2-ip-pool-vlan20]network 192.168.20.0 m 24 [LSW2-ip-pool-vlan20]g 192.168.20.254 [LSW2-ip-pool-vlan20]q [LSW2]dhcp enable [LSW2]int v 20 [LSW2-Vlanif20]ip add 192.168.20.254 24 [LSW2-Vlanif20]q[LSW2-Vlanif20]dhcp se g [LSW2-Vlanif20]int v 12 [LSW2-Vlanif12]ip add 10.0.12.2 24 [LSW2-Vlanif12]q -– 接下来为ac这部分配置 [LSW2]int g0&#x2F;0&#x2F;7 [LSW2-GigabitEthernet0&#x2F;0&#x2F;7]p l t [LSW2-GigabitEthernet0&#x2F;0&#x2F;7]p t a v 40 50 [LSW2-GigabitEthernet0&#x2F;0&#x2F;7]int g0&#x2F;0&#x2F;6 [LSW2-GigabitEthernet0&#x2F;0&#x2F;6]p l t [LSW2-GigabitEthernet0&#x2F;0&#x2F;6]p t a v 40 50 10 20 12 [LSW2-GigabitEthernet0&#x2F;0&#x2F;6]p t p v 40 [LSW2]ospf [LSW2-ospf-1]area 0 [LSW2-ospf-1-area-0.0.0.0]network 192.168.20.0 0.0.0.255 [LSW2-ospf-1-area-0.0.0.0]network 10.0.12.0 0.0.0.255 AC sys Enter system view, return user view with Ctrl+Z. [AC6005]sysn AC [AC]int g0&#x2F;0&#x2F;1 [AC-GigabitEthernet0&#x2F;0&#x2F;1]q [AC]v b 40 50 [AC]int g0&#x2F;0&#x2F;1 [AC-GigabitEthernet0&#x2F;0&#x2F;1]p l t [AC-GigabitEthernet0&#x2F;0&#x2F;1]p t a v 40 50 [AC-GigabitEthernet0&#x2F;0&#x2F;1]q [AC]int v 40 [AC-Vlanif40]ip add 192.168.40.254 24 [AC-ip-pool-vlan40]int v 50 [AC-Vlanif50]ip add 192.168.50.254 24 [AC-Vlanif50]int v 1 [AC-Vlanif1]ip add 10.0.11.2 24 &#x2F;&#x2F; 与ar1 通信[AC-Vlanif1]q [AC]ip pool vlan40 [AC-ip-pool-vlan40]network 192.168.40.0 m 24 [AC-ip-pool-vlan40]g 192.168.40.254 [AC-ip-pool-vlan40]q [AC]ip pool vlan50 [AC-ip-pool-vlan50]network 192.168.50.0 m 24 [AC-ip-pool-vlan50]g 192.168.50.254 [AC-ip-pool-vlan50]q [AC-wlan-view]int v 40 [AC-Vlanif40]dhcp select g [AC-Vlanif40]int v 50 [AC-Vlanif50]dhcp select global [AC]capwap source interface Vlanif 40 [AC]wlan [AC-wlan-view]ssid-profile name HCIA-WLAN [AC-wlan-ssid-prof-HCIA-WLAN]ssid HCIA-WLAN [AC-wlan-ssid-prof-HCIA-WLAN]q [AC-wlan-view]security-profile name HCIA-WLAN [AC-wlan-sec-prof-HCIA-WLAN]security wpa-wpa2 psk pass-phrase HCIA Datacom aes [AC-wlan-sec-prof-HCIA-WLAN]q [AC-wlan-view]vap-profile name HCIA-WLAN [AC-wlan-vap-prof-HCIA-WLAN]ssid-profile HCIA-WLAN [AC-wlan-vap-prof-HCIA-WLAN]security-profile HCIA-WLAN [AC-wlan-vap-prof-HCIA-WLAN]service-vlan vlan-id 50 [AC-wlan-vap-prof-HCIA-WLAN]forward-mode direct-forward [AC-wlan-view]ap-group name ap-group1 [AC-wlan-ap-group-ap-group1]vap-profile HCIA-WLAN wlan 1 radio all [AC-wlan-ap-group-ap-group1]q [AC-wlan-view]ap-id 1 ap-mac 00E0-FC27-2F80 [AC-wlan-ap-1]ap-group ap-group1 [AC]ospf [AC-ospf-1]area 0 [AC-ospf-1-area-0.0.0.0]network 10.0.11.0 0.0.0.255 [AC-ospf-1-area-0.0.0.0]network 192.168.50.0 0.0.0.255AR1 [ar1]int g0&#x2F;0&#x2F;0 [ar1-GigabitEthernet0&#x2F;0&#x2F;0]ip add 100.1.1.2 24 [ar1-GigabitEthernet0&#x2F;0&#x2F;0]int g0&#x2F;0&#x2F;1 [ar1-GigabitEthernet0&#x2F;0&#x2F;1]ip add 200.1.1.1 24 [ar1-GigabitEthernet0&#x2F;0&#x2F;1]int g0&#x2F;0&#x2F;2 [ar1-GigabitEthernet0&#x2F;0&#x2F;2]ip add 10.0.11.1 24 [ar1-GigabitEthernet0&#x2F;0&#x2F;2]q [ar1]ip route-static 0.0.0.0 0 200.1.1.2 [ar1-GigabitEthernet0&#x2F;0&#x2F;2]ospf [ar1-ospf-1]area 0 [ar1-ospf-1-area-0.0.0.0]network 100.1.1.0 0.0.0.255 [ar1-ospf-1-area-0.0.0.0]network 10.0.11.1 0.0.0.255 [ar1-ospf-1]default-route-advertise always [ar1]acl 2000 [ar1-acl-basic-2000]rule permit source 192.168.10.0 0.0.0.255 [ar1-acl-basic-2000]rule permit source 192.168.20.0 0.0.0.255 [ar1-acl-basic-2000]rule permit source 192.168.50.0 0.0.0.255 ar1]int g0&#x2F;0&#x2F;1 [ar1-GigabitEthernet0&#x2F;0&#x2F;1]nat outbound 2000 此时依然可以全部进行通信这是因为走默认路径可以直接出去 而且对端会回包 [ar1]acl 2001 [ar1-acl-basic-2001]rule permit source 192.168.10.0 0.0.0.255 [ar1-acl-basic-2001]rule permit source 192.168.20.0 0.0.0.255 rule deny source 0.0.0.0 255.255.255.255 [ar1-acl-basic-2001]q [ar1]int g0&#x2F;0&#x2F;0 [ar1-GigabitEthernet0&#x2F;0&#x2F;1]traffic-filter inbound acl 2001 AR2 添加默认回程路由 [AR2]ip route-static 0.0.0.0 0 200.1.1.1 测试环回口[AR2]int LoopBack 0 [AR2-LoopBack0]ip add 2.2.2.2 24","categories":[{"name":"综合实验","slug":"综合实验","permalink":"http://example.com/categories/%E7%BB%BC%E5%90%88%E5%AE%9E%E9%AA%8C/"}],"tags":[]},{"title":"STP/RSTP/MSTP总结","slug":"STP-RSTP-MSTP总结","date":"2024-05-29T05:40:56.000Z","updated":"2024-07-27T13:19:24.789Z","comments":true,"path":"2024/05/29/STP-RSTP-MSTP总结/","permalink":"http://example.com/2024/05/29/STP-RSTP-MSTP%E6%80%BB%E7%BB%93/","excerpt":"","text":"STP以太网交换网络中为了进行链路备份，提高网络可靠性，通常会使用冗余链路。但是使用冗余链路会在交换网络上产生环路，引发广播风暴以及MAC地址表不稳定等故障现象，从而导致用户通信质量较差，甚至通信中断。为解决交换网络中的环路问题，提出了生成树协议STP（Spanning Tree Protocol）。 与众多协议的发展过程一样，生成树协议也是随着网络的发展而不断更新的，从最初的IEEE 802.1D中定义的STP到IEEE 802.1W中定义的快速生成树协议RSTP（Rapid Spanning Tree Protocol），再到最新的IEEE 802.1S中定义的多生成树协议MSTP（Multiple Spanning Tree Protocol）。 生成树协议中，MSTP兼容RSTP、STP，RSTP兼容STP。 生成树协议 特点 应用场景 STP 形成一棵无环路的树，解决广播风暴并实现冗余备份。收敛速度较慢。 无需区分用户或业务流量，所有VLAN共享一棵生成树。 RSTP 形成一棵无环路的树，解决广播风暴并实现冗余备份。收敛速度快。 MSTP 形成多棵无环路的树，解决广播风暴并实现冗余备份。收敛速度快。多棵生成树在VLAN间实现负载均衡，不同VLAN的流量按照不同的路径转发。 需要区分用户或业务流量，并实现负载分担。不同的VLAN通过不同的生成树转发流量，每棵生成树之间相互独立。 产生背景1.广播风暴 根据交换机的转发原则，如果交换机从一个端口上接收到的是一个广播帧，或者是一个目的MAC地址未知的单播帧，则会将这个帧向除源端口之外的所有其他端口转发（泛洪）。如果交换网络中有环路，则这个帧会被无限转发，此时便会形成广播风暴，网络中也会充斥着重复的数据帧。 SWB，SWA和SWC也会将此帧转发到除了接收此帧的其他所有端口，结果此帧又会被再次转发给SWB，这种循环会一直持续，于是便产生了广播风暴。交换机性能会因此急速下降，并会导致业务中断。 2.MAC地址表震荡 交换机是根据所接收到的数据帧的源地址和接收端口生成MAC地址表项的。 （1）主机A向外发送一个单播帧，假设此单播帧的目的MAC地址在网络中所有交换机的MAC地址表中都暂时不存在。SWB收到此数据帧之后，在MAC地址表中生成一个MAC地址表项： SWB的MAC地址表 MAC地址 端口 00-05-06-07-08-AA GE0&#x2F;0&#x2F;3 ​ 将其从G0&#x2F;0&#x2F;1和G0&#x2F;0&#x2F;2端口转发。此例仅以SWB从G0&#x2F;0&#x2F;1端口转发此帧为例进行说明。 （2）SWA接收到此帧后，由于MAC地址表中没有对应此帧目的MAC地址的表项，所以SWA会将此帧从G0&#x2F;0&#x2F;2转发出去。 （3）SWC接收到此帧后，由于MAC地址表中也没有对应此帧目的MAC地址的表项，所以SWC会将此帧从G0&#x2F;0&#x2F;2端口发送回SWB，也会发给主机B。 （4）SWB从G0&#x2F;0&#x2F;2接口接收到此数据帧之后，会在MAC地址表中删除原有的相关表项，生成一个新的表项： SWB的MAC地址表 MAC地址 端口 00-05-06-07-08-AA GE0&#x2F;0&#x2F;3 00-05-06-07-08-AA GE0&#x2F;0&#x2F;2 此过程会不断重复，从而导致MAC地址表震荡。 STP基本概念根桥 树形的网络结构必须有树根，于是STP引入了根桥（Root Bridge）概念。 对于一个STP网络，根桥在全网中只有一个，它是整个网络的逻辑中心，但不一定是物理中心。根桥会根据网络拓扑的变化而动态变化。 网络收敛后，根桥会按照一定的时间间隔产生并向外发送配置BPDU，其他设备收到该配置BPDU后，如果优先级比自己的配置BPDU高，则非根桥设备会根据收到的配置BPDU中携带的信息更新自己STP端口存储的配置BPDU信息，否则会丢弃该配置BPDU。 BID：桥ID IEEE 802.1D标准中规定BID是由16位的桥优先级（Bridge Priority）与桥MAC地址构成。BID桥优先级占据高16位，其余的低48位是MAC地址。 在STP网络中，桥ID最小的设备会被选举为根桥。 PID：端口ID PID由两部分构成的，高4位是端口优先级，低12位是端口号。 PID只在某些情况下对选择指定端口有作用。 桥优先级：0-65535，默认32768，必须是4095倍数 端口优先级：0-240，默认128，步长16，必须是16的倍数 选举过程1.选举根桥（BID&#x3D;优先级+MAC，优先级越小越优，如果优先级相等，MAC小的成为根桥） 在一个交换网络中选举一个根桥 2.选举根端口（RPC小的优+上行交换机的BID+上行交换机的PID+本地PID） 在每个非根交换机选举一个根端口 3.选举指定端口（RPC小的优+本端口的BID+本端口的PID） 每个网段选举一个指定端口 4.阻塞非指定端口 阻塞交换机上的所有非根，非指定端口 在初始形成STP树的过程中，所有STP交换机会周期性地（HelloTime，缺省为2s）主 动产生并发送配置BPDU，大家都认为自己是根桥。 ▫ 随着BPDU的泛洪和收集，各交换机根据BPDU包含的信息进行比较，并选举出根桥。 ▫ 在此之后（即STP树形成后的稳定期），只有根桥会周期性地（缺省为2s）主动产生 并发送配置BPDU。相应的，非根桥交换机会从自己的根端口周期性地接收到配置 BPDU，并立即触发产生自己的配置BPDU，然后从自己的指定端口发出。——这一 过程看起来就像是，根桥发出的配置BPDU逐跳地“经过”了其他的交换机。也可以 理解为：从根桥倒一盆水下来，水顺着这棵无环的树从上往下不断地往下流。 ▫ Disabled状态：端口无法接收和发出任何帧（即：端口不仅不处理BPDU报文，也不 转发用户流量），端口处于关闭（down）状态。 ▫ Blocking状态：端口只能接收并处理BPDU，不能发送BPDU，也不能转发用户数据帧 （用户流量），是阻塞端口的最终状态。 ▫ Listening状态：端口可以接收并发送BPDU，但不进行MAC地址学习，也不能转发用 户数据帧。这是过渡状态，用于确定端口角色，将选举出根桥、根端口和指定端口， 同时用于防止临时环路。 ▫ Learning状态：端口可以接收并发送BPDU，也可以进行MAC地址学习，根据收到的 用户流量构建MAC地址表，但不能转发用户数据帧（用户流量）。这也是过渡状态， 用于防止MAC地址表未建立，网络中出现大量数据帧泛洪。 ▫ Forwarding状态：端口可以接收并发送BPDU，也可以进行MAC地址学习，同时能够 转发用户数据帧（用户流量）。只有根端口或指定端口才能进入Forwarding状态。 • 端口状态迁移： STP交换机的端口在初始启动时，会从Disabled状态进入到Blocking状态。在 Blocking状态，端口只接收和分析BPDU，但不发送。 在整个过程中，端口一但被关闭或发生了链路故障，就会进入Disabled状态。 如果端口被选为根端口或指定端口，则会进入Listening状态，此时端口接收并发送 BPDU，这种状态会持续一个Forward Delay的时间长度，缺省为15s，是为了防止临 时环路：因为此时网络中可能还存在因STP树的计算过程不同步而产生的临时环路。 在端口状态迁移过程中，如果端口的角色被判定为非根端口或非指定端口，则其端 口状态就会立即退回到Blocking状态。 如果没有因“意外情况”回到Disabled状态，那么端口会进入Learning状态，此时端口 不但可以接收并发送BPDU，还会开始构建MAC地址表，为用户流量的转发做好准备。 这个状态也会持续一个Forward Delay的时间长度，缺省为15s，是为了防止此时交 换机的MAC地址表还未建立，导致大量的数据帧被泛洪。 最后，端口进入Forwarding状态，开始转发用户流量。 对于STP，影响端口状态和端口收敛有以下3个参数。 Hello Time（2s） 运行STP协议的设备发送配置消息BPDU的时间间隔，用于设备检测链路是否存在故障。设备每隔Hello Time时间会向周围的设备发送hello报文，以确认链路是否存在故障。 当网络拓扑稳定之后，该计时器的修改只有在根桥修改后才有效。新的根桥会在发出的BPDU报文中填充适当的字段以向其他非根桥传递该计时器修改的信息。但当拓扑变化之后，TCN BPDU的发送不受这个计时器的管理。 Forward Delay（15s） 设备状态迁移的延迟时间。链路故障会引发网络重新进行生成树的计算，生成树的结构将发生相应的变化。不过重新计算得到的新配置消息无法立刻传遍整个网络，如果新选出的根端口和指定端口立刻就开始数据转发的话，可能会造成临时环路。为此，STP采用了一种状态迁移机制，新选出的根端口和指定端口要经过2倍的Forward Delay延时后才能进入转发状态，这个延时保证了新的配置消息传遍整个网络，从而防止了临时环路的产生。30s Forward Delay Timer指一个端口处于Listening和Learning状态的各自持续时间，默认是15秒。即Listening状态持续15秒，随后Learning状态再持续15秒。这两个状态下的端口不转发用户流量，这正是STP用于避免临时环路的关键。 Max Age（20s） 端口的BPDU报文老化时间，可在根桥上通过命令人为改动老化时间。 Max Age通过配置BPDU报文的传输，可保证Max Age在整网中一致。运行STP协议的网络中非根桥设备收到配置BPDU报文后，报文中的Message Age和Max Age会进行比较： 如果Message Age小于等于Max Age，则该非根桥设备继续转发配置BPDU报文。 如果Message Age大于Max Age，则该配置BPDU报文将被老化。该非根桥设备直接丢弃该配置BPDU，可认为网络直径过大，导致根桥连接失败。 如果配置BPDU是根桥发出的，则Message Age为0。否则，Message Age是从根桥发送到当前桥接收到BPDU的总时间，包括传输延时等。实际实现中，配置BPDU报文经过一个桥，Message Age增加1。 STP报文格式 配置BPDU是一种心跳报文，只要端口使能STP，则配置BPDU就会按照Hello Time定时器规定的时间间隔从指定端口发出。 TCN BPDU是在设备检测到网络拓扑发生变化时才发出。 通常所说的BPDU报文多数指配置BPDU。 在初始化过程中，每个桥都主动发送配置BPDU。在网络拓扑稳定以后，每台设备的指定端口都会周期性的发送配置BPDU。配置BPDU的长度至少要35个字节，包含了桥ID、路径开销和端口ID等参数。只有当发送者的BID或端口的PID两个字段中至少有一个和本桥接收端口不同，BPDU报文才会被处理，否则丢弃。这样避免了处理和本端口信息一致的BPDU报文。 配置BPDU在以下3种情况下会产生： 只要端口使能STP，则配置BPDU就会按照Hello Time定时器规定的时间间隔从指定端口发出。 当根端口收到配置BPDU时，如果优先级比自己的配置BPDU高，则会根据收到的配置BPDU中携带的信息更新自己STP端口存储的配置BPDU信息并从指定接口向下游发送，否则会丢弃该配置BPDU。 当指定端口收到比自己差的配置BPDU时，会立刻向下游设备发送自己的BPDU。 STP拓扑变更 在网络拓扑发生变化后，下游设备会不间断地向上游设备发送TCN BPDU报文。 上游设备收到下游设备发来的TCN BPDU报文后，只有指定端口处理TCN BPDU报文。其它端口也有可能收到TCN BPDU报文，但不会处理。 上游设备会把配置BPDU报文中的Flags的TCA位设置1，然后发送给下游设备，告知下游设备停止发送TCN BPDU报文。 上游设备复制一份TCN BPDU报文，向根桥方向发送。 重复步骤1、2、3、4，直到根桥收到TCN BPDU报文。 根桥把配置BPDU报文中的Flags的TC位置1后发送，通知下游设备直接删除桥MAC地址表项。 详情请看STP拓扑变更机制 | 沃德发 (yangzhiyu.top) STP故障收敛时间 sw1的fa0&#x2F;1的接口down了，但是它还是可以从block端口中接收到sw0的bpdu，那么它与root的联系就没有断开，它此时做的操作是根据根桥发送的bpdu重新计算根端口，然后经历30s的收敛，将fa0&#x2F;2变为根端口。 sw2的fa0&#x2F;2断开down了，我们知道block端口时不会对bpdu进行发送的，于是fa0&#x2F;1就相当于与root断开了，一段时间后，他就会从fa0&#x2F;1发送自己是根桥的bpdu，但是sw1是不会理睬的，因为它知道sw0的bpdu才是最好的，因为sw0的bpdu中的根桥ID的优先级是最高的， 经过20s后，sw1的fa0&#x2F;2因为没有从swfa0&#x2F;1上接收到bpdu，所以它会将端口转换为指定端口将bpdu信息进行转发，这个过程大概50s。 RSTPIEEE于2001年发布的802.1w标准定义了快速生成树协议RSTP（Rapid Spanning Tree Protocol），该协议基于STP协议，对原有的STP协议进行了更加细致的修改和补充。 STP协议虽然能够解决环路问题，但是由于网络拓扑收敛慢，影响了用户通信质量。如果网络中的拓扑结构频繁变化，网络也会随之频繁失去连通性，从而导致用户通信频繁中断，这是用户无法忍受的。 STP的不足之处如下： STP没有细致区分端口状态和端口角色，不利于初学者学习及部署。 网络协议的优劣往往取决于协议是否对各种情况加以细致区分。 从用户角度来讲，Listening、Learning和Blocking状态并没有区别，都同样不转发用户流量。 从使用和配置角度来讲，端口之间最本质的区别并不在于端口状态，而是在于端口扮演的角色。 根端口和指定端口可以都处于Listening状态，也可能都处于Forwarding状态。 STP算法是被动的算法，依赖定时器等待的方式判断拓扑变化，收敛速度慢。 STP算法要求在稳定的拓扑中，根桥主动发出配置BPDU报文，而其他设备进行处理，传遍整个STP网络。 这也是导致拓扑收敛慢的主要原因之一。 端口角色改进根据STP的不足，RSTP删除了3种端口状态，新增加了2种端口角色 RSTP的端口角色共有4种：根端口、指定端口、Alternate端口和Backup端口。 从配置BPDU报文发送角度来看： Alternate端口就是由于学习到其它网桥发送的配置BPDU报文而阻塞的端口。 Backup端口就是由于学习到自己发送的配置BPDU报文而阻塞的端口。 从用户流量角度来看： Alternate端口提供了从指定桥到根的另一条可切换路径，作为根端口的备份端口。 Backup端口作为指定端口的备份，提供了另一条从根桥到相应网段的备份通路。 给一个RSTP域内所有端口分配角色的过程就是整个拓扑收敛的过程。 端口状态改进RSTP的状态规范把原来的5种状态缩减为3种。根据端口是否转发用户流量和学习MAC地址来划分: 如果不转发用户流量也不学习MAC地址，那么端口状态就是Discarding状态。 如果不转发用户流量但是学习MAC地址，那么端口状态就是Learning状态。 如果既转发用户流量又学习MAC地址，那么端口状态就是Forwarding状态。 STP端口状态 RSTP端口状态 端口在拓扑中的角色 Forwarding Forwarding 包括根端口、指定端口 Learning Learning 包括根端口、指定端口 Listening Discarding 包括根端口、指定端口 Blocking Discarding 包括Alternate端口、Backup端口 Disabled Discarding 包括Disable端口 配置BPDU-RST BPDU 配置BPDU的处理 拓扑稳定后，配置BPDU报文的发送方式 拓扑稳定后，根桥按照Hello Timer规定的时间间隔发送配置BPDU。其他非根桥设备在收到上游设备发送过来的配置BPDU后，才会触发发出配置BPDU，此方式使得STP协议计算复杂且缓慢。 RSTP对此进行了改进，即在拓扑稳定后，无论非根桥设备是否接收到根桥传来的配置BPDU报文，非根桥设备仍然按照Hello Timer规定的时间间隔发送配置BPDU，该行为完全由每台设备自主进行。 更短的BPDU超时计时（6s） 如果一个端口在超时时间（超时时间＝Hello Time × 3 × Timer Factor）内没有收到上游设备发送过来的配置BPDU，那么该设备认为与此邻居之间的协商失败。而不像STP那样需要先等待一个Max Age。 处理次等BPDU STP只有指定端口会立即处理次优BPDU，其他端口会忽略次优BPDU，等到Max Age 计时器超时后，缓存的次优BPDU才会老化，然后发送自身更优的BPDU，进行新一轮 的拓扑收敛。 当一个端口收到上游的指定桥发来的RST BPDU报文时，该端口会将自身存储的RST BPDU与收到的RST BPDU进行比较。 如果该端口存储的RST BPDU的优先级高于收到的RST BPDU，那么该端口会直接丢弃收到的RST BPDU，立即回应自身存储的RST BPDU。当上游设备收到下游设备回应的RST BPDU后，上游设备会根据收到的RST BPDU报文中相应的字段立即更新自己存储的RST BPDU。 由此，RSTP处理次等BPDU报文不再依赖于任何定时器通过超时解决拓扑收敛，从而加快了拓扑收敛。 快速收敛（端口切换）如果网络中一个根端口失效，那么网络中最优的 Alternate端口将成为根端口，进入Forwarding状态。 因为通过这个Alternate端口连接的网段上必然有个指 定端口可以通往根桥。 如果网络中一指定端口失效，那么网络中最优的 Backup端口将成为指定端口，进入Forwarding状态。 因为Backup端口作为指定端口的备份，提供了另一 条从根桥到相应网段的备份通路。 快速收敛（边缘端口）• 在RSTP里面，如果某一个端口位于整个网络的边 缘，即不再与其他交换设备连接，而是直接与终 端设备直连，这种端口可以设置为边缘端口。 • 边缘端口不参与RSTP计算，可以由Discarding直 接进入Forwarding状态。 • 但是一旦边缘端口收到配置BPDU，就丧失了边 缘端口属性，成为普通STP端口，并重新进行生 成树计算，从而引起网络震荡。 快速收敛（P&#x2F;A机制） 事实上对于STP，指定端口的选择可以很快完成，主要的速度瓶颈在于：为了避免环路，必 须等待足够长的时间，使全网的端口状态全部确定，也就是说必须要等待至少一个Forward Delay所有端口才能进行转发。 而RSTP的主要目的就是消除这个瓶颈，通过阻塞自己的非根端口来保证不会出现环路。而 使用P&#x2F;A机制加快了上游端口进入Forwarding状态的速度。 当一个端口被选举成为指定端口之后，在STP中，该端口至少要等待一个Forward Delay（Learning）时间才会迁移到Forwarding状态。而在RSTP中，此端口会先进入Discarding状态，再通过Proposal&#x2F;Agreement机制快速进入Forward状态。这种机制必须在点到点全双工链路上使用。Proposal&#x2F;Agreement机制简称P&#x2F;A机制 Proposal&#x2F;Agreement机制，其目的是使一个指定端口尽快进入Forwarding状态。如图所示，根桥S1和S2之间新添加了一条链路。在当前状态下，S2的另外几个端口p2是Alternate端口，p3是指定端口且处于Forwarding状态，p4是边缘端口。 新链路连接成功后，P&#x2F;A机制协商过程如下： p0和p1两个端口马上都先成为指定端口，发送RST BPDU。 S2的p1口收到更优的RST BPDU，马上意识到自己将成为根端口，而不是指定端口，停止发送RST BPDU。 S1的p0进入Discarding状态，于是发送的RST BPDU中把proposal置1。 S2收到根桥发送来的携带proposal的RST BPDU，开始将自己的所有端口进入sync变量置位。 p2已经阻塞，状态不变；p4是边缘端口，不参与运算；所以只需要阻塞非边缘指定端口p3。 各端口的synced变量置位后，p2、p3进入Discarding状态，p1进入Forwarding状态并向S1返回Agreement位置位的回应RST BPDU。 当S1判断出这是对刚刚发出的Proposal的回应，于是端口p0马上进入Forwarding状态。 下游设备继续执行P&#x2F;A协商过程。 要成功进行PA快速协商机制只会出现在上边DP下边RP的情况下。首先两台设备比BPDU确定谁是上游DP，谁是下游RP（或AP）。所谓P&#x2F;A机制，就是在这个过程以后，上游DP捉急要进入转发状态，这才向下发P置位BPDU的请求。P&#x2F;A协商根本目的就是为了加快某DP端口和RP端口互联链路上两端口快速进入转发状态而无需等30s（2倍forwarding delay ）。 注：如果下游的接口并未被选举为RP而只是个普通AP怎么办？如果下游设备发现这个接口收到的BPDU没其他某个接口（如现存的RP接口）收到的BPDU优先则下游设备会认为这个接口角色应为AP接口而不是RP。则该(AP)接口就不会去回应上游发送A置位BPDU而只发送普通BPDU。这样上游会一直每两秒发一个P置位BPDU，下游一直不响应A置位BPDU。直到等待1个forwarding delay后该上游DP才会由discarding变为learning状态，再等一个forwarding delay后上游DP才会变为forwarding状态 保护功能 保护功能 场景 原理 BPDU保护 在交换设备上，通常将直接与用户终端（如PC机）或文件服务器等非交换设备相连的端口配置为边缘端口。正常情况下，边缘端口不会收到RST BPDU。如果有人伪造RST BPDU恶意攻击交换设备，当边缘端口接收到RST BPDU时，交换设备会自动将边缘端口设置为非边缘端口，并重新进行生成树计算，从而引起网络震荡。 交换设备上启动了BPDU保护功能后，如果边缘端口收到RST BPDU，边缘端口将被error-down，但是边缘端口属性不变，同时通知网管系统。 根保护 由于维护人员的错误配置或网络中的恶意攻击，网络中合法根桥有可能会收到优先级更高的RST BPDU，使得合法根桥失去根地位，从而引起网络拓扑结构的错误变动。这种不合法的拓扑变化，会导致原来应该通过高速链路的流量被牵引到低速链路上，造成网络拥塞。 对于启用Root保护功能的指定端口，其端口角色只能保持为指定端口。一旦启用Root保护功能的指定端口收到优先级更高的RST BPDU时，端口状态将进入Discarding状态，不再转发报文。在经过一段时间（通常为两倍的Forward Delay），如果端口一直没有再收到优先级较高的RST BPDU，端口会自动恢复到正常的Forwarding状态。说明：Root保护功能只能在指定端口上配置生效。 环路保护 在运行RSTP协议的网络中，根端口和其他阻塞端口状态是依靠不断接收来自上游交换设备的RST BPDU维持。当由于链路拥塞或者单向链路故障导致这些端口收不到来自上游交换设备的RST BPDU时，此时交换设备会重新选择根端口。原先的根端口会转变为指定端口，而原先的阻塞端口会迁移到转发状态，从而造成交换网络中可能产生环路。 在启动了环路保护功能后，如果根端口或Alternate端口长时间收不到来自上游的RST BPDU时，则向网管发出通知信息（如果是根端口则进入Discarding状态）。而阻塞端口则会一直保持在阻塞状态，不转发报文，从而不会在网络中形成环路。直到根端口或Alternate端口收到RST BPDU，端口状态才恢复正常到Forwarding状态。说明：环路保护功能只能在根端口或Alternate端口上配置生效。 防TC-BPDU攻击 交换设备在接收到TC BPDU报文后，会执行MAC地址表项和ARP表项的删除操作。如果有人伪造TC BPDU报文恶意攻击交换设备时，交换设备短时间内会收到很多TC BPDU报文，频繁的删除操作会给设备造成很大的负担，给网络的稳定带来很大隐患。 启用防TC-BPDU报文攻击功能后，在单位时间内，交换设备处理TC BPDU报文的次数可配置。如果在单位时间内，交换设备在收到TC BPDU报文数量大于配置的阈值，那么设备只会处理阈值指定的次数。对于其他超出阈值的TC BPDU报文，定时器到期后设备只对其统一处理一次。这样可以避免频繁的删除MAC地址表项和ARP表项，从而达到保护设备的目的。 RSTP拓扑变更判断拓扑变化唯一标准：一个非边缘端口迁移到Forwarding状态为本交换设备的所有非边缘指定端口启动一个TC While Timer，该计时器值是Hello Time的两倍。在这个时间内，清空状态发生变化的端口上学习到的MAC地址。同时，由这些端口向外发送RST BPDU，其中TC置位。一旦TC While Timer超时，则停止发送RST BPDU。其他交换设备接收到RST BPDU后，清空所有端口学习到MAC地址，除了收到RST BPDU的端口。然后也为自己所有的非边缘指定端口和根端口启动TC While Timer，重复上述过程。 如此，网络中就会产生RST BPDU的泛洪。","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"STP","slug":"STP","permalink":"http://example.com/tags/STP/"},{"name":"RSTP","slug":"RSTP","permalink":"http://example.com/tags/RSTP/"},{"name":"MSTP","slug":"MSTP","permalink":"http://example.com/tags/MSTP/"}]},{"title":"大型WLAN技术(1)","slug":"大型WLAN技术(1)","date":"2024-05-26T07:10:59.000Z","updated":"2024-05-28T09:49:25.024Z","comments":true,"path":"2024/05/26/大型WLAN技术(1)/","permalink":"http://example.com/2024/05/26/%E5%A4%A7%E5%9E%8BWLAN%E6%8A%80%E6%9C%AF(1)/","excerpt":"","text":"VLAN Pool通过vlan pool把接入的用户分配到不同的vlan，减少广播域，减少网络中的广播报文，提升网络性能。 由于无线终端的移动性，在无线网络中经常有大量用户从某个区域接入后，随着用的移动，再漫游到其他区域，导致该区域的用户接入多，对IP地址数目要求大。比如：场馆入口、酒店的大堂等。目前一个SSID只能对应一个VLAN，一个VLAN对应一个子网，如果大量用户 从某一区域接入，只能扩大VLAN的子网，保证用户能够获取到IP地址。这样带来的问题就是广播域扩大，导致大量的广播报文（如ARP、DHCP等）带来严重的网络拥塞。基于此问题考虑，一个SSID需要能够对应多个VLAN，把大量用户分散到不同的VLAN减少广播域。VLAN Pool提供多个VLAN的管理和分配算法，实现SSID对应多个VLAN的方案。 分配算法• 顺序分配算法：把用户按上线顺序依次划分到不同的VLAN中，用户上下线用户VLAN容易 变化，IP地址变更。 • HASH分配算法：根据用户MAC地址HASH值分配VLAN，用户分配的VLAN固定，可能导致 VLAN间用户划分不均匀，有的VLAN用户较多，有的较少。 配置 如图，管理vlan10，业务vlan 20 30 40，网络可达，dhcp配置，capwap隧道，wlan基础配置（vap模板里业务vlan选择绑定vlan pool） 创建vlan pool，把业务vlan 20 30 40 加入进来，分配算法这里选择顺序分配 终端连接后，查看ip，发现分别接入vlan20 30 40 AC的DHCP技术随着网络规模的不断扩大，网络设备不断增多，企业内不同的用户可能分布在不同的网段，一台DHCP服务器在正常情况下无法满足多个网段的地址分配需求。企业内网各个网段通常都没有与DHCP Server在同一个二层广播域内，如果还需要通过DHCP服务器分配IP地址，则需要跨网段发送DHCP协议报文。 案例1 AC和AP在二层，DHCP服务器和AC不在同一网段，DHCP服务器给STA和AP分配ip地址，由于跨网段，所以在AC上配置中继 配置端口：略 AR1： int g 0&#x2F;0&#x2F;1 ip ad 172.168.12.1 dhcp enable [Huawei-GigabitEthernet0&#x2F;0&#x2F;1]dhcp select global 配置地址组 ip pool 10 gateway-list 10.0.10.254 network 10.0.10.0 mask 255.255.255.0 ip pool 11 gateway-list 10.0.11.254 network 10.0.11.0 mask 255.255.255.0 配置静态路由 [Huawei]ip route-static 10.0.10.0 24 172.168.12.2[Huawei]ip route-static 10.0.11.0 24 172.168.12.2 AC： vlan b 10 11 int vlanif 10 ip ad 10.0.10.254 24 int vlanif 11 ip ad 10.0.11.254 24 int vlanif 1 ip ad 172.168.12.2 24 (与路由器相连接口ip) 配置中继： interface Vlanif10 ip address 10.0.10.254 255.255.255.0 dhcp select relay dhcp relay server-ip 172.168.12.1 interface Vlanif11 ip address 10.0.11.254 255.255.255.0 dhcp select relay dhcp relay server-ip 172.168.12.1 capwap source interface vlanif 10（隧道） 此时ap可以获取ip地址 WLAN配置：略 sta查看ip 可以获取ip地址 案例2 • 在AC和AP间是二层组网的情况下，也可以配置Option43，AP会根据Option43的内容先向 指定IP地址的AC发送单播请求报文，如果发送十次报文，AP都没有收到回应，则AP会继续 以广播的方式来发现同一网段的AC。所以在二层组网的情况下Option 43不是必配的参数， 但在三层组网的情况下则是必配的。 • Option 43即为Type值为43（0x2B）的Option字段，又称为厂商特定信息选项，DHCP服务 器和DHCP客户端通过Option43交换厂商特定的信息。当DHCP服务器接收到请求Option43 信息的DHCP请求报文后，将在回复报文中携带Option43，为DHCP客户端分配厂商指定的 信息（本文中特指AC的IP地址）。 拓扑 如图 AC和AP不在同一网段，S3作为relay给STA分配ip，AC2作为DHCP服务器给AP分配ip地址 配置： 配置端口：略 S3： vlan b 20 21 100 int g 0&#x2F;0&#x2F;2 p l t p t a v 100 int vlanif 100 ip add 192.168.100.3 (S3和AC之间通过vlanif100连接) dhcp配置： dhcp enable interface Vlanif20 ip address 10.0.20.254 255.255.255.0 dhcp select relay dhcp relay server-ip 192.168.100.2 interface Vlanif21 ip address 10.0.21.254 255.255.255.0 dhcp select interface （给sta分配选择接口地址池） AC： vlan 100 配置dhcp： dhcp enable ip pool 20 gateway-list 10.0.20.254 network 192.168.100.0 mask 255.255.255.0 option 43 sub-option 3 ascii 192.168.100.2 （设置option43字段，ac的地址） interface Vlanif100 ip address 192.168.100.2 255.255.255.0 dhcp select global int g 0&#x2F;0&#x2F;1 p l t p t a v 100 配置静态路由： ip route-static 10.0.20.0 24 192.168.100.3 capwap隧道： capwap source interface vlanif 100 此时ap可以获取ip wlan配置：略 此时sta可以获取地址 漫游 • 二层漫游：1个无线客户端在2个AP（或多个AP）之间来回切换连接无线，前提是这些AP都 绑定的是同1个SSID并且业务VLAN都在同1个VLAN内（在同一个IP地址段），漫游切换的 过程中，无线客户端的接入属性（比如无线客户端所属的业务VLAN、获取的IP地址等属性） 不会有任何变化，直接平滑过渡，在漫游的过程中不会有丢包和断线重连的现象。 • 三层漫游：漫游前后SSID的业务VLAN不同，AP所提供的业务网络为不同的三层网络，对 应不同的网关。此时，为保持漫游用户IP地址不变的特性，需要将用户流量迂回到初始接入 网段的AP，实现跨VLAN漫游。 • 网络中有时候会出现以下情况：两个业务VLAN的VLAN ID相同，但是这两个子网又属于不 同的子网。此时为了避免系统仅仅依据VLAN ID将用户在两个子网间的漫游误判为二层漫 游，需要通过漫游域来确定设备是否在同一个子网内，只有当VLAN相同且漫游域也相同的 时候才是二层漫游，否则是三层漫游。 • 配置漫游组。 ▫ 如果指定了漫游组服务器，则需要在漫游组服务器上配置漫游组。 ▫ 如果没有指定漫游组服务器，则各成员AC均需配置漫游组。 实验 设备连接方式如图所示，AP1被AC1纳管，AP2被AC2纳管，所有AP都采用直接转发模式。 S4交换机二层透传AP2的管理、业务报文，S3作为AP管理流量、业务流量的网关。 S3开启DHCP服务为AP1、AP2分配管理地址、为无线终端分配业务地址，AP通过DHCP报文中的Option 43获取AC地址。 1.1.1.1 数据规划 配置项 配置参数 AP管理VLAN VLAN10、20 STA业务VLAN VLAN11、21 DHCP服务器 S3作为DHCP服务器为AP分配IP地址 S3作为DHCP服务器为STA分配IP地址 AP的IP地址池 10.0.10.0&#x2F;24、10.0.20.0&#x2F;24 STA的IP地址池 10.0.11.0&#x2F;24、10.0.21.0&#x2F;24 AC的源接口IP地址 VLANIF100（10.0.100.254）、VLANIF200（10.0.200.254） AP组 名称：ap-group1、ap-group2 引用模板：VAP模板departX 域管理模板 名称：default 国家码：中国（CN） SSID模板 名称：departX SSID名称：roam 安全模板 名称：departX 安全策略：WPA-WPA2+PSK+AES 密码：huawei123 VAP模板 名称：departX 转发模式：直接转发 业务VLAN：VLAN11、21 引用模板：SSID模板departX、安全模板departX DepartX中的X代表AC编号，即AC1上为depart1、AC2上为depart2。 S3设备配置 # sysname S3 # vlan batch 10 to 11 20 to 21 100 200 # dhcp enable # ip pool ap1 gateway-list 10.0.10.1 network 10.0.10.0 mask 255.255.255.0 option 43 sub-option 3 ascii 10.0.100.254 # ip pool ap2 gateway-list 10.0.20.1 network 10.0.20.0 mask 255.255.255.0 option 43 sub-option 3 ascii 10.0.200.254 # ip pool service_a gateway-list 10.0.11.1 network 10.0.11.0 mask 255.255.255.0 dns-list 10.0.11.1 # ip pool service_b gateway-list 10.0.21.1 network 10.0.21.0 mask 255.255.255.0 dns-list 10.0.21.1 # interface Vlanif10 description ap1_mgnt ip address 10.0.10.1 255.255.255.0 dhcp select global # interface Vlanif11 description ap1_service ip address 10.0.11.1 255.255.255.0 dhcp select global # interface Vlanif20 description ap2_mgnt ip address 10.0.20.1 255.255.255.0 dhcp select global # interface Vlanif21 description ap2_service ip address 10.0.21.1 255.255.255.0 dhcp select global # interface Vlanif100 description to_AC1 ip address 10.0.100.1 255.255.255.0 # interface Vlanif200 description to_AC2 ip address 10.0.200.1 255.255.255.0 # interface GigabitEthernet0&#x2F;0&#x2F;1 port link-type trunk port trunk allow-pass vlan 100 # interface GigabitEthernet0&#x2F;0&#x2F;2 port link-type trunk port trunk allow-pass vlan 200 # interface GigabitEthernet0&#x2F;0&#x2F;3 port link-type trunk port trunk allow-pass vlan 20 to 21 # interface GigabitEthernet0&#x2F;0&#x2F;4 port link-type trunk port trunk pvid vlan 10 port trunk allow-pass vlan 10 to 11 # return S4设备配置 # sysname S4 # vlan batch 20 to 21 # interface GigabitEthernet0&#x2F;0&#x2F;3 port link-type trunk port trunk allow-pass vlan 20 to 21 # interface GigabitEthernet0&#x2F;0&#x2F;4 port link-type trunk port trunk pvid vlan 20 port trunk allow-pass vlan 20 to 21 # return AC1设备配置 # sysname AC1 # vlan batch 100 # interface Vlanif100 description to_S3_CAPWAP ip address 10.0.100.254 255.255.255.0 # interface GigabitEthernet0&#x2F;0&#x2F;12 port link-type trunk port trunk allow-pass vlan 100 # ip route-static 10.0.10.0 255.255.255.0 10.0.100.1 ip route-static 10.0.200.0 255.255.255.0 10.0.100.1 # capwap source interface vlanif100 # wlan security-profile name depart1 security wpa2 psk pass-phrase huawei123 aes aes ssid-profile name depart1 ssid roam vap-profile name depart1 service-vlan vlan-id 11 ssid-profile depart1 security-profile depart1 regulatory-domain-profile name default mobility-group name mobility（漫游组名称必须一致） member ip-address 10.0.100.254 member ip-address 10.0.200.254 ap-group name depart1 radio 0 vap-profile depart1 wlan 1 radio 1 vap-profile depart1 wlan 1 radio 2 vap-profile depart1 wlan 1 ap-id 0 type-id 56 ap-mac 00e0-fc6e-2890 ap-sn 210235448310F30CF56D ap-name ap1 ap-group depart1 provision-ap # return AC2设备配置 # sysname AC2 # vlan batch 200 # interface Vlanif200 description to_S3_CAPWAP ip address 10.0.200.254 255.255.255.0 # interface GigabitEthernet0&#x2F;0&#x2F;13 port link-type trunk port trunk allow-pass vlan 200 # ip route-static 10.0.20.0 255.255.255.0 10.0.200.1 ip route-static 10.0.100.0 255.255.255.0 10.0.200.1 # capwap source interface vlanif200 # wlan security-profile name depart2 security wpa-wpa2 psk pass-phrase huawei123 aes ssid-profile name default ssid-profile name depart2 ssid roam vap-profile name depart2 service-vlan vlan-id 21 ssid-profile depart2 security-profile depart2 regulatory-domain-profile name default mobility-group name mobility member ip-address 10.0.100.254 member ip-address 10.0.200.254 ap-group name depart2 radio 0 vap-profile depart2 wlan 1 radio 1 vap-profile depart2 wlan 1 radio 2 vap-profile depart2 wlan 1 ap-id 0 type-id 56 ap-mac 00e0-fcde-1990 ap-sn 210235448310FA145341 ap-name ap2 ap-group depart2 provision-ap # Return 漫游注意事项 实现WLAN漫游的两个AP必须使用相同的SSID和安全模板（安全模板名称可以不同，但是安全模板下的配置必须相同），认证模板的认证方式和认证参数也要配置相同。 漫游组内最多可以添加16个AC成员，AC一次只能加入到一个漫游组中，不可以同时加入多个漫游组。在高密等可能频繁发生AC间漫游的场景中，如果漫游组成员数过多，可能导致频繁出现漫游失败。对于此类场景，建议调整组网规划，使漫游组中存在4个以内成员AC。 同一漫游组内的AC必须使用相同的软件C版本，否则可能会导致AC间漫游失败。 AC间漫游建议采用规格相近的AC。不同型号AC的用户接入能力相差较大，当大规格AC的接入用户大量向小规格AC漫游时，超出小规格AC接入能力的部分用户会漫游失败。 配置漫游组时，需确保AC已配置CAPWAP源地址，否则漫游组不生效。 AC间漫游与双链路热备功能互斥。 AGV漫游功能与空口扫描功能互斥。开启AGV功能后，AP上的对应射频将不支持空口扫描功能，依赖于扫描的业务如智能漫游、频谱导航、负载均衡等均不可用。 AC间漫游组名称必须一致。 WLAN AC和交换机之间不支持AC间漫游。 802.11r功能支持的安全策略包括开放式系统认证、WPA2+PSK+AES、WPA2+PPSK+AES和WPA2+802.1X+AES。 802.11r功能与PMF功能互斥，即如果已配置了802.11r功能，不能再配置PMF功能。 802.11r使用802.1X认证时，如果开启了802.1X重认证功能，部分终端可能因兼容性问题，在重认证阶段掉线后重新上线。 部分终端可能与802.11r漫游功能存在兼容性问题，导致漫游失败。不建议开启802.11r漫游功能。 如果两个AC上的PPSK配置保持一致，则PPSK用户支持AC间802.11r快速漫游；如果两个AC上的PPSK配置不一致，则PPSK用户不支持AC间802.11r快速漫游。 相同或不同漫游组成员（含漫游组服务器）的IP版本必须保持一致。如果配置了Navi AC，则漫游组成员与Navi AC成员（Navi AC和Local AC）的IP版本也必须保持一致。 相同的SSID。 相同的VAP模板，且VAP ID必须相同。 相同的安全策略。 高可靠性技术• 热备份是指，当两台设备在确定主用（Master）设备和备用（Backup）设备后，由主用设 备进行业务的转发，而备用设备处于监控状态，同时主用设备实时向备用设备发送状态信 息和需要备份的信息，当主用设备出现故障后，备用设备及时接替主用设备的业务运行。 • VRRP双机热备份 ▫ 主备AC两个独立的IP地址，通过VRRP对外虚拟为同一个IP地址，单个AP和虚拟IP建 立一条CAPWAP链路。 ▫ 主AC备份AP信息、STA信息和CAPWAP链路信息，并通过HSB主备服务将信息同步给 备AC。主AC故障后，备AC直接接替工作。 • 双链路热备份 ▫ 单个AP分别和主备AC建立CAPWAP链路，一条主链路，一条备链路。 ▫ 主AC仅备份STA信息，并通过HSB主备服务将信息同步给备AC。主AC故障后，AP切 换到备链路上，备AC接替工作。 • 双链路冷备份 ▫ 单个AP分别和主备AC建立CAPWAP链路，一条主链路，一条备链路。 ▫ AC不备份同步信息。主AC故障后，AP切换到备链路上，备AC接替工作。 • N+1备份 ▫ 单个AP只和一个AC建立CAPWAP链路。 ▫ AC不备份同步信息。主AC故障后，AP重新与备AC建链CAPWAP链路，备AC接替工 作。 VRRP双机热备 AC目前支持VRRP单实例整机热备，不支持负载均衡。 基于VRRP 的双机热备，热备相关的业务都注册到同一个HSB备份组，HSB备份组内部绑定 HSB服务，同时HSB备份组与一个VRRP实例绑定，从而业务通过HSB备份组获知当前用户 的主备状态、以及主备切换等事件，并通过HSB组的接口进行备份数据的接收和发送。 HSB业务实时备份： ▫ 用户数据信息备份 ▫ CAPWAP隧道信息备份 ▫ AP表项备份 ▫ DHCP地址信息备份 配置： 配置案例 AC2配置与AC1相同，此处不再赘述。 capwap隧道使用virtual-ip，capwap source ip-address 10.0.10.X 双链路双机热备 该方案除了支持主备备份之外，还支持负载分担模式。负载分担模式下可以指定一部分AP 的主AC为AC1，与其建立CAPWAP主链路，一部分AP的主AC为AC2，与其建立CAPWAP主 链路。 • 建立主链路时，除了Discovery阶段要优选出主AC，其他过程跟正常情况下的CAPWAP隧道 建立过程一致。 • 在Discovery阶段，使能双链路备份功能后，AP开始发送Discovery Request报文，分为单播 方式和广播方式： ▫ 如果预先通过静态方式、DHCP服务器方式或DNS方式指定了主备AC的IP地址，AP向 AC发送单播Discovery Request报文请求与主备AC关联。 ▫ 如果没有配置AC的静态IP地址或者单播没有回应时，AP将发送广播Discovery Request报文请求同网段内可关联的AC。 • 不管是单播发现还是广播发现，如果主备AC都正常，都会回应Discovery Response报文， 并在该报文中携带双链路特性开关、优先级、负载情况以及IP地址。 • AP收集到主备AC回应的Discovery Response报文后，根据AC的优先级、设备的负载情况以 及AC IP地址来选择主AC并开始与其建立CAPWAP主链路，优选顺序如下： ▫ 比较AC的优先级，优先级值小的为主AC，默认优先级为0，最大值为7，优先级取值 越小，优先级越高。； ▫ 优先级相同情况下，比较AC设备的负载情况，即AP个数和STA个数，负载轻的为主 AC。优先选择当前可接入AP数大的AC为主AC，如果当前可接入AP数相同，则选择当 前可接入STA数大的AC为主AC； ▫ 负载相同情况下，比较IP地址，IP地址小的为主AC。 • 说明：当前可接入AP数&#x3D;可接入的最大AP数-当前已接入的AP数，当前可接入STA数&#x3D;可接 入的最大STA数-当前已接入的STA数 N+1备份","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"vlan pool","slug":"vlan-pool","permalink":"http://example.com/tags/vlan-pool/"},{"name":"option 43","slug":"option-43","permalink":"http://example.com/tags/option-43/"},{"name":"漫游","slug":"漫游","permalink":"http://example.com/tags/%E6%BC%AB%E6%B8%B8/"}]},{"title":"VRRP","slug":"VRRP","date":"2024-05-25T10:43:59.000Z","updated":"2024-05-25T11:11:58.536Z","comments":true,"path":"2024/05/25/VRRP/","permalink":"http://example.com/2024/05/25/VRRP/","excerpt":"","text":"简介虚拟路由冗余协议VRRP（Virtual Router Redundancy Protocol）通过把几台路由设备联合组成一台虚拟的路由设备，将虚拟路由设备的IP地址作为用户的默认网关实现与外部网络通信。当网关设备发生故障时，VRRP机制能够选举新的网关设备承担数据流量，从而保障网络的可靠通信。 随着网络的快速普及和相关应用的日益深入，各种增值业务（如IPTV、视频会议等）已经开始广泛部署，基础网络的可靠性日益成为用户关注的焦点，能够保证网络传输不中断对于终端用户非常重要。 通常，同一网段内的所有主机上都设置一条相同的、以网关为下一跳的缺省路由。主机发往其他网段的报文将通过缺省路由发往网关，再由网关进行转发，从而实现主机与外部网络的通信。当网关发生故障时，本网段内所有以网关为缺省路由的主机将无法与外部网络通信。增加出口网关是提高系统可靠性的常见方法，此时如何在多个出口之间进行选路就成为需要解决的问题。 VRRP的出现很好的解决了这个问题。VRRP能够在不改变组网的情况下，采用将多台路由设备组成一个虚拟路由器，通过配置虚拟路由器的IP地址为默认网关，实现默认网关的备份。当网关设备发生故障时，VRRP机制能够选举新的网关设备承担数据流量，从而保障网络的可靠通信。 VRRP路由器（VRRP Router）：运行VRRP协议的设备，它可能属于一个或多个虚拟路由器，如RouterA和RouterB。 虚拟路由器（Virtual Router）：又称VRRP备份组，由一个Master设备和多个Backup设备组成，被当作一个共享局域网内主机的缺省网关。如RouterA和RouterB共同组成了一个虚拟路由器。 Master路由器（Virtual Router Master）：承担转发报文任务的VRRP设备，如RouterA。 Backup路由器（Virtual Router Backup）：一组没有承担转发任务的VRRP设备，当Master设备出现故障时，它们将通过竞选成为新的Master设备，如RouterB。 VRID：虚拟路由器的标识。如RouterA和RouterB组成的虚拟路由器的VRID为1。 虚拟IP地址(Virtual IP Address)：虚拟路由器的IP地址，一个虚拟路由器可以有一个或多个IP地址，由用户配置。如RouterA和RouterB组成的虚拟路由器的虚拟IP地址为10.1.1.10&#x2F;24。 IP地址拥有者（IP Address Owner）：如果一个VRRP设备将虚拟路由器IP地址作为真实的接口地址，则该设备被称为IP地址拥有者。如果IP地址拥有者是可用的，通常它将成为Master。如RouterA，其接口的IP地址与虚拟路由器的IP地址相同，均为10.1.1.10&#x2F;24，因此它是这个VRRP备份组的IP地址拥有者。 虚拟MAC地址（Virtual MAC Address）：虚拟路由器根据虚拟路由器ID生成的MAC地址。一个虚拟路由器拥有一个虚拟MAC地址，格式为：00-00-5E-00-01-{VRID}(VRRP for IPv4)；00-00-5E-00-02-{VRID}(VRRP for IPv6)。当虚拟路由器回应ARP请求时，使用虚拟MAC地址，而不是接口的真实MAC地址。如RouterA和RouterB组成的虚拟路由器的VRID为1，因此这个VRRP备份组的MAC地址为00-00-5E-00-01-01。 0000-5e00-01xx 其中xx是vrid 报文格式vrrp只有一种报文，Advertisement报文，基于组播方式发送，目的组播地址为224.0.0.18，ip协议号：112 报文字段 含义 VRRPv2 VRRPv3 Version VRRP协议版本号，取值为2。 VRRP协议版本号，取值为3。 Type VRRP通告报文的类型，取值为1，表示Advertisement。 VRRP通告报文的类型，取值为1，表示Advertisement。 Virtual Rtr ID（VRID） 虚拟路由器ID，取值范围是1～255。 虚拟路由器ID，取值范围是1～255。 Priority Master设备在备份组中的优先级，取值范围是0～255。0表示设备停止参与VRRP备份组，用来使备份设备尽快成为Master设备，而不必等到计时器超时；255则保留给IP地址拥有者。缺省值是100。 Master设备在备份组中的优先级，取值范围是0～255。0表示设备停止参与VRRP备份组，用来使备份设备尽快成为Master设备，而不必等到计时器超时；255则保留给IP地址拥有者。缺省值是100。 Count IP Addrs&#x2F;Count IPvX Addr 备份组中虚拟IPv4地址的个数。 备份组中虚拟IPv4或虚拟IPv6地址的个数。 Auth Type VRRP报文的认证类型。协议中指定了3种类型：0：Non Authentication，表示无认证。1：Simple Text Password，表示明文认证方式。2：IP Authentication Header，表示MD5认证方式。 - Adver Int&#x2F;Max Adver Int VRRP通告报文的发送时间间隔，单位是秒，缺省值为1秒。 VRRP通告报文的发送时间间隔，单位是厘秒，缺省值为100厘秒（1秒）。 Checksum 16位校验和，用于检测VRRP报文中的数据破坏情况。 16位校验和，用于检测VRRP报文中的数据破坏情况。 IP Address&#x2F;IPvX Address(es) VRRP备份组的虚拟IPv4地址，所包含的地址数定义在Count IP Addrs字段。 VRRP备份组的虚拟IPv4地址或者虚拟IPv6地址，所包含的地址数定义在Count IPvX Addrs字段。 Authentication Data VRRP报文的认证字。目前只有明文认证和MD5认证才用到该部分，对于其它认证方式，一律填0。 - rsvd - VRRP报文的保留字段，必须设置为0。 支持的网络类型不同。VRRPv3适用于IPv4和IPv6两种网络，而VRRPv2仅适用于IPv4网络。 认证功能不同。VRRPv3不支持认证功能，而VRRPv2支持认证功能。 发送通告报文的时间间隔的单位不同。VRRPv3支持的是厘秒级，而VRRPv2支持的是秒级。 状态机 状态 说明 Initialize 该状态为VRRP不可用状态，在此状态时设备不会对VRRP报文做任何处理。通常刚配置VRRP时或设备检测到故障时会进入Initialize状态。收到接口Up的消息后，如果设备的优先级为255，则直接成为Master设备；如果设备的优先级小于255，则会先切换至Backup状态。 Master 当VRRP设备处于Master状态时，它将会做下列工作：定时（Advertisement Interval）发送VRRP通告报文。以虚拟MAC地址响应对虚拟IP地址的ARP请求。转发目的MAC地址为虚拟MAC地址的IP报文。如果它是这个虚拟IP地址的拥有者，则接收目的IP地址为这个虚拟IP地址的IP报文。否则，丢弃这个IP报文。如果收到比自己优先级大的报文，立即成为Backup。如果收到与自己优先级相等的VRRP报文且本地接口IP地址小于对端接口IP，立即成为Backup。 Backup 当VRRP设备处于Backup状态时，它将会做下列工作：接收Master设备发送的VRRP通告报文，判断Master设备的状态是否正常。对虚拟IP地址的ARP请求，不做响应。丢弃目的IP地址为虚拟IP地址的IP报文。如果收到优先级和自己相同或者比自己大的报文，则重置Master_Down_Interval定时器，不进一步比较IP地址。Master_Down_Interval定时器：Backup设备在该定时器超时后仍未收到通告报文，则会转换为Master状态。计算公式如下：Master_Down_Interval&#x3D;(3 Advertisement_Interval) + Skew_time。其中，Skew_Time&#x3D;(256–Priority)&#x2F;256。*如果收到比自己优先级小的报文且该报文优先级是0时，定时器时间设置为Skew_time（偏移时间），如果该报文优先级不是0，丢弃报文，立刻成为Master。 VRRP工作过程 VRRP备份组中的设备根据优先级选举出Master。Master设备通过发送免费ARP报文，将虚拟MAC地址通知给与它连接的设备或者主机，从而承担报文转发任务。 Master设备周期性向备份组内所有Backup设备发送VRRP通告报文，以公布其配置信息（优先级等）和工作状况。 如果Master设备出现故障，VRRP备份组中的Backup设备将根据优先级重新选举新的Master。 VRRP备份组状态切换时，Master设备由一台设备切换为另外一台设备，新的Master设备会立即发送携带虚拟路由器的虚拟MAC地址和虚拟IP地址信息的免费ARP报文，刷新与它连接的主机或设备中的MAC表项，从而把用户流量引到新的Master设备上来，整个过程对用户完全透明。 原Master设备故障恢复时，若该设备为IP地址拥有者（优先级为255），将直接切换至Master状态。若该设备优先级小于255，将首先切换至Backup状态，且其优先级恢复为故障前配置的优先级。 Backup设备的优先级高于Master设备时，由Backup设备的工作方式（抢占方式和非抢占方式）决定是否重新选举Master。 抢占模式（默认）：在抢占模式下，如果Backup设备的优先级比当前Master设备的优先级高，则主动将自己切换成Master。 非抢占模式：在非抢占模式下，只要Master设备没有出现故障，Backup设备即使随后被配置了更高的优先级也不会成为Master设备。 由此可见，为了保证Master设备和Backup设备能够协调工作，VRRP需要实现以下功能： Master设备的选举。 Master设备状态的通告。 下面将从上述两个方面详细介绍VRRP的工作过程。 Master设备的选举 VRRP根据优先级来确定虚拟路由器中每台设备的角色（Master设备或Backup设备）。优先级越高，则越有可能成为Master设备。 初始创建的VRRP设备工作在Initialize状态，收到接口Up的消息后，如果设备的优先级为255，则直接成为Master设备；如果设备的优先级小于255，则会先切换至Backup状态，待Master_Down_Interval定时器超时后再切换至Master状态。首先切换至Master状态的VRRP设备通过VRRP通告报文的交互获知虚拟设备中其他成员的优先级，进行Master的选举： 如果VRRP报文中Master设备的优先级高于或等于自己的优先级，则Backup设备保持Backup状态。 如果VRRP报文中Master设备的优先级低于自己的优先级，采用抢占方式的Backup设备将切换至Master状态，采用非抢占方式的Backup设备仍保持Backup状态。 如果多个VRRP设备同时切换到Master状态，通过VRRP通告报文的交互进行协商后，优先级较低的VRRP设备将切换成Backup状态，优先级最高的VRRP设备成为最终的Master设备；优先级相同时，VRRP设备上VRRP备份组所在接口主IP地址较大的成为Master设备。 如果创建的VRRP设备为IP地址拥有者，收到接口Up的消息后，将会直接切换至Master状态。 Master设备状态的通告 Master设备周期性地发送VRRP通告报文，在VRRP备份组中公布其配置信息（优先级等）和工作状况。Backup设备通过接收到VRRP报文的情况来判断Master设备是否工作正常。 当Master设备主动放弃Master地位（如Master设备退出备份组）时，会发送优先级为0的通告报文，用来使Backup设备快速切换成Master设备，而不用等到Master_Down_Interval定时器超时。这个切换的时间称为Skew time，计算方式为：（256－Backup设备的优先级）&#x2F;256，单位为秒。 当Master设备发生网络故障而不能发送通告报文的时候，Backup设备并不能立即知道其工作状况。等到Master_Down_Interval定时器超时后，才会认为Master设备无法正常工作，从而将状态切换为Master。其中，Master_Down_Interval定时器取值为：3×Advertisement_Interval＋Skew_time，单位为秒。 VRRP负载分担负载分担是指多个VRRP备份组同时承担业务，VRRP负载分担与VRRP主备备份的基本原理和报文协商过程都是相同的。同样对于每一个VRRP备份组，都包含一个Master设备和若干Backup设备。与主备备份方式不同点在于：负载分担方式需要建立多个VRRP备份组，各备份组的Master设备可以不同；同一台VRRP设备可以加入多个备份组，在不同的备份组中具有不同的优先级。 配置两个VRRP备份组。 VRRP备份组1：RouterA为Master设备，RouterB为Backup设备。 VRRP备份组2：RouterB为Master设备，RouterA为Backup设备。 一部分用户将VRRP备份组1作为网关，另一部分用户将VRRP备份组2作为网关。这样既可实现对业务流量的负载分担，同时，也起到了相互备份的作用。 VRRP监视上行端口 命令：上行接口视图，vrrp vrid 1 track interface g 0&#x2F;0&#x2F;1 increased(或者reduced) 30（增加或减少优先级） VRRP备份组只能感知其所在接口状态的变化，当VRRP设备上行接口或直连链路发生故障时，VRRP无法感知，此时会引起业务流量中断。通过部署VRRP与接口状态联动监视上行接口可以有效地解决上述问题，当Master设备的上行接口或直连链路发生故障时，通过调整自身优先级，触发主备切换，确保流量正常转发。 VRRP可以通过Increased和Reduced方式来监视接口状态： 如果VRRP设备上配置以Increased方式监视一个接口，当被监视的接口状态变成Down后，该VRRP设备的优先级增加指定值。 如果VRRP设备上配置以Reduced方式监视一个接口，当被监视的接口状态变为Down后，该VRRP设备的优先级降低指定值。","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"VRRP","slug":"VRRP","permalink":"http://example.com/tags/VRRP/"}]},{"title":"SSH","slug":"SSH","date":"2024-05-22T08:34:38.000Z","updated":"2024-05-22T09:09:45.385Z","comments":true,"path":"2024/05/22/SSH/","permalink":"http://example.com/2024/05/22/SSH/","excerpt":"","text":"1.server配置rsa[server]rsa local-key-pair create[server]dis rsa local-key-pair public（查看）2.全局开启stelnet[server]stelnet server enable3.vty接口配置[server]user-interface vty 0 4 [server-ui-vty0-4]authentication-mode aaa [server-ui-vty0-4]protocol inbound ssh4.创建用户名和密码[server]aaa[server-aaa]local-user client01 password cipher huawei123[server-aaa]local-user client01 service-type ssh [server-aaa]local-user client01 privilege level 3（同理创建client02）5.设置服务端口号[server]ssh server port 10256.客户端上创建rsa本地密钥[client01]rsa local-key-pair create7.将客户端密钥复制到服务器[server]rsa peer-public-key client01[server-rsa-public-key]public-key-code beginEnter “RSA key code” view, return last view with “public-key-code end”.[server-rsa-key-code][server-rsa-key-code]3047[server-rsa-key-code] 0240[server-rsa-key-code] BB44D49F 0A455501 33FC2A58 9EA52FF3 7C3A29A5[server-rsa-key-code] 43A29D63 1D74F975 FAF91466 EF0D2222 A8AE038B[server-rsa-key-code] 2DAA1CE0 5F22B5D9 F6D0F2F0 EB0747B9 4D916AE1[server-rsa-key-code] 5B83DE2D[server-rsa-key-code] 0203[server-rsa-key-code] 010001 [server-rsa-key-code]public-key-code end[server-rsa-public-key]peer-public-key end [server]ssh user client01 assign rsa-key client018.客户端上开启SSH首次登录验证[client01]ssh client first-time enable [client01]stelnet 2.2.2.2 1025（登录）","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"SSH","slug":"SSH","permalink":"http://example.com/tags/SSH/"}]},{"title":"BGP总结","slug":"BGP总结","date":"2024-05-11T05:13:37.000Z","updated":"2024-07-25T15:51:27.499Z","comments":true,"path":"2024/05/11/BGP总结/","permalink":"http://example.com/2024/05/11/BGP%E6%80%BB%E7%BB%93/","excerpt":"","text":"BGP使用TCP作为其传输层协议（端口号为179），使用触发式路由更新，而不是周期性路由更新。—BGP要想建立邻居关系，必须保证建立邻居关系的两端能够ping通BGP能够承载大批量的路由信息，能够支撑大规模网络。BGP提供了丰富的路由策略，能够灵活的进行路由选路，并能指导对等体按策略发布路由。BGP能够支撑MPLS&#x2F;VPN的应用，传递客户VPN路由。BGP提供了路由聚合和路由衰减功能用于防止路由振荡，通过这两项功能有效地提高了网络稳定性。 AS范围：1-65535 BGP版本：BGP4+ 一台路由器不能配置多个BGP进程 只传递路由信息，不会暴露AS内拓扑信息 BGP对等体EBGP：对等体两端属于不同的AS IBGP：对等体两端属于同一个AS 建立BGP对等体的时候可以使用物理接口建立，也可以使用loopback接口建立 EBGP对等体：建议使用物理接口建立 ①使用物理接口建立：[AR1]bgp 100 [AR1-bgp]router-id 1.1.1.1 [AR1-bgp]peer 10.0.12.2 as-number 200 ②使用loopback接口建立： [Ar4]bgp 200 [Ar4-bgp]peer 5.5.5.5 as-number 300 [Ar4-bgp]peer 5.5.5.5 connect-interface loopback0 如果使用loopback接口建立对等体，必须要指明建立对等体的接口 [Ar4-bgp]router-id 4.4.4.4 指定router id [Ar4-bgp]peer 5.5.5.5 ebgp-max-hop EBGP建立对等体关系默认发出报文TTL值为1，如果用loopback接口建立，到达loopback接口TTL值变成0，此时报文会丢弃，所以需要更改接口的TTL，peer 5.5.5.5 ebgp-max-hop命令可以直接设置TTL，至少设置为2，如果不设置，此时TTL值为255 IBGP对等体：建议使用loopback接口建立（更稳定） IBGP建立对等体关系，发送报文TTL值为255，所以不用考虑TTL不可达问题 ①使用loopback接口建立： [Ar4]bgp 200 [Ar4-bgp]peer 2.2.2.2 as-number 200 [Ar4-bgp]peer 2.2.2.2 connect-interface loopback0 ②使用物理接口建立： [Ar4]bgp 200 [Ar4-bgp]peer 10.0.34.4 as-number 200 BGP对等体关系建立 报文头部 Open消息：是TCP连接建立后发送的第一个消息，用于建立BGP对等体之间的连接关系。对等体在接收到Open消息并协商成功后，将发送Keepalive消息确认并保持连接的有效性。确认后，对等体间可以进行Update、Notification、Keepalive和Route-refresh消息的交换。 Update消息：用于在对等体之间交换路由信息。Update消息可以发布多条属性相同的可达路由信息，也可以撤销多条不可达路由信息。 一条Update消息可以发布多条具有相同路由属性的可达路由，这些路由可共享一组路由属性。所有包含在一个给定的Update消息里的路由属性适用于该Update消息中的NLRI（Network Layer Reachability Information）字段里的所有目的地（用IP前缀表示）。 一条Update消息可以撤销多条不可达路由。每一个路由通过目的地（用IP前缀表示）清楚的定义了BGP Speaker之间先前通告过的路由。 一条Update消息可以同时发布可达路由，并且撤销另一部分不可达路由。一条Update消息也可以只用于撤销路由，这样就不需要包括路径属性或者NLRI。相反，也可以只用于通告可达路由，就不需要携带撤销路由信息了。 Notification消息：当BGP检测到错误状态时，就向对等体发出Notification消息，之后BGP连接会立即中断。 Keepalive消息：BGP会周期性的向对等体发出Keepalive消息，用来保持连接的有效性。缺省情况下，间隔60s，保持180s Route-refresh消息：Route-refresh消息用来请求对等体重新发送所有的可达路由信息。 在所有BGP设备使能Route-refresh能力的情况下，如果BGP的入口路由策略发生了变化，本地BGP设备会向对等体发布Route-refresh消息，收到此消息的对等体会将其路由信息重新发给本地BGP设备。这样，可以在不中断BGP连接的情况下，对BGP路由表进行动态刷新，并应用新的路由策略。 BGP状态机 Idle状态是BGP初始状态。在Idle状态下，BGP拒绝邻居发送的连接请求。只有在收到本设备的Start事件后，BGP才开始尝试和其他BGP对等体进行TCP连接，并转至Connect状态。 注意： Start事件是由一个操作者配置一个BGP进程，或者重置一个已经存在的进程或者设备软件重置BGP进程引起的。 任何状态中收到Notification报文或TCP拆链通知等Error事件后，BGP都会转至Idle状态。 在Connect状态下，BGP启动连接重传定时器（Connect Retry），等待TCP完成连接。 如果TCP连接成功，那么BGP向对等体发送Open报文，并转至OpenSent状态。 如果TCP连接失败，那么BGP转至Active状态。 如果连接重传定时器超时，BGP仍没有收到BGP对等体的响应，那么BGP继续尝试和对等体进行TCP连接，停留在Connect状态。 在Active状态下，BGP总是在试图建立TCP连接。 如果TCP连接成功，那么BGP向对等体发送Open报文，关闭连接重传定时器，并转至OpenSent状态。 如果TCP连接失败，那么BGP停留在Active状态。 如果连接重传定时器超时，BGP仍没有收到BGP对等体的响应，那么BGP转至Connect状态。 在OpenSent状态下，BGP等待对等体的Open报文，并对收到的Open报文中的AS号、版本号、认证码等进行检查。 如果收到的Open报文正确，那么BGP发送Keepalive报文，并转至OpenConfirm状态。 如果发现收到的Open报文有错误，那么BGP发送Notification报文给对等体，并转至Idle状态。 在OpenConfirm状态下，BGP等待Keepalive或Notification报文。如果收到Keepalive报文，则转至Established状态，如果收到Notification报文，则转至Idle状态。 在Established状态下，BGP可以和对等体交换Update、Keepalive、Route-refresh报文和Notification报文。 如果收到正确的Update或Keepalive报文，那么BGP就认为对端处于正常运行状态，将保持BGP连接。 如果收到错误的Update或Keepalive报文，那么BGP发送Notification报文通知对端，并转至Idle状态。 Route-refresh报文不会改变BGP状态。 如果收到Notification报文，那么BGP转至Idle状态。 如果收到TCP拆链通知，那么BGP断开连接，转至Idle状态。 BGP对等体双方的状态必须都为Established，BGP对等体（也可以称为BGP邻居）关系才能成立，双方通过Update报文交换路由信息。 BGP路由的生成1）network：逐条在BGP协议中注入路由（其中origin属性位“i”） 注意：network注入的路由必须是路由器的路由表存在的路由 2）import-route：将某个协议的路由引入到路由表中，直连路由、静态路由、OSPF路由、IS-IS路由等（origin属性位“incomplete”）3）路由聚合 bgp 200aggregate 10.1.0.0 22 detail-suppressed （detail-suppressed：BGP只会向对等体通告聚合后的路由，而不通告聚合前的明细路由） 自动聚合：summary automatic 自动聚合：对BGP引入的路由进行聚合。配置自动聚合后，对参加聚合的具体路由进行抑制。配置自动聚合后，BGP将按照自然网段聚合路由（如10.1.1.1&#x2F;24和10.2.1.1&#x2F;24将聚合为A类地址10.0.0.0&#x2F;8），并且BGP向对等体只发送聚合后的路由。 （自动聚合只能聚合import引入的路由）（自动聚合只能在引入路由的路由器上做） 优先级：手动＞自动＞network＞import＞从对等体学到 BGP对等体通告原则 只发布最优路由—下一跳可达、最优路由 从EBGP对等体获取的路由，会发布给所有对等体。 IBGP水平分割：从IBGP对等体获取的路由，不会发送给IBGP对等体。 BGP同步规则指的是：当一台路由器从自己的IBGP对等体学习到一条BGP路由时（这类路由被称为IBGP路由），它将不能使用该条路由或把这条路由通告给自己的EBGP对等体，除非它又从IGP协议（例如OSPF等，此处也包含静态路由）学习到这条路由，也就是要求IBGP路由与IGP路由同步。同步规则主要用于规避BGP路由黑洞问题。 路由黑洞：解决办法： ①BGP–IGP互相引入 该方法不建议 ②IBGP全互联 ③MPLS BGP属性 AS_path属性：该属性为公认必遵属性，是前往目标网络的路由经过的AS号列表；作用：确保路由在EBGP对等体之间传递无环；另外也作为路由优选的衡量标准之一；路由在被通告给EBGP对等体时，路由器会在该路由的AS_Path中追加上本地的AS号；路由被通告给IBGP对等体时，AS_Path不会发生改变。 AS_path防环机制：路由每经过一个AS就会在AS_path中记录经过的AS 号，当路由器收到update报文，检查发现AS_path中含有本AS号，不接收该路由，从而防止了路由环路的产生。 AS_path影响路由优选：收到同一个网段多条路，比较AS_path属性，哪条路由的AS_Path属性值较短，也即AS号的个数更少，就优选哪条路由。 AS-PATH类型： AS_SEQENCE：AS在传递时是有序的，默认就是该类型AS_SET：无序的，在做路由聚合时可以使用该类型。路由聚合解决了两类问题，一是减轻了设备的负担，二是隐藏了明细的路由信息，减少了路由震荡的影响。但是路由聚合后，AS_Path属性丢失，存在产生环路的风险，为此可以通过AS_SET类型的AS_Path属性携带聚合前的AS路径信息。 修改AS_path： 在export方向上修改，修改完之后，再加上本as再发布出去。例如：添加一个100as号：发布出去是64512（加上本as）、100（追加的）、64513（上一个经历的as号） ①additive # acl number 2000 rule 5 permit source 10.10.10.10 0 # route-policy aa permit node 10 if-match acl 2000 apply as-path 500 additive # bgp 200 peer 5.5.5.5 route-policy aa export ②overwrite # acl number 2000 rule 5 permit source 10.10.10.10 0 # route-policy aa permit node 10 if-match acl 2000 apply as-path 500 overwrite # bgp 200 peer 5.5.5.5 route-policy aa export Origin属性Origin属性用来定义路径信息的来源，标记一条路由是怎么成为BGP路由的。它有以下3种类型： IGP：具有最高的优先级。通过路由始发AS的IGP得到的路由信息，比如通过network命令注入到BGP路由表的路由，其Origin属性为IGP。 EGP：优先级次之。通过EGP得到的路由信息，其Origin属性为EGP。 Incomplete：优先级最低。通过其他方式学习到的路由信息。比如BGP通过import-route命令引入的路由，其Origin属性为Incomplete。 当去往同一个目的地存在多条不同Origin属性的路由时，在其他条件都相同的情况下，BGP将按如Origin的下顺序优选路由：IGP &gt; EGP &gt; Incomplete。也就是i &gt; e &gt; ? （注意：如果ospf学习到1.1.1.1一条路由，bgp中network1.1.1.1，bgp路由表中不会通告这个路由，因为ospf学习到的优先，bgp传递的一个机制） Next-Hop BGP的下一跳属性和IGP的有所不同，不一定就是邻居的IP地址。通常情况下，Next_Hop属性遵循下面的规则： BGP Speaker在向EBGP对等体发布某条路由时，会把该路由信息的下一跳属性设置为本地与对端建立BGP邻居关系的接口地址。 BGP Speaker将本地始发路由发布给IBGP对等体时，会把该路由信息的下一跳属性设置为本地与对端建立BGP邻居关系的接口地址。 BGP Speaker在向IBGP对等体发布从EBGP对等体学来的路由时，并不改变该路由信息的下一跳属性。 BGP路由器本身始发的路由，下一跳是0.0.0.0 IBGP在进行路由传递时，下一跳地址 不变会造成路由不可达这种情况，可以使用一下命令修改 [AR2-bgp]peer 4.4.4.4 next-hop-local Local_PreferenceLocal_Preference即本地优先级属性，是公认任意属性，可以用于告诉AS中的路由器，哪条路径是离开本AS的首选路径。Local_Preference属性值越大则BGP路由越优。缺省的Local_Preference值为100。该属性只能被传递给IBGP对等体，而不能传递给EBGP对等体。越大越优。 注意事项： Local_Preference属性只能在IBGP对等体间传递（除非做了策略否则Local_Preference值在IBGP对等体间传递过程中不会丢失），而不能在EBGP对等体间传递，如果在EBGP对等体间收到的路由的路径属性中携带了Local_Preference，则会进行错误处理。但是可以在AS边界路由器上使用Import方向的策略来修改Local_Preference属性值。也就是在收到路由之后，在本地为路由赋予Local_Preference。使用bgp default local-preference命令修改缺省Local_Preference值，该值缺省为100。路由器在向其EBGP对等体发送路由更新时，不能携带Local_Preference属性，但是对方接收路由之后，会在本地为这条路由赋一个缺省Local_Preference值（100），然后再将路由传递给自己的IBGP对等体。本地使用network命令及import-route命令引入的路由， Local_Preference为缺省值100，并能在AS内向其他IBGP对等体传递，传递过程中除非受路由策略影响，否则Local_Preference不变 Community（团体）Community属性为可选过渡属性，是一种路由标记，用于简化路由策略的执行。可以将某些路由分配一个特定的Community属性值，之后就可以基于Community值而不是网络前缀&#x2F;掩码信息来匹配路由并执行相应的策略了。 MED（Multi-Exit Discriminator，多出口鉴别器）是可选非过渡属性，是一种度量值，用于向外部对等体指出进入本AS的首选路径，即当进入本AS的入口有多个时，AS可以使用MED动态地影响其他AS选择进入的路径。MED属性值越小则BGP路由越优。MED主要用于在AS之间影响BGP的选路。MED被传递给EBGP对等体后，对等体在其AS内传递路由时，携带该MED值，但将路由再次传递给其EBGP对等体时，缺省不会携带MED属性。0-4294967295 注意事项： 缺省情况下，路由器只比较来自同一相邻AS的BGP路由的MED值，也就是说如果去往同一个目的地的两条路由来自不同的相邻AS，则不进行MED值的比较。一台BGP路由器将路由通告给EBGP对等体时，是否携带MED属性，需要根据以下条件进行判断（不对EBGP对等体使用策略的情况下）：如果该BGP路由是本地始发（本地通过network或import-route命令引入）的，则缺省携带MED属性发送给EBGP对等体。如果该BGP路由为从BGP对等体学习到，那么该路由传递给EBGP对等体时缺省不会携带MED属性。在IBGP对等体之间传递路由时，MED值会被保留并传递，除非部署了策略，否则MED值在传递过程中不发生改变也不会丢失。如果路由器通过IGP学习到一条路由，并通过network或import-route的方式将路由引入BGP，产生的BGP路由的MED值继承路由在IGP中的metric。 可以使用default med命令修改缺省的MED值，default med命令只对本设备上用import-route命令引入的路由和BGP的聚合路由生效。 Preferred-Value（协议首选值）是华为设备的特有属性，该属性仅在本地有效。当BGP路由表中存在到相同目的地的路由时，将优先选择Preferred-Value值高的路由。取值范围：0~65535；该值越大，则路由越优先。Preferred-Value只能在路由器本地配置，而且只影响本设备的路由优选。该属性不会传递给任何BGP对等体。 路由反射器作用：解决IBGP全互联的问题 1、RR从EBGP学习到的，会发送给client和非client 2、RR从非client学习到的路由，会反射给自己的client，但是不会给非client 3、RR从client学习到的路由，会反射非自己的非client和client 非非不传 路由反射器中的防环：Originator_ID，Cluster_ListRR将一条BGP路由进行反射时会在反射出去的路由中增加Originator_ID，其值为本地AS中通告该路由的BGP路由器Router ID。若AS内存在多个RR，则Originator_ID属性由第一个RR创建，并且不被后续的RR（若有）所更改。当BGP路由器收到一条携带Originator_ID属性的IBGP路由，并且Originator_ID属性值与自身的Router ID相同，则它会忽略关于该条路由的更新。 （Originator_ID，Cluster_List在第一个RR上看不见，是第一个RR发出去时才加上，在后边可以看到） 路由反射簇包括反射器RR及其Client。一个AS内允许存在多个路由反射簇（如下图）。每一个簇都有唯一的簇ID（Cluster_ID，缺省时为RR的BGP Router ID ）。当一条路由被反射器反射后，该RR（该簇）的Cluster_ID就会被添加至路由的Cluster_list属性中。当RR收到一条携带Cluster_list属性的BGP路由，且该属性值中包含该簇的Cluster_ID时，RR认为该条路由存在环路，因此将忽略关于该条路由的更新。 配置： 在RR路由器上配置： Bgp 200 peer 6.6.6.6 reflect-client –谁是client，就peer谁 缺省情况下，每个路由反射器使用自己的Router ID作为集群ID。[Huawei-bgp] reflector cluster-id 20.2.2.2 路由优选原则：P L L A O M E N 漂亮老男人 p—Preference Value (越大越优，仅限路由器本地) L— Local Preference，本地优先级 (越大越优，同一AS内的路由器） L— 手动聚合-&gt;自动聚合-&gt;network-&gt;import，为本地始发 A —AS Path (短的优先) O —Origin，起源i(network)&gt;e(EBGP)&gt;? (import-route) M—MED (值越小越优，本AS内或上游AS内所有路由器，EBGP邻居上设置) E— EBGP优于IBGP (前面都一样，比不出最优路径时) N— Next-Hop，下一跳(BGP选择IGP下一跳cost值最小的) 9.优选Cluster-List最短的路由 10.优选Router-ID（Origintor- ID）最小的设备通告的路由 11.优选具有最小的IP地址的对等体通告的路由 前八条全部相同形成路由负载分担","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"BGP","slug":"BGP","permalink":"http://example.com/tags/BGP/"}]},{"title":"组播","slug":"组播","date":"2024-05-10T06:52:53.000Z","updated":"2024-07-31T11:15:40.050Z","comments":true,"path":"2024/05/10/组播/","permalink":"http://example.com/2024/05/10/%E7%BB%84%E6%92%AD/","excerpt":"","text":"组播简介组播（Multicast）是在一台源IP主机和多台（一组）IP主机之间进行，中间的网络设备根 据接收者的需要，有选择性地对数据进行复制和转发。 • 组播技术有效地满足了单点发送、多点接收的需求，实现了IP网络中点到多点业务数据的高 效传送，能够大量节约网络带宽、降低网络负载。 • 组播分发树：组播流量的转发路径 组播地址：224.0.0.0–239.255.255.255 组播MAC： RPF检查： IGMPv1IGMPv1协议主要基于查询和响应机制完成组播组管理。当一个网段内有多个组播设备时，由于它们都可以接收到主机发送的成员报告报文，因此只需要选取其中一台组播设备发送查询报文，该组播设备称为IGMP查询器（Querier）。在IGMPv1中，由组播路由协议PIM选举出唯一的组播信息转发者（Assert Winner或DR）作为IGMP的查询器，负责该网段的组成员关系查询。 （不具备选举查询器，依赖PIM协议选举） IGMPv1报文IGMPv1报文封装在IP报文中，由8个字节组成。IGMPv1包括两种类型的报文： 普遍组查询报文（General Query）：查询器向共享网络上所有主机发送的查询报文，用于了解哪些组播组存在成员。（60s一次） 成员报告报文（Report）：主机向查询器发送的报告报文，用于申请加入某个组播组或者应答查询报文。 字段 说明 Version IGMP版本，值为1。 Type 报文类型。该字段有以下两种取值：0x1：表示普遍组查询报文。0x2：表示成员报告报文。 Unused 在IGMPv1中，该字段在发送时被设为0，并在接收时被忽略。 Checksum 校验和。 Group Address 组播组地址。在普遍组查询报文中，该字段设为0；在成员报告报文中，该字段为成员加入的组播组地址。 查询组播组成员机制 普遍组查询和响应过程如下： IGMP查询器发送目的地址为224.0.0.1（表示同一网段内所有主机和设备）的普遍组查询报文；收到该查询报文的组成员启动定时器。 普遍组查询报文是周期性发送的，发送周期可以通过命令配置。HostA和HostB作为组播组G1的成员，收到普遍组查询报文后，在本地启动定时器Timer-G1。 第一个定时器（10s）超时的组成员发送针对该组的报告报文。 假设HostA上的Timer-G1首先超时，HostA向该网段发送目的地址为G1的报告报文。也想加入组G1的HostB收到此报告报文，则停止定时器Timer-G1，不再发送针对G1的报告报文。这样报告报文被抑制，可以减少网段上的流量。 IGMP查询器接收到HostA的报告报文后，了解到本网段内存在组播组G1的成员，则由组播路由协议生成（，G1）组播转发表项， 代表任意组播源。网络中一旦有组播组G1的数据到达DeviceA，将向该网段转发。 加组机制 主机HostC不等待普遍组查询报文的到来，主动发送针对G2的报告报文以声明加入组播组G2。 IGMP查询器接收到HostC的报告报文后，了解到本网段内出现了组播组G2的成员，则生成组播转发项（*，G2）。网络中一旦有G2的数据到达DeviceA，将向该网段转发。 离组机制IGMPv1没有专门定义离开组的报文。主机离开组播组后，停止发送成员报告报文。根据主机想要离开的组播组中是否还有其他成员，处理机制有所不同。 假设HostA想要退出组播组G1 HostA收到IGMP查询器发送的普遍组查询报文时，不再发送针对G1的报告报文。由于网段内还存在G1组成员HostB，HostB会向IGMP查询器发送针对G1的报告报文，因此IGMP查询器感知不到HostA的离开。 假设HostC想要退出组播组G2 HostC收到IGMP查询器发送的普遍组查询报文时，不再发送针对G2的报告报文。由于网段内不存在组G2的其他成员，IGMP查询器不会收到G2组成员的报告报文，则在一定时间（缺省值为130秒）后，删除G2所对应的组播转发表项。 130&#x3D;60×2+10 IGMPv2IGMPv2的工作机制与IGMPv1基本相同，最大的不同之处在于IGMPv2增加了查询器选举和离开组机制。IGMPv2可以使IGMP查询器及时了解到网段内哪些组播组已不存在成员，从而及时更新组成员关系，减少网络中冗余的组播流量。 与IGMPv1相比，IGMPv2的变化如下： 除了普遍组查询报文和成员报告报文之外，IGMPv2新增了两种报文： 成员离开报文（Leave）：成员离开组播组时主动向查询器发送的报文，用于宣告自己离开了某个组播组。 特定组查询报文（Group-Specific Query）：查询器向共享网段内指定组播组发送的查询报文，用于查询该组播组是否存在成员。 IGMPv2对普遍组查询报文格式也做了改进，添加了最大响应时间（Max Response Time）字段。此字段取值可以通过命令配置，用于控制成员对于查询报文的响应速度。 IGMPv2报文： 字段 说明 Type 报文类型。该字段有以下四种取值：0x11：表示查询报文。IGMPv2的查询报文包括普遍组查询报文和特定组查询报文两类。0x12：表示IGMPv1成员报告报文。0x16：表示IGMPv2成员报告报文。0x17：表示成员离开报文。 Max Response Time 最大响应时间。成员主机在收到IGMP查询器发送的普遍组查询报文后，需要在最大响应时间内做出回应。该字段仅在IGMP查询报文中有效。 Checksum 校验和。 Group Address 组播组地址。在普遍组查询报文中，该字段设为0。在特定组查询报文中，该字段为要查询的组播组地址。在成员报告报文和离开报文中，该字段为成员要加入或离开的组播组地址。 v2查询器选举机制在IGMPv2中，查询器的选举过程如下： 初始状态下，所有运行IGMPv2的组播设备（DeviceA和DeviceB）都认为自己是查询器，向本网段内的所有主机和组播设备发送普遍组查询报文。DeviceA和DeviceB在收到对方发送的普遍组查询报文后，将报文的源IP地址与自己的接口地址作比较。通过比较，IP地址最小的组播设备将成为查询器，其他组播设备成为非查询器。如图所示，DeviceA的接口地址小于DeviceB，则DeviceA当选为查询器，DeviceB为非查询器。 确定查询器后，将由IGMP查询器（DeviceA）向本网段内的所有主机和其他组播设备发送普遍组查询报文，而非查询器（DeviceB）则不再发送普遍组查询报文。 非查询器（DeviceB）上都会启动一个定时器（即其他查询器存在时间定时器Other Querier Present Timer）。在该定时器超时前，如果收到了来自查询器的查询报文，则重置该定时器；否则，就认为原查询器失效，并发起新的查询器选举过程。 （告诉非查询器我是查询器，我还活着） v2离组机制在IGMPv2中，成员离开组播组时可以主动向查询器发送离开报文，宣告自己离开了某个组播组。 主机HostA离开组播组G1的过程如下： HostA向本地网段内的所有组播设备（目的地址为224.0.0.2）发送针对组G1的离开报文。 查询器收到离开报文，会发送针对组G1的特定组查询报文。发送间隔和发送次数可以通过命令配置，缺省情况下每隔1秒发送一次，共发送两次。同时查询器启动组成员关系定时器（Timer-Membership&#x3D;发送间隔x发送次数）。 如果该网段内还存在组G1的其他成员（如HostB），这些成员在收到查询器发送的特定组查询报文后，会立即发送针对组G1的报告报文。查询器收到针对组G1的报告报文后将继续维护该组成员关系。如果该网段内不存在组G1的其他成员，查询器将不会收到针对组G1的报告报文。在Timer-Membership超时后，查询器将删除（*，G1）对应的IGMP组表项。当有组G1的组播数据到达查询器时，查询器将不会向下游转发。 IGMPv3IGMPv3主要是为了配合SSM（Source-Specific Multicast）模型发展起来的，提供了在报文中携带组播源信息的能力，即主机可以对组播源进行选择。 与IGMPv2相比，IGMPv3报文的变化如下： IGMPv3报文包含两大类：查询报文和成员报告报文。IGMPv3没有定义专门的成员离开报文，成员离开通过特定类型的报告报文来传达。 查询报文中不仅包含普遍组查询报文和特定组查询报文，还新增了特定源组查询报文（Group-and-Source-Specific Query）。该报文由查询器向共享网段内特定组播组成员发送，用于查询该组成员是否愿意接收特定源发送的数据。特定源组查询通过在报文中携带一个或多个组播源地址来达到这一目的。 成员报告报文不仅包含主机想要加入的组播组，而且包含主机想要接收来自哪些组播源的数据。IGMPv3增加了针对组播源的过滤模式（INCLUDE&#x2F;EXCLUDE），将组播组与源列表之间的对应关系简单的表示为（G，INCLUDE，(S1、S2…)），表示只接收来自指定组播源S1、S2……发往组G的数据；或（G，EXCLUDE，(S1、S2…)），表示接收除了组播源S1、S2……之外的组播源发给组G的数据。当组播组与组播源列表的对应关系发生了变化，IGMPv3报告报文会将该关系变化存放于组记录（Group Record）字段，发送给IGMP查询器。 在IGMPv3中一个成员报告报文可以携带多个组播组信息，而之前的版本一个成员报告只能携带一个组播组。这样在IGMPv3中报文数量大大减少。 IGMPv3报文 字段 说明 Type 报文类型，取值为0x11。 Max Response Code 最大响应时间。成员主机在收到IGMP查询器发送的普遍组查询报文后，需要在最大响应时间内做出回应。 Checksum 校验和。 Group Address 组播组地址。在普遍组查询报文中，该字段设为0；在特定组查询报文和特定源组查询报文中，该字段为要查询的组播组地址。 Resv 保留字段。发送报文时该字段设为0；接收报文时，对该字段不做处理。 S 该比特位为1时，所有收到此查询报文的其他设备不启动定时器刷新过程，但是此查询报文并不抑制查询器选举过程和设备的主机侧处理过程。 QRV 如果该字段非0，则表示查询器的健壮系数（Robustness Variable）。如果该字段为0，则表示查询器的健壮系数大于7。设备接收到查询报文时，如果发现该字段非0，则将自己的健壮系数调整为该字段的值；如果发现该字段为0，则不做处理。 QQIC IGMP查询器的查询间隔，单位为秒。非查询器收到查询报文时，如果发现该字段非0，则将自己的查询间隔参数调整为该字段的值；如果发现该字段为0，则不做处理。 Number of Sources 报文中包含的组播源的数量。对于普遍组查询报文和特定组查询报文，该字段为0；对于特定源组查询报文，该字段非0。此参数的大小受到所在网络MTU大小的限制。 Source Address 组播源地址，其数量受到Number of Sources字段值大小的限制。 字段 说明 Type 报文类型，取值为0x22。 Reserved 保留字段。发送报文时该字段设为0；接收报文时，对该字段不做处理。 Checksum IGMP报文的校验和。校验和是IGMP报文长度（即IP报文的整个有效负载）的16位检测，表示IGMP信息补码之和的补码。Checksum字段在进行校验计算时设为0。当发送报文时，必须计算校验和并插入到Checksum字段中去。当接收报文时，校验和必须在处理该报文之前进行检验。 Number of Group Records (M) 报文中包含的组记录的数量。 Group Record 组记录。Group Record字段的格式如图3所示，解释如表3所示。 字段 说明 Record Type 组记录的类型。共分为三大类。当前状态报告。用于对查询报文进行响应，通告自己目前的状态，共两种：MODE_IS_INCLUDE，表示接收源地址列表包含的源发往该组的组播数据。如果指定源地址列表为空，该报文无效。MODE_IS_EXCLUDE，表示不接收源地址列表包含的源发往该组的组播数据。过滤模式改变报告。当组和源的关系在INCLUDE和EXCLUDE之间切换时，会通告过滤模式发生变化，共两种：CHANGE_TO_INCLUDE_MODE，表示过滤模式由EXCLUDE转换到INCLUDE，接收源地址列表包含的新组播源发往该组播组的数据。如果指定源地址列表为空，主机将离开组播组。CHANGE_TO_EXCLUDE_MODE，表示过滤模式由INCLUDE转换到EXCLUDE，拒绝源地址列表包含的新组播源发往该组的组播数据。源列表改变报告。当指定源发生改变时，会通告源列表发生变化，共两种：ALLOW_NEW_SOURCES，表示在现有的基础上，需要接收源地址列表包含的组播源发往该组播组的组播数据。如果当前对应关系为INCLUDE，则向现有源列表中添加这些组播源；如果当前对应关系为EXCLUDE，则从现有阻塞源列表中删除这些组播源。BLOCK_OLD_SOURCES，表示在现有的基础上，不再接收源地址列表包含的组播源发往该组播组的组播数据。如果当前对应关系为INCLUDE，则从现有源列表中删除这些组播源；如果当前对应关系为EXCLUDE，则向现有源列表中添加这些组播源。 Aux Data Len 辅助数据长度。在IGMPv3的报告报文中，不存在辅助数据字段，该字段设为0。 Number of Sources (N) 本记录中包含的源地址数量。 Multicast Address 组播组地址。 Source Address 组播源地址。 Auxiliary Data 辅助数据。预留给IGMP后续扩展或后续版本。在IGMPv3的报告报文中，不存在辅助数据。 IGMPv3工作机制在工作机制上，与IGMPv2相比，IGMPv3增加了主机对组播源的选择能力。 IGMPv3大部分工作机制与IGMPv2类似：查询器选举机制一致：IP地址小的为查询器。 使用普遍组查询报文查询组成员加组信息。 使用特定组查询报文查询特定组播的成员存活情况。 IGMPv3需要支持上报组播源信息，与IGMPv2相比IGMPv3的变化如下： IGMPv3查询报文除了包含普遍组查询报文和特定组查询报文，还新增了特定源组查询报文（Group-and-Source-Specific Query）。 IGMPv3成员关系报告报文不仅包含主机想要加入的组播组，而且包含主机想要接收来自哪些组播源的数据。 由于同个组播组的不同成员可能希望接收来自不同源的组播，因此IGMPv3无需成员关系报告报文抑制机制。 IGMPv3没有定义专门的成员离开报文，成员离开通过特定类型的报告报文来传达。 特定源组加入 IGMPv3的成员报告报文的目的地址为224.0.0.22（表示同一网段所有使能IGMPv3的设备）。通过在报告报文中携带组记录，主机在加入组播组的同时，能够明确要求接收或不接收特定组播源发出的组播数据。如图4所示，网络中存在S1和S2两个组播源，均向组播组G发送组播数据，Host仅希望接收从组播源S1发往组播组G的信息。 如果Host和组播设备之间运行的是IGMPv1或IGMPv2，Host加入组播组G时无法对组播源进行选择，无论其是否需要，都会同时接收到来自组播源S1和S2的数据。如果采用IGMPv3，成员主机可以发送IGMPv3报告（G，INCLUDE，(S1)），选择仅接收源S1向组播组G发送的数据。 特定源组查询 该报文用于查询该组成员是否愿意接收特定源发送的数据。特定源组查询通过在报文中携带一个或多个组播源地址来达到这一目的。 各个版本比较 IGMP Snooping 当Router将组播报文转发至Switch以后，Switch负责将组播报文转发给组播用户。由于组 播报文的目的地址为组播组地址，在二层设备上是学习不到这一类MAC表项的，因此组播 报文就会在所有接口进行广播，和它在同一广播域内的组播成员和非组播成员都能收到组 播报文。这样不但浪费了网络带宽，而且影响了网络信息安全。 • IGMP Snooping有效地解决了这个问题。配置IGMP Snooping后，二层组播设备可以侦听 和分析组播用户和上游路由器之间的IGMP报文，根据这些信息建立二层组播转发表项，控 制组播数据报文转发。这样就防止了组播数据在二层网络中的广播。 • 路由器端口形成后会启动老化计时器（默认180s）,当路由器端口收到新的普遍组查询后刷 新该计时器。 • 成员端口形成后会启动老化计时器（默认180s）,当成员端口收到新的成员关系报告报文后 刷新该计时器。 • IGMP Snooping不再使用成员关系报告报文抑制机制： ▫ 由于IGMP Snooping需要监听IGMP报文才能决定端口角色，进而指导转发，所以所 有组成员都需要发送IGMP组成员关系报告报文。 ▫ 当IGMP Snooping设备收到成员关系报告报文后，只将成员关系报告报文从路由器接 口发送出去，从而避免其余组成员收到成员关系报告报文，不触发成员关系报告报文 抑制机制。 • 收到IGMP离开报文后，成员端口的老化定时器 &#x3D; 健壮系数（默认2） x 特定组查询间隔（默认1s）。 IGMP SSM MappingSSM（Source-Specific Multicast）称为指定源组播，要求设备能了解成员主机加入组播组时所指定的组播源。如果成员主机上运行IGMPv3，可以在IGMPv3报告报文中直接指定组播源地址。但是某些情况下，成员主机只能运行IGMPv1或IGMPv2，为了使其也能够使用SSM服务，设备上需要提供IGMP SSM Mapping功能。 IGMP SSM Mapping的机制是：通过在设备上静态配置SSM地址的映射规则，将IGMPv1和IGMPv2报告报文中的（*, G）信息转化为对应的（G, INCLUDE, (S1, S2…)）信息，以提供SSM组播服务。 配置了SSM Mapping规则后，当IGMP查询器收到来自成员主机的IGMPv1或IGMPv2报告报文时，首先检查该报文中所携带的组播组地址G，然后根据检查结果的不同分别进行处理。 如果G在ASM（Any-Source Multicast）范围内，则只提供ASM服务。 如果G在SSM组地址范围内（缺省情况下为232.0.0.0～232.255.255.255）： 如果设备上没有G对应的SSM Mapping规则，则无法提供SSM服务，丢弃该报文。 如果设备上有G对应的SSM Mapping规则，则依据规则将报告报文中所包含的（*, G）信息映射为（G, INCLUDE, (S1, S2…)）信息，提供SSM服务。 SSM网络的用户网段中HostA运行IGMPv3、HostB运行IGMPv2、HostC运行IGMPv1。HostB和HostC无法升级到IGMPv3，如果要为该网段中的所有主机提供SSM服务，需要在IGMP查询器（Device）上使能IGMP SSM Mapping并配置相应的映射规则。 假如在Device上配置如下映射关系： 组播组地址 映射的组播源地址 232.0.0.0&#x2F;8 10.10.1.1 232.1.0.0&#x2F;16 10.10.2.2 232.1.0.0&#x2F;16 10.10.3.3 232.1.1.0&#x2F;24 10.10.4.4 经过映射后，Device收到HostB和HostC的成员报告报文时，首先判断报文携带的组地址是否在SSM范围内，发现在SSM范围内，则根据配置的映射规则生成如下所示的组播表项。如果一个组地址映射了多个源，则生成多个（S，G）表项。 在映射过程中，一个组播组地址只要能在规则中匹配到，都会生成一条相应的表项。因此232.1.1.1有四条表项，232.1.2.2有三条表项。 IGMPv1&#x2F;IGMPv2报告报文中的组地址 生成的组播表项 232.1.1.1 （来自HostC） （10.10.1.1，232.1.1.1）（10.10.2.2，232.1.1.1）（10.10.3.3，232.1.1.1）（10.10.4.4，232.1.1.1） 232.1.2.2 （来自HostB） （10.10.1.1，232.1.2.2）（10.10.2.2，232.1.2.2）（10.10.3.3，232.1.2.2） IGMP Proxy PIM DMPIM-DM：密集模式，采用的是“推”模式，适用于成员比较少，相对密集的场景 PIM-SM：稀疏模式 采用的是“拉”模式，适用于成员多，但是成员不集中的场景 PIM（Protocol Independent Multicast，协议无关组播）是域内组播路由协议，利用单播路由信息，对组播消息进行RPF检查，创建组播路由表项。为IP组播提供路由信息的协议可以是任何单播路由协议，比如静态路由、RIP、OSPF、IS-IS、BGP等。组播路由和单播路由协议无关，只是通过单播路由表产生相应组播路由表项。 目前在实际网络中，PIM协议有三种模式：PIM-DM、使用ASM（Any-Source Multicast）模型的PIM-SM，使用SSM（Source-Specific Multicast）模型的PIM-SM。需要注意的是，同一个PIM域中不能同时运行PIM-DM和PIM-SM。 （S，G）和（*,G） PIM路由器上可能同时存在两种路由表项。当收到源地址为S，组地址为G的组播报文，且RPF检查通过的情况下，按照如下的规则转发： 如果存在（S，G）路由表项，则由（S，G）路由表项指导报文转发。 如果不存在（S，G）路由表项，只存在（*，G）路由表项，则先依照（*，G）路由表项创建（S，G）路由表项，再由（S，G）路由表项指导报文转发。 理解：（*，G）在pim dm中由igmp加组创建，当组播源发送数据时，才会由此表创建（S，G）指导转发 PIM-DM域中组播数据转发的实现过程是： 邻居发现Neighbor Discovery）：在PIM-DM域中，PIM设备通过周期性的向所有其他PIM设备发送Hello消息，来发现PIM邻居，维护PIM设备之间的PIM邻居关系。缺省情况下，无论PIM设备是否收到来自邻居的Hello消息，都会接收其他的PIM控制消息或组播报文。但是如果PIM设备配置了邻居检查功能，则只有在PIM设备接收到来自邻居的Hello消息后，才会接收其他的PIM控制消息或组播报文。 扩散Flooding）：PIM-DM假设网络中的每个子网都存在至少一个组播组成员，因此组播数据将被扩散到网络中的所有节点，网络中所有的PIM设备都能接收到组播数据。（有了状态刷新和嫁接机制的情况下，通常不需要再周期扩散） 剪枝（Prune）：组播数据扩散到网络中后，PIM-DM对没有组播数据接收者的分支进行剪枝，只保留包含接收者的分支，即确保网络中只有需要组播数据的PIM设备能够接收到组播数据，不需要组播数据的PIM设备接收不到组播数据。 状态刷新（State-Refresh）：如果设备处于剪枝状态，其上游PIM设备会维护一个“剪枝定时器”。当剪枝定时器超时，上游PIM设备恢复对不需要数据的下游PIM设备的数据转发，这样会导致不必要的网络资源浪费。采用状态刷新可使离组播源最近的第一跳设备周期性发送State-Refresh消息，刷新所有设备的剪枝定时器状态，对不需要数据的下游设备始终保持剪枝状态。 嫁接Graft）：当被剪枝分支的节点上出现了组播组成员时，为了减少该节点恢复成转发状态所需的时间，PIM-DM使用嫁接机制主动恢复其对组播数据的转发。 断言（Assert）：如果在一个网段内出现多台PIM设备，则相同的组播报文可能会被重复发送到该网段。通过断言可以为网段选定唯一的组播数据转发者，避免冗余的组播数据转发。 邻居发现PIM设备在每个使能了PIM的接口上，都会对外发送Hello消息。封装Hello消息的组播报文有如下特点： 目的地址是224.0.0.13，表示同一网段中所有PIM设备 源地址为接口的IP地址 TTL数值为1，仅发送给邻居接口 Hello消息具有发现邻居、协商各项协议参数、维持邻居关系的作用。 发现PIM邻居 同一网段中的PIM设备都必须接收目的地址为224.0.0.13的组播报文。这样在收到Hello消息以后，直接相连的组播设备之间，就可以知道自己的邻居信息。 协商各项协议参数 Hello消息中携带多项协议参数，邻居之间通过Hello消息来进行协商，这些参数包括： DR_Priority：表示各设备接口竞选DR的优先级，优先级越高越容易获胜。 Holdtime：表示保持邻居为可达状态的超时时间。 LAN_Delay：表示共享网段内传输Prune消息的延迟时间。 Override-Interval：表示Hello消息]中携带的否决剪枝的时间间隔。 维持邻居关系 PIM设备之间周期性地发送Hello消息。如果Holdtime超时还没有收到该PIM邻居发出的新的Hello消息，则认为该邻居不可达，将其从邻居列表中清除。 PIM邻居的变化将导致网络中组播拓扑的变化。如果组播分发树上的某上游邻居或下游邻居不可达，将导致组播路由重新收敛，组播分发树迁移。 维护邻居关系 30s 邻居超时时间105s 扩散机制全网建立（S，G）路由表项 组播源开始发送组播数据，组播数据全网进行转发，生成（S，G ）表项，表项默认老化时间210s，，超过210s没有组播数据转发，将删除表项，有组播 数据的时候重新建立表项 扩散机制会周期性（默认180s）全网扩散组播数据，周期性扩散的主要目的是探测是否有新成员加组，但是由于全网扩散组播数据会浪费大量带宽，所以现在的组播网络一般使用“状态刷新机制”加上“嫁接机制”来实现周期性全网扩散感知新成员加组的目的。 剪枝如果路由器下游没有组成员，将向上游发起剪枝，剪到最后一个不需要发组播报文的路由器 剪枝接口会有一个计时器，210s，计时器超时，接口将加入下游接口，转发组播报文 当下游接口被剪枝后： 如果下游叶子路由器有组成员加入，并且希望在下次“扩散-剪枝”前就恢复组播报文转发，则执行嫁接动作。 如果下游叶子路由器一直没有组成员加入，希望该接口保持抑制转发状态，则执行状态刷新动作。 状态刷新机制状态刷新报文60s发一次 对于剪枝端口而言，收到状态刷新报文，计时器将重置 离组播源最近的第一跳路由器周期性触发State-Refresh消息。State-Refresh消息在全网扩散，刷新所有设备上的剪枝定时器状态，对不需要数据的下游设备始终保持剪枝状态。 嫁接PIM-DM通过嫁接机制，使有新组成员加入的网段快速得到组播报文。叶子路由器通过IGMP了解到与其相连的用户网段上，组播组G有新的组成员加入。随后叶子路由器会向上游发送Graft报文，请求上游路由器恢复相应出接口转发，将其添加在（S，G）表项下游接口列表中。 嫁接过程从叶子路由器开始，到有组播报文到达的路由器结束。 一旦有新成员加入，叶子路由器会基于本地的组播路由表向上游发送Graft报文，请求上游路由器恢复相应出接口转发，将其添加在（S，G）表项下游接口列表中。 下游发送Graft消息，请求上游恢复对应出接口的转发。上游收到Graft消息后，将下游的出接口恢复转发 断言在组播网络中，如果出现如下情况，则说明网段上还存在着其他的组播转发者。 该组播报文不能通过RPF检查。 接收到该组播报文的接口是本设备上（S，G）表项中的一个下游接口。 此时，设备会执行Assert机制。设备从该下游接口发送Assert消息。同时，该下游接口也接收到了来自该网段上其他组播转发者的Assert消息。Assert消息的目的地址为224.0.0.13，源地址为下游接口地址，TTL为1。Assert消息中携带该PIM设备到组播源或RP的开销、所采用的单播路由协议的优先级和组播组地址G。 设备将自身条件与对方报文中携带的信息进行比较，称为Assert竞选。规则如下： 单播路由协议优先级较高者获胜。 如果优先级相同，则到组播源或RP的开销较小者获胜。 如果以上都相同，则下游接口IP地址最大者获胜。 根据Assert竞选结果，设备将执行不同的操作： 如果获胜，则该下游接口保持转发状态，设备负责后续在该网段上的（S，G）转发，该下游接口称为Assert winner。 如果落败，则禁止该下游接口转发组播报文，将其从（S，G）表项下游接口列表中删除。该下游接口称为Assert loser。 Assert竞选结束后，该网段上只存在一个有下游接口的上游设备，只传输一份组播报文。Assert winner周期性发送Assert消息，维持Assert winner的状态。若Assert loser的定时器超时后，Assert loser仍没有收到Assert winner的Assert消息，则重新添加下游接口转发组播数据。 如图6所示，如果DeviceB和DeviceC都能够接收到组播源Source发出的组播报文，并且均能通过RPF检查，创建（S，G）表项。DeviceB、DeviceC的下游接口连接在同一网段，那么DeviceB和DeviceC就会同时向该网段发送组播数据。Assert机制可以保证一个网段只能存在一个组播数据转发者。Assert过程如下： DeviceB从下游接口接收到DeviceC发来的组播报文，RPF检查失败，报文被丢弃。同时，DeviceB向该网段发送Assert消息。 DeviceC将自身的路由信息与对方的Assert消息中携带的路由信息进行比较，由于自身到组播源的开销较大而落败。于是禁止该下游接口转发组播报文，将其从DeviceC的（S，G）表项的下游接口列表中删除。 DeviceC从该网段接收到DeviceB发来的组播报文，RPF检查失败，报文被丢弃。Assert过程结束。 PIM SM RP介绍： 汇聚点RP（Rendezvous Point）为网络中一台重要的PIM路由器，用于处理源端DR注册信息及组成员加入 请求，网络中的所有PIM路由器都必须知道RP的地址，类似于一个供求信息的汇聚中心。 • 目前可以通过以下方式配置RP： ▫ 静态RP：在网络中的所有PIM路由器上配置相同的RP地址，静态指定RP的位置。 ▫ 动态RP：通过选举机制在多个C-RP（Candidate-RP，候选RP）之间选举出RP。 • PIM-SM（ASM）模式首次形成组播分发树主要依赖RPT构建机制，组播源注册机制与DR选举机制。 ▫ RPT构建机制：组播叶子路由器主动建立到RP的组播分发树（RPT） ▫ 组播源注册机制：通过该机制形成组播源到RP的组播分发树（SPT） ▫ DR选举机制：DR负责源端或组成员端组播报文的收发，避免重复组播报文，同时成员端DR还负责发送Join加组消息。 组成员端DR逐跳向源端DR逐跳发送Join报文并创建（S，G）表项，建立源端DR到组成员DR的SPT。 SPT建立后，组成员端DR会沿着RPT逐跳向RP发送剪枝报文，删除（*，G）表项中相应的下游接口。剪枝结束后，RP不再沿RPT转发组播报文到组成员端。 如果SPT不经过RP，RP会继续向源端DR逐跳发送剪枝报文，删除（S，G）表项中相应的下游接口。剪枝结束后，源端DR不再沿“源端DR-RP”的SPT转发组播报文到RP。 • 当组播分发树（SPT或RPT）稳定后，成员端DR会周期性发送Join&#x2F;Prune报文，用于维护组播分发树。 • 如果组播在一段时间后（默认210s）没有流量则SPT树会消失，成员端DR恢复到RP的RPT树。 PIM（SSM） • PIM-SM（SSM）无需Assert机制","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"IGMP","slug":"IGMP","permalink":"http://example.com/tags/IGMP/"},{"name":"PIM","slug":"PIM","permalink":"http://example.com/tags/PIM/"}]},{"title":"STP拓扑变更机制","slug":"STP拓扑变更机制","date":"2024-05-08T12:28:37.000Z","updated":"2024-05-08T12:57:02.129Z","comments":true,"path":"2024/05/08/STP拓扑变更机制/","permalink":"http://example.com/2024/05/08/STP%E6%8B%93%E6%89%91%E5%8F%98%E6%9B%B4%E6%9C%BA%E5%88%B6/","excerpt":"","text":"为什么要有STP拓扑变化机制网络中发生拓扑变化时，例如链路中断或接口异常Down等情况，由于MAC地址老化时间的存在（缺省为5分钟），如果不及时通知上游设备，则可能会导致上游设备的报文在这段时间内一直向一个不可达的链路发送。 拓扑改变导致MAC地址表错误 本例中，SW3中的MAC地址表项定义了通过端口GigabitEthernet 0&#x2F;0&#x2F;2可以到达主机1，通过端口GigabitEthernet 0&#x2F;0&#x2F;3可以到达主机2。由于SW2的根端口产生故障，导致生成树拓扑重新收敛，在生成树拓扑完成收敛之后，从主机1到主机2的帧仍然不能到达目的地。这是因为MAC地址表项老化时间是300秒，主机2发往主机1的帧到达SW3后，SW3会继续通过端口GigabitEthernet 0&#x2F;0&#x2F;2转发该数据帧。那么该怎么快速恢复转发？ 拓扑变更以及MAC地址表项更新的具体过程如下： SW2感知到网络拓扑发生变化后，会立即向SW3发送TCN BPDU报文。SW3收到SW2发来的TCN BPDU报文后，会把配置BPDU报文中的Flags的TCA位设置1，然后发送给SW2，告知SW2我已经收到你发送的TCN BPDU。SW3向根桥转发TCN BPDU报文。SW1把配置BPDU报文中的Flags的TC位和TCA位设置为1后发送，通知下游设备我已经收到你发送的TCN BPDU，并通知下游交换机把MAC地址表项的老化时间由默认的300 s修改为Forward Delay的时间（默认为15 s），之后会持续不断的发送TC bit &#x3D; 1的BPDU持续35s。最多等待15 s之后，SW3中的错误MAC地址表项会被自动清除。此后，SW3就能重新开始MAC表项的学习及转发操作。 说明： TCN BPDU报文主要用来向上游设备乃至根桥通知拓扑变化。 TCA标记置位的配置BPDU报文主要是上游设备用来告知下游设备已经知道拓扑变化，通知下游设备停止发送TCN BPDU报文。 置位的TC标记的配置BPDU报文主要是上游设备用来告知下游设备拓扑发生变化，请下游设备直接删除桥MAC地址表项，从而达到快速收敛的目的。 感知拓扑改变什么情况下STP会感知到拓扑发生了改变呢？有下面四种！ （1）当DP端口进入到Forwarding状态认为拓扑发生了改变。 如上图当S2的g0&#x2F;0&#x2F;3接口(与主机直接相连的接口都是DP端口)经过大概30s进入到Forwarding状态之后，S2的RP端口会立即向根桥发送一个TCN BPDU告知根桥拓扑发生了改变，根桥也会向S2交换机回复一个TC bit &#x3D; 1和TCA bit &#x3D; 1的BPDU，并且根桥会将TC bit &#x3D; 1的报文泛洪到全网交换机，持续35s。 S3的DP接口从shutdown重新进入到Forwarding状态与此情况类似。 （2）根桥的DP失效直接发送TC BPDU。 如上图，当根桥的DP失效之后，S3交换机的RP也随即失效，DP立即成为RP并向S2的AP持续不断的发送TCN BPDU。当S2的AP经过大概30s进入到Forwarding状态之后会向S3的DP回复一个TCA bit &#x3D; 1的BPDU，告知S3我已收到你发送的TCN BPDU并且通过自己的RP将TCN BPDU发送给根桥，根桥也会向S2交换机回复一个TC bit &#x3D; 1和TCA bit &#x3D; 1的BPDU，并且根桥会将TC bit &#x3D; 1的报文泛洪到全网交换机持续35s。 (3)RP失效或者RP进入到Forwarding状态。 S3的RP失效其实等同于根桥的DP失效导致S3的RP失效。S2的RP失效等同于 1.拓扑改变导致MAC地址表错误。(4)非根桥的DP端口失效不认为拓扑发生了改变。 如上图两种情况，非根桥的DP失效都不会认为拓扑发生了改变。 总结：stp发生拓扑变更的条件：1、处于转发状态或者监听状态的端口过渡到阻塞状态，这个状态通常是链路故障2、处于未启用状态的端口进入转发状态，这个状态通常是增加了新的链路3、交换机从指定端口收到TCNBPDU报文。 stp缺点：1.收敛速度慢，故障切换时间太长（30-50秒）2.网络中大量主机频繁上下线，会导致TCN BPDU大量发送，导致Mac地址表不稳定 RSTP对STP的改进： RSTP对STP的改进： 通过端口角色的增补，简化了生成树协议的理解及部署； 端口状态的重新划分； 配置BPDU格式的改变，充分利用了STP协议报文中的Flag字段，明确了端口角色； 配置BPDU的处理发生变化； 快速收敛； 增加保护功能。 改进点1：端口角色的改进：RSTP的端口角色共有4种：根端口、指定端口、Alternate端口和Backup端口。 根端口和指定端口的作用同STP中定义，Alternate端口和Backup端口的描述如下： 从配置BPDU报文发送角度来看： Alternate端口就是由于学习到其它网桥发送的配置BPDU报文而阻塞的端口 Backup端口就是由于学习到自己发送的配置BPDU报文而阻塞的端口 从用户流量角度来看： Alternate端口提供了从指定桥到根的另一条可切换路径，作为根端口的备份端口 Backup端口作为指定端口的备份，提供了另一条从根桥到相应网段的备份通路 给一个RSTP域内所有端口分配角色的过程就是整个拓扑收敛的过程 改进点2：端口状态的改进RSTP的状态规范缩减为3种，根据端口是否转发用户流量和学习MAC地址来划分: Discarding状态：不转发用户流量也不学习MAC地址 Learning状态：不转发用户流量但是学习MAC地址 Forwarding状：既转发用户流量又学习MAC地址。 STP端口状态 RSTP端口状态 端口在拓扑中的角色 Forwarding Forwarding 包括根端口、指定端口 Learning Learning 包括根端口、指定端口 Listening Discarding 包括根端口、指定端口 Blocking Discarding 包括Alternate端口、Backup端口 Disabled Discarding 包括Disable端口 改进点3：配置BPDU - RST BPDURSTP的配置BPDU充分利用了STP报文中的Flag字段，明确了端口角色 除了保证和STP格式基本一致之外，RSTP作了如下变化： Type字段：配置BPDU类型不再是0而是2，所以运行STP的设备收到RSTP的配置BPDU时会丢弃 Flag字段：使用了原来保留的中间6位，这样改变的配置BPDU叫做RST BPDU RST BPDU报文格式：RST BPDU与STP配置BPDU报文格式不同点 BPDU类型，1 Byte，RST BPDU的类型值为0x02。 标志，1 Byte，包括： bit 7：TCA，表示拓扑变化确认； bit 6：Agreement，表示同意，用于P&#x2F;A机制； bit 5：Forwarding，表示转发状态； bit 4：Learning，表示学习状态； bit 3和bit 2：表示端口角色, 00表示未知端口, 01表示替代或备份端口, 10表示根端口, 11表示指定端口 bit 1：Proposal，表示提议，用于P&#x2F;A机制； bit 0：TC，表示拓扑变化。 改进点4：配置BPDU的处理RSTP对配置BPDU的发送方式进行了改进 在拓扑稳定后，无论非根桥设备是否接收到根桥传来的配置BPDU报文，非根桥设备仍然按照Hello Time规定的时间间隔发送配置BPDU，该行为完全由每台设备自主进行 更短的BPDU超时时间如果一个端口在超时时间（即三个周期，超时时间＝Hello Time×3）内没有收到上游设备发送过来的配置BPDU，那么该设备认为与此邻居之间的协商失败 STP需要先等待一个Max Age 处理次优BPDU当一个端口收到上游的指定桥发来的RST BPDU报文时，该端口会将自身缓存的RST BPDU与收到的RST BPDU进行比较如果该端口缓存的RST BPDU优于收到的RST BPDU，那么该端口会直接丢弃收到的RST BPDU，立即回应自身缓存的RST BPDU，从而加快收敛速度 STP： STP只有指定端口会立即处理次优BPDU，其他端口会忽略次优BPDU，等到Max Age计时器超时后，缓存的次优BPDU才会老化，然后发送自身更优的BPDU，进行新一轮的拓扑收敛。 RSTP： RSTP处理次优BPDU报文不再依赖于任何定时器，解决拓扑收敛，同时RSTP的任何端口角色都会处理次优BPDU，从而加快了拓扑收敛。 改进点5：快速收敛机制快速收敛机制： 如果网络中一个根端口失效，那么网络中最优的Alternate端口将成为根端口，进入Forwarding状态。因为通过这个Alternate端口连接的网段上必然有个指定端口可以通往根桥 如果网络中一指定端口失效，那么网络中最优的Backup端口将成为指定端口，进入Forwarding状态。因为Backup端口作为指定端口的备份，提供了另一条从根桥到相应网段的备份通路 ##### 边缘端口 (Edge Port)机制： 在RSTP里面，如果某一个端口位于整个网络的边缘，即不再与其他交换设备连接，而是直接与终端设备直连，这种端口可以设置为边缘端口 边缘端口不参与RSTP计算，可以由Discarding直接进入Forwarding状态，同时边缘端口的UP和Down，不会引起网络拓扑的变动 但是一旦边缘端口收到配置BPDU，就丧失了边缘端口属性，成为普通STP端口，并重新进行生成树计算，从而引起网络震荡 Proposal&#x2F;Agreement机制：简称P&#x2F;A机制，RSTP通过P&#x2F;A机制加快了上游端口进入Forwarding状态的速度。 当一个端口被选举成为指定端口之后,会先进入Discarding状态，再通过P&#x2F;A机制快速进入Forwarding状态 事实上对于STP，指定端口的选择可以很快完成，主要的速度瓶颈在于：为了避免环路，必须等待足够长的时间，使全网的端口状态全部确定，也就是说必须要等待至少一个Forward Delay所有端口才能进行转发。 而RSTP的主要目的就是消除这个瓶颈，通过阻塞自己的非根端口来保证不会出现环路。而使用P&#x2F;A机制加快了上游端口进入Forwarding状态的速度。 改进点6：拓扑变更机制在RSTP中检测拓扑是否发生变化只有一个标准：一个非边缘端口迁移到Forwarding状态。 一旦检测到拓扑发生变化，将进行如下处理： 为本交换设备的所有非边缘指定端口和根端口启动一个TC While Timer，该计时器值是Hello Time的两倍。在这个时间内，清空状态发生变化的端口上学习到的MAC地址。 同时，由非边缘指定端口和根端口向外发送RST BPDU，其中TC置位。一旦TC While Timer超时，则停止发送RST BPDU。 其他交换设备接收到RST BPDU后，清空所有端口（除了收到RST BPDU的端口和边缘端口）学习到MAC地址，然后也为自己所有的非边缘指定端口和根端口启动TC While Timer，重复上述过程。 如此，网络中就会产生RST BPDU的泛洪。 RSTP与STP的兼容 RSTP可以兼容STP：RSTP可以和STP互操作，但是此时会丧失快速收敛等RSTP优势。 当一个网段里既有运行STP的交换设备又有运行RSTP的交换设备，STP交换设备会忽略RSTP的BPDU 运行RSTP的交换设备在某端口上接收到运行STP的交换设备发出的配置BPDU，在两个Hello Time时间之后，便把自己的端口转换到STP工作模式，发送配置BPDU，从而实现了互操作。","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"stp拓扑变更","slug":"stp拓扑变更","permalink":"http://example.com/tags/stp%E6%8B%93%E6%89%91%E5%8F%98%E6%9B%B4/"}]},{"title":"PPP/PPPoE","slug":"PPP-PPPoE","date":"2024-05-02T07:23:54.000Z","updated":"2024-07-16T12:09:56.046Z","comments":true,"path":"2024/05/02/PPP-PPPoE/","permalink":"http://example.com/2024/05/02/PPP-PPPoE/","excerpt":"","text":"PPP（点到点协议 ），该协议支持认证（PAP、CHAP）、该协议中还包括LCP、NCP协议 PPP链路的建立有三个阶段的协商过程，链路层协商、认证协商（可选）和网络层协商。1）链路层协商：通过LCP报文进行链路参数协商，建立链路层连接。 链路层协议（LCP）协商的参数有MRU（最大接收单元）、认证方式（不认证、PAP、CHAP）、魔术字（检测是否有环路） 2）认证协商（可选）：通过链路建立阶段协商的认证方式进行链路认证。 3）网络层协商 ：通过NCP协商来选择和配置一个网络层协议并进行网络层参数协商。 PPP协商时接口状态的变化： 正常PPP链路建立需要经历链路建立阶段、认证阶段和网络层协商阶段，详细过程如下：通信双方开始建立PPP链路时，先进入到Establish阶段。在Establish阶段，进行LCP协商：协商通信双方的MRU（Maximum Receive Unit，最大接收单元）、认证方式和魔术字（Magic Number）等选项。协商成功后进入Opened状态，表示底层链路已建立。如果配置了认证，将进入Authenticate阶段。否则直接进入Network阶段。在Authenticate阶段，会根据连接建立阶段协商的认证方式进行链路认证。认证方式有两种：PAP和CHAP。如果认证成功，进入Network阶段，否则进入Terminate阶段，拆除链路，LCP状态转为Down。在Network阶段，PPP链路进行NCP协商。通过NCP协商来选择和配置一个网络层协议并进行网络层参数协商。最常见的NCP协议是IPCP，用来协商IP参数。在Terminate阶段，如果所有的资源都被释放，通信双方将回到Dead阶段。PPP运行过程中，可以随时中断连接，物理链路断开、认证失败、超时定时器时间到、管理员通过配置关闭连接等动作都可能导致链路进入Terminate阶段。 网络运营商如何对用户上网行为进行收费和控制 ？ 针对特定的数据包，就必须识别发送方的身份。 在以太网链路上，以太网技术虽然具有简单易用，成本低等特点，但是以太网广播网络的属性，使得其通信双方无法相互验证对方的身份，因而通信是不安全的。 在PPP链路上，由于PPP协议自带认证功能，因此可以完美的解决上述问题。但是，PPP链路又无法实现多用户上网的需求。 为了解决这个矛盾问题，解决用户上网行为管理和收费的问题，提出了将PPP数据帧封装在以太网数据帧里边从而在以太网网络中传输的技术——PPPoE技术。 这里的PPP，就是指的PPP协议数据帧，而o就是over的意思，E就是Ethernet的意思，因此，PPPoE形象的说就是“在以太网上的PPP协议”。 PPPoE技术可以将用户连接到远程接入设备上，并提供良好访问控制功能，提供了一种经济的用户接入技术，并实现了对用户的控制。 PPPoE协议采用Client&#x2F;Server模式，普通用户一般为Client，而运营商为Server。 PPPoE的建立分为Discover阶段和PPP Session阶段。 Discover阶段：主要是选择PPPoE服务器，并确定所要建立的会话标识符Session ID。 当Client要运行PPPoE时，首先以广播的形式发送一个PADI（PPPoE Active Discovery Initiation）报文，该报文中含有Client端要请求的服务信息 PPPoE服务器在收到该报文后，会以单播的方式发送一个PADO（PPPoE Active Discovery Offer）报文，对Client端的PADI报文进行回应。 PPPoE Client端在收到这个报文后，会向PPPoE Server发送PADR（PPPoE Active Discovery Request）报文。在这个报文中，PPPoE Client会创建并携带一个PPPoE Session。 PPPoE Server还会向客户端发送PADS（PPPoE Active Discovery Session-confirmation）报文，表示收到了该Session ID。 发送PADT（PPPOE Active Discovery Terminate）报文，终止连接 PPP Session阶段：即执行标准的PPP过程，包括LCP协商、PAP&#x2F;CHAP认证、NCP协商等阶段。 PPP会话阶段包括LCP协商、PAP&#x2F;CHAP认证、NCP协商等阶段。需结合PPP链路建立过程来分析 配置","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"PPP","slug":"PPP","permalink":"http://example.com/tags/PPP/"},{"name":"PPPoE","slug":"PPPoE","permalink":"http://example.com/tags/PPPoE/"}]},{"title":"IS-IS总结","slug":"IS-IS总结","date":"2024-04-20T11:42:15.000Z","updated":"2024-07-21T14:26:35.282Z","comments":true,"path":"2024/04/20/IS-IS总结/","permalink":"http://example.com/2024/04/20/IS-IS%E6%80%BB%E7%BB%93/","excerpt":"","text":"IS-IS的介绍IS-IS —中间系统到中间系统 Is-is最开始是在osi模型中，适用于CLNP网络，现在的Isis指的是集成Isis 集成IS-IS特点:支持CLNP网络、IP网络采用数据链路层封装 OSPF特点:只支持IP网络采用IP报文封装 应用场景： ospf：园区网络 Isis：ISP骨干网 NASPCLNP协议中不实用IP地址，使用的是NSAP地址 NET（Network Entity Title，网络实体名称）是OSI协议栈中设备的网络层信息，主要用于路由计算，由区域地址（Area ID）和System ID组成，可以看作是特殊的NSAP（SEL为00的NSAP）。NET的长度与NSAP的相同，最长为20Byte，最短为8Byte。在IP网络中运行IS-IS时，只需配置NET，根据NET地址设备可以获取到Area ID以及System ID。System ID必须唯一，类似ospf中的router id 示例： IS-IS拓扑结构IS-IS在自治系统内采用骨干区域与非骨干区域两级的分层结构：Level-1路由器部署在非骨干区域。Level-2路由器和Level-1-2路由器部署在骨干区域。每一个非骨干区域都通过Level-1-2路由器与骨干区域相连。 1）IS-IS中路由器的分类 Leverl-1：只能和同区域的L1、L1&#x2F;2路由器建立L1的邻接关系，只能有本区域的L1 LSDB数据库 level-2：可以和同区域的或者不同 区域L2、L1&#x2F;2路由器建立L2的邻接关系，拥有L2的LSDB level1-2：可以 和同区域的L1路由器建立L1的邻接关系，也可以和同区域或者不同区域的L2路由器建立L2的邻接关系 2）Isis支持 的网络类型 广播和点到点 广播（Broadcast）： 如Ethernet。点到点（P2P）： 如PPP、 HDLC等。 3）Isis的开销值 IS-IS使用Cost（开销）作为路由度量值，Cost值越小，则路径越优。IS-IS链路的Cost与设备的接口有关，与OSPF类似，每一个激活了IS-IS的接口都会维护接口Cost。然而与OSPF不同的是，IS-IS接口的Cost在缺省情况下并不与接口带宽相关（在实际部署时，IS-IS也支持根据带宽调整Cost值），无论接口带宽多大，缺省时Cost为10。一条IS-IS路径的Cost等于本路由器到达目标网段沿途的所有链路的Cost总和。 IS-IS有三种方式来确定接口的开销，按照优先级由高到低分别是：接口开销：为单个接口设置开销。全局开销：为所有接口设置开销。自动计算开销：根据接口带宽自动计算开销。 报文格式 通用头部解释： TLV： IS-IS协议工作原理工作原理：①建立邻接；②同步LSDB；③计算路由； 邻接建立IS-IS按如下原则建立邻接关系： 只有同一层次的相邻路由器才有可能成为邻接。对于Level-1路由器来说，Area ID必须一致。链路两端IS-IS接口的网络类型必须一致。链路两端IS-IS接口的地址必须处于同一网段（默认情况下）。 使用IIH（Isis hello ）：发现邻居；建立邻接关系；维护邻接关系， 广播网络：level-1 LAN IIH、level-2 LAN IIH、 Level-1 IIH和Level-2 IIH发送的组播地址分别为01-80-C2-00-00-14、01-80-C2-00-00-15。 点到点网络中：P2P IIH IIH： P2P IIH中相对于LAN IIH来说，多了一个表示本地链路ID的Local Circuit ID字段，缺少了表示广播网中DIS的优先级的Priority字段以及表示DIS和伪节点System ID的LAN ID字段。 图1-68 IS-IS Hello消息格式 123456789101112131415161718192021222324252627282930313233+----------------------------------------------+------------| Intradomain Routing Protocol Discriminator | |+----------------------------------------------+ || Length Indicator | |+----------------------------------------------+ || Version/Protocol ID Extension | |+----------------------------------------------+ || ID Length | PDU+----------------------------------------------+ Common| R | R | R | PDU Type | Header+----------------------------------------------+ || Version | |+----------------------------------------------+ || Reserved | |+----------------------------------------------+ || Maximum Area Addresses | |+----------------------------------------------+------------| Reserved/Circuit Type | |+----------------------------------------------+ || Source ID | |+----------------------------------------------+ || Holding Time | |+----------------------------------------------+ PDU| PDU Length | Specific+----------------------------------------------+ Header| R | Priority | |+----------------------------------------------+ || LAN ID | |+----------------------------------------------+ || Local Circuit ID | |+----------------------------------------------+------------| Variable Length Fields (CLV) |+----------------------------------------------+ Reserved&#x2F;Circuit Type：表示路由器的类型（01表示L1，10表示L2，11表示L1&#x2F;L2）。 Source ID ：发出Hello报文的路由器的System ID。 Holding Time ： 保持时间。在此时间内如果没有收到邻接发来的Hello报文，则中止已建立的邻接关系。 Priority ：选举DIS的优先级，取值范围为0～127。数值越大，优先级越高。该字段只在广播网中的Hello消息(LAN IIH消息)携带；点到点网络的Hello消息(P2P IIH消息)没有此字段，也没有此字段之前的R保留位。 LAN ID ： 包括DIS的System ID和伪节点ID。该字段只在广播网中的Hello消息(LAN IIH消息)携带；点到点网络的Hello消息(P2P IIH消息)没有此字段。 Local Circuit ID ：本地链路ID。该字段只在点到点网络的Hello消息(P2P IIH消息)携带；广播网中的Hello消息(LAN IIH消息)没有此字段。 广播类型： 点到点类型： 选举DIS： 在广播网络中，IS-IS需要在一个广播网络中的所有的路由器中选举一个路由器作为DIS（Designated Intermediate System）。DIS用来创建和更新伪节点（Pseudonodes），并负责生成伪节点的LSP，用来描述这个网络上有哪些网络设备。伪节点是用来模拟广播网络的一个虚拟节点，并非真实的路由器。在IS-IS中，伪节点用DIS的System ID和Circuit ID（非0值）标识。 Level-1和Level-2的DIS是分别选举的，用户可以为不同级别的DIS选举设置不同的优先级。 DIS选举原则： ①优先级：0-127 默认64，越大越优，优先级0也参与选举 ②MAC地址：越大越优 DIS发送Hello PDU的时间间隔是普通路由器的1&#x2F;3，这样可以确保DIS出现故障时能够被更快速地被发现。 IS-IS中DIS与OSPF协议中DR（Designated Router）的区别：1.在IS-IS广播网中，优先级为0的路由器也参与DIS的选举，而在OSPF中优先级为0的路由器则不参与DR的选举。2.在IS-IS广播网中，当有新的路由器加入，并符合成为DIS的条件时，这个路由器会被选中成为新的DIS，原有的伪节点被删除。此更改会引起一组新的LSP泛洪。而在OSPF中，当一台新路由器加入后，即使它的DR优先级值最大，也不会立即成为该网段中的DR。—-ISis中的DIS支持抢占，ospf中的DR和BDR不支持抢占3.在IS-IS广播网中，同一网段上的同一级别的路由器之间都会形成邻接关系，包括所有的非DIS路由器之间也会形成邻接关系。而在OSPF中，路由器只与DR和BDR建立邻接关系。 –-Isis中建立的都是邻接的关系 同步链路状态数据库L1和L2分别有自己的LSDB LSDB中包含的就是LSP，LSP描述路由器的链路状态信息 display isis lsdb Database information for ISIS(1)Level-1 Link State DatabaseLSPID Seq Num Checksum Holdtime Length ATT&#x2F;P&#x2F;OL-——————————————————————————————–0100.0000.1001.00-00* 0x00000005 0x13a8 1187 97 0&#x2F;0&#x2F;00100.0000.1001.01-00* 0x00000001 0xda2e 1185 55 0&#x2F;0&#x2F;00100.0000.2002.00-00 0x00000004 0x94e9 1188 86 1&#x2F;0&#x2F;0Total LSP(s): 5 (In TLV)-Leaking Route, (By LSPID)-Self LSP, +-Self LSP(Extended), ATT-Attached, P-Partition, OL-Overload0100.0000.1001（路由器的系统ID）.00（实节点还是伪节点，00表示实节点，非0表示伪节点）-00（LSP分片）（表示是本路由器产生的） LSP 图1-70 L1&#x2F;L2 LSP格式 12345678910111213141516171819202122232425262728293031+----------------------------------------------+------------| Intradomain Routing Protocol Discriminator | |+----------------------------------------------+ || Length Indicator | |+----------------------------------------------+ || Version/Protocol ID Extension | |+----------------------------------------------+ || ID Length | PDU+----------------------------------------------+ Common| R | R | R | PDU Type | Header+----------------------------------------------+ || Version | |+----------------------------------------------+ || Reserved | |+----------------------------------------------+ || Maximum Area Addresses | |+----------------------------------------------+------------| PDU Length | |+----------------------------------------------+ || Remaining Lifetime | |+----------------------------------------------+ || LSP ID | PDU+----------------------------------------------+ Specific| Sequency Number | Header+----------------------------------------------+ || Checksum | |+----------------------------------------------+ || P | ATT | OL | IS Type | |+----------------------------------------------+------------| Variable Length Fields(CLV) |+----------------------------------------------+ Remaining Lifetime : LSP的生存时间，以秒为单位。 LSP ID:由三部分组成，System ID、伪节点ID和LSP分片后的编号。 Sequence Number: LSP的序列号。在路由器启动时所发送的第一个LSP报文中的序列号为1，以后当需要生成新的LSP时，新LSP的序列号在前一个LSP序列号的基础上加1。更高的序列号意味着更新的LSP。 Checksum ： LSP的校验和。 ATT（Attachment）：由Level-1-2路由器产生，用来指明始发路由器是否与其它区域相连。虽然此标志位也存在于Level-1和Level-2的LSP中，但实际上此字段只和Level-1-2路由器始发的L1 LSP有关。 OL（LSDB Overload，1bit）：过载标志位。设置了过载标志位的LSP虽然还会在网络中扩散，但是在计算通过超载路由器的路由时不会被采用。即对路由器设置过载位后，其它路由器在进行SPF计算时不会考虑这台路由器。当路由器内存不足时，系统自动在发送的LSP报文中设置过载标志位。 IS Type(2bit)：生成LSP的路由器的类型。用来指明是Level-1还是Level-2路由器（01表示Level-1，11表示Level-2）。 3）Isis路由计算 ①L1的路由器只能通过L1的LSBD计算学习到L1的路由 —只有L1邻接关系的路由 ②L2的路由器维护L2的LSDB，但是可以学习所有的路由，包括L1和L2的路由—全网路由 ③L1&#x2F;2会向L1区域下发一条L1的缺省路由，L1可以通过该缺省路由到达L2 ④路由渗透：将L2路由在L1&#x2F;2路由器上进行引入，让L1路由器可以学习到L2的明细路由 [R2-isis-1]import-route isis level-2 into level-1 4、IS-IS协议的报文 ospf–Isis报文的对应 Hello —&gt;IIH DD —&gt;CSNP LSR —&gt;PSNP LSU —&gt;LSP LSACK —&gt;PSNP LSA —&gt;LSP 根据报文的种类，认证可以分为以下三类：接口认证：在接口视图下配置，对Level-1和Level-2的Hello报文进行认证。区域认证：在IS-IS进程视图下配置，对Level-1的CSNP、PSNP和LSP报文进行认证。路由域认证：在IS-IS进程视图下配置，对Level-2的CSNP、PSNP和LSP报文进行认证。 根据报文的认证方式，可以分为以下四类：简单认证：将配置的密码直接加入报文中，这种加密方式安全性较其他两种方式低。MD5认证：通过将配置的密码进行MD5算法加密之后再加入报文中，提高密码的安全性。Keychian认证：通过配置随时间变化的密码链表来进一步提升网络的安全性。HMAC-SHA256认证：通过将配置的密码进行HMAC-SHA256算法加密之后再加入报文中，提高密码的安全性。 5、IS-IS协议配置 [r1]isis 进入Isis进程，默认进程1 [r1-isis-1]network-entity 49.0001.0000.0000.0001.00 配置NET地址，其中system id必须唯一 [r1-isis-1]is-level level-1 修改路由的级别，默认为L1&#x2F;2路由器 [R2-GigabitEthernet0&#x2F;0&#x2F;0]isis enable 100 宣告网段进入Isis进程100 [R2-isis-1]is-name R2 将system id用name表示 [R2-GigabitEthernet0&#x2F;0&#x2F;1]isis circuit-level level-2 修改接口的链路级别 [r1-GigabitEthernet0&#x2F;0&#x2F;0]isis circuit-type p2p 修改接口的链路类型 [R2-GigabitEthernet0&#x2F;0&#x2F;2]isis dis-priority 127 level-2 修改接口的优先级，影响DIS的选举，可以只针对某个level进行更改 查看命令 Display isis peer 查看Isis邻居 Display Isis interface 查看DIS的选举、 Display Isis route 查看Isis路由","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"IS-IS","slug":"IS-IS","permalink":"http://example.com/tags/IS-IS/"}]},{"title":"opsf总结","slug":"opsf总结","date":"2024-04-18T12:24:37.000Z","updated":"2024-07-18T08:40:56.230Z","comments":true,"path":"2024/04/18/opsf总结/","permalink":"http://example.com/2024/04/18/opsf%E6%80%BB%E7%BB%93/","excerpt":"","text":"ospf协议工作原理工作过程：①建立邻居关系（hello 2-way状态）每台路由器都会产生lsa，路由器将接收到的lsa放入自己的lsdb中；②同步LSDB（DD、LSR、LSU、LSACK full状态）；③计算路由（本路由器通过自己的LSDB，以自己为根节点，计算最短路径树，最终得到路由）SPF算法； ospf支持的网络类型：广播、NBMA、点到点、点到多点 ospf计算；计算路由+计算拓扑 ospf报文采用IP封装，协议号89， ospfv2（ipv4），ospfv3（ipv6） ospf组播更新 224.0.0.5（所有运行ospf协议的路由器侦听） 224.0.0.6（DR和BDR侦听） Router id在自治系统中唯一标识一台运行ospf的路由器，32位无符号整数 选举规则：手动配置（建议），如果没有手动配置，则路由器使用Loopback接口中最大的IP地址作为Router id，如果没有配置Loopback接口，则使用物理接口中最大的IP地址 Cost值缺省接口cost&#x3D;（100mib&#x2F;s）&#x2F; 接口带宽，修改100mid&#x2F;s改变cost 也可以直接修改 累计cost作为开销值，流量从源网络到目的网络所经过所有路由器的出接口的cost总和 Hello报文 发送间隔10s，失效40s，修改发送，失效也变，失效始终为发送的4倍 命令：接口视图下，ospf timer hello 10 ospf邻居建立失败 ，可能原因：①物理链路故障；②ospf版本不一致；③区域ID不一致；④认证类型不一致；⑤认证数据不一致；⑥掩码不一致；（只出现在广播型网络中，点到点网络不检查掩码信息）⑦hello报文间隔不一致；⑧router id一致；（华为设备遇到router id一致，会重新配置router id） DD报文DD报文部分字段解释I：当发送连续多个DD报文时，如果这是第一个DD报文，则置为1，否则置为0。M (More)：当发送连续多个DD报文时，如果这是最后一个DD报文，则置为0。否则置为1，表示后面还有其他的DD报文。MS (Master&#x2F;Slave)：当两台OSPF路由器交换DD报文时，首先需要确定双方的主从关系，Router ID大的一方会成为Master。当值为1时表示发送方为Master。DD sequence number：DD报文序列号。主从双方利用序列号来保证DD报文传输的可靠性和完整性。 链路状态类型、链路状态ID、通告路由器三元组唯一地标识了一个LSA。链路状态老化时间 、链路状态序列号 、校验和用于判断LSA的新旧 ospf状态机之前的手写笔记😍 DR和BDR既侦听224.0.0.5也侦听224.0.0.6 每个网段选举一个 DR：指定路由器，负责在MA网络中建立和维护邻接关系，并负责lsa同步 DR和其他所有路由器形成邻接关系，其他路由器之间不直接交换链路状态信息 在DR失效时候，BDR接替 DR默认优先级1（0-255）越大越优，非抢占，优先级为0的不参与选举 路由类型下表中按优先级从高到低顺序列出了路由类型 路由类型 含义 Intra Area 区域内路由。 Inter Area 区域间路由。 第一类外部路由（Type1 External） 这类路由的可信程度高一些，所以计算出的外部路由的开销与自治系统内部的路由开销是相当的，并且和OSPF自身路由的开销具有可比性。到第一类外部路由的开销&#x3D;本设备到相应的ASBR的开销+ASBR到该路由目的地址的开销。 第二类外部路由（Type2 External） 这类路由的可信度比较低，所以OSPF协议认为从ASBR到自治系统之外的开销远远大于在自治系统之内到达ASBR的开销。所以，OSPF计算路由开销时只考虑ASBR到自治系统之外的开销，即到第二类外部路由的开销&#x3D;ASBR到该路由目的地址的开销。 LSA LSA类型 LSA作用 Router-LSA（Type1） 每个设备都会产生，描述了设备的链路状态和开销，在所属的区域内传播。 Network-LSA（Type2） 由DR（Designated Router）产生，描述本网段的链路状态，在所属的区域内传播。 Network-summary-LSA（Type3） 由ABR产生，描述区域内某个网段的路由，并通告给发布或接收此LSA的非Totally STUB或NSSA区域。例如：ABR同时属于Area0和Area1，Area0内存在网段10.1.1.0，Area1内存在网段11.1.1.0，ABR为Area0生成到网段11.1.1.0的Type3 LSA；ABR为Area1生成到网段10.1.1.0的Type3 LSA，并通告给发布或接收此LSA的非Totally Stub或NSSA区域。 ASBR-summary-LSA（Type4） 由ABR产生，描述到ASBR的路由，通告给除ASBR所在区域的其他相关区域。 AS-external-LSA（Type5） 由ASBR产生，描述到AS外部的路由，通告到所有的区域（除了STUB区域和NSSA区域）。 NSSA LSA（Type7） 由ASBR产生，描述到AS外部的路由，仅在NSSA区域内传播。 Opaque LSA（Type9&#x2F;Type10&#x2F;Type11） Opaque LSA提供用于OSPF的扩展的通用机制。其中：Type9 LSA仅在接口所在网段范围内传播。用于支持GR的Grace LSA就是Type9 LSA的一种。Type10 LSA在区域内传播。用于支持TE的LSA就是Type10 LSA的一种。Type11 LSA在自治域内传播，目前还没有实际应用的例子。 区域类型 Router-LSA（Type1） Network-LSA（Type2） Network-summary-LSA（Type3） ASBR-summary-LSA（Type4） AS-external-LSA（Type5） NSSA LSA（Type7） 普通区域（包括标准区域和骨干区域） 是 是 是 是 是 否 Stub区域 是 是 是 否 否 否 Totally Stub区域 是 是 否 否 否 否 NSSA区域 是 是 是 否 否 是 Totally NSSA区域 是 是 否 否 否 是 路由器类型Router LSA（1类）单区域中会用到1类、2类LSA Router LSA—1类LSA 所有的路由器都会产生，描述本路由器的信息 泛洪区域：本区域 Router LSA使用Link来承载路由器直连接口的信息。每条Link均包含“链路类型”、“链路ID”、“链路数据”以及“度量值”这几个关键信息。路由器可能会采用一个或者多个Link来描述某个接口。 1.link type：p2p link-id：对端的route-id data：连接对端接口的ip 2.link type：transnet link-id：DR的接口ip地址 data：连接DR的接口ip 3.link type：stubnet link-id：网络地址 data：掩码 4，link type：vlink（和p2p一样） link-id：对端的route-id data：连接对端接口的ip地址 广播型网络中链路类型：TransNet 点到点网络中链路类型：point-to-point （拓扑信息）、stubnet（网络信息） Router LSA中链路状态类型、链路状态ID、通告路由器用谁表示： 链路状态类型：router 链路状态ID：本路由器的router id 通告路由器：本路由 Network LSA（2类）Network LSA–2类LSA DR路由器 泛洪区域：本区域 Network LSA中链路状态类型、链路状态ID、通告路由器用谁表示： 链路状态类型：network 链路状态ID：DR路由器的接口IP地址 通告路由器：DR路由器的router id Link State ID ：DR的接口IP地址。 Network Mask：MA网络的子网掩码。 Attached Router：连接到该MA网络的路由器的Router-ID（与该DR建立了邻接关系的邻居的Router-ID，以及DR自己的Router-ID），如果有多台路由器接入该MA网络，则使用多个字段描述。 Network LSA（3类）3类LSA ABR产生，泛洪范围本区域 作用：用于向一个区域通告到达另一个区域的路由 三类lsa传递的cost计算 区域间防环： 1）非骨干区必须和骨干区area0相连，非骨干区不能直接进行通信 2）三类LSA传递是 单向的 3）从非骨干区域收到的3类LSA不能用于区域间路由的计算。 虚连接OSPF要求骨干区域必须是连续的，但是并不要求物理上连续，可以使用虚连接使骨干区域在逻辑上连续。 虚连接可以在任意两个ABR上建立，但是要求这两个ABR都有端口连接到一个相同的非骨干区域。 建立之后 R3会有area 0 ，area 2， area 1 的lsdb R2有area 0，area 1的lsdb（注意没有area 2，因为R2建立虚连接的接口属于area 1，R3建立虚连接的接口属于area 1） AS External LSA（5类）AS-external LSA（5类LSA）：由ASBR产生，描述到达AS外部的路由，该LSA会被通告到所有的区域 LS Type：取值5，代表AS-external-LSA。Link State ID：外部路由的目的网络地址。Advertising Router：生成该LSA的Router ID。Network Mask：网络掩码。 ASBR-Summary LSA（4类）ASBR-Summary LSA（4类LSA）：由ABR产生，描述到ASBR的路由，通告给除ASBR所在区域的其他相关区域。 LS Type：取值4，代表ASBR-Summary LSA。Link State ID ：ASBR的Router ID。Advertising Router:生成LSA的Router ID。 ospf外部路由在引入时，开销值类型有两种：默认情况是type-2 配置：[R7-ospf-1]import-route direct type 1 OSPF路由遵循以下优先级顺序，区域内路由&gt;区域间路由&gt;Metric-Type-1外部路由&gt;Metric-Type-2外部路由。 ospf路由汇总OSPF路由汇总的类型：在ABR执行路由汇总：对区域间的路由执行路由汇总。在ASBR执行路由汇总：对引入的外部路由执行路由汇总。 区域间路由汇总在ABR设备上配置： [R6-ospf-1-area-0.0.0.3]abr-summary 172.16.0.0 255.255.252.0 外部路由汇总在ASBR上配置： [R8-ospf-1]asbr-summary 10.1.0.0 255.255.240.0 ospf认证OSPF支持报文认证功能，只有通过认证的OSPF报文才能被接收。路由器支持两种OSPF报文认证方式，当两种认证方式都存在时，优先使用接口认证方式：区域认证方式：一个OSPF区域中所有的路由器在该区域下的认证模式和口令必须一致。 根据报文的认证方式，可以分为： 空认证 不进行认证。 明文认证 这是一种简单的加密方式，将配置的密码直接加入报文中，这种加密方式安全性不高。 MD5认证 通过将配置的密码进行MD5等加密算法之后再加入报文中，这样提高了密码的安全性。目前支持MD5&#x2F;HMAC-MD5。 Keychain认证 Keychain由多个认证密钥组成，每个密钥包含一个ID和密码。密钥存在生命期，通过密钥的生命期可以在Keychain中滚动选择不同的认证密钥。Keychain可以滚动选择认证密钥来增强防攻击性。 Keychain为OSPF提供了认证保护，Keychain通过动态的更改认证算法和密钥，提高了OSPF的安全性。应用Keychain认证，除了可以对OSPF协议报文进行认证之外，还可以对TCP建立连接的过程进行认证。 HMAC-SHA256认证 通过将配置的密码进行HMAC-SHA256算法加密之后再加入报文中，提高密码的安全性。 [R6-ospf-1-area-0.0.0.3]authentication-mode md5 1 cipher huawei 该区域中所有路由器都要配置 接口认证方式：相邻路由器直连接口下的认证模式和口令必须一致。[R2-GigabitEthernet0&#x2F;0&#x2F;0]ospf authentication-mode md5 1 cipher huawei 在一条链路上的所有接口下配置 特殊区域 区域类型 作用 普通区域 缺省情况下，OSPF区域被定义为普通区域。普通区域包括标准区域和骨干区域。标准区域是最通用的区域，它传输区域内路由，区域间路由和外部路由。骨干区域是连接所有其他OSPF区域的中央区域。骨干区域通常用Area 0表示。 STUB区域 不允许发布自治系统外部路由，只允许发布区域内路由和区域间的路由。在STUB区域中，路由器的路由表规模和路由信息传递的数量都会大大减少。为了保证到自治系统外的路由可达，由该区域的ABR发布Type3缺省路由传播到区域内，所有到自治系统外部的路由都必须通过ABR才能发布。 Totally STUB区域 不允许发布自治系统外部路由和区域间的路由，只允许发布区域内路由。在Totally STUB区域中，路由器的路由表规模和路由信息传递的数量都会大大减少。为了保证到自治系统外和其他区域的路由可达，由该区域的ABR发布Type3缺省路由传播到区域内，所有到自治系统外部和其他区域的路由都必须通过ABR才能发布。 NSSA区域 NSSA区域允许引入自治系统外部路由，由ASBR发布Type7 LSA通告给本区域，这些Type7 LSA在ABR上转换成Type5 LSA，并且泛洪到整个OSPF域中。NSSA区域同时保留自治系统内的STUB区域的特征。该区域的ABR发布Type7缺省路由传播到区域内，所有域间路由都必须通过ABR才能发布。 Totally NSSA区域 Totally NSSA区域允许引入自治系统外部路由，由ASBR发布Type7 LSA通告给本区域，这些Type7 LSA在ABR上转换成Type5 LSA，并且泛洪到整个OSPF域中。Totally NSSA区域同时保留自治系统内的Totally STUB Area区域的特征。该区域的ABR发布Type3和Type7缺省路由传播到区域内，所有域间路由都必须通过ABR才能发布。 stub区域1、2、3、3类缺省LSA（ABR产生的） Stub区域的ABR不向Stub区域内传播它接收到的AS外部路由（也就是4类、5类LSA），Stub区域中路由器的LSDB、路由表规模都会大大减小。为保证Stub区域能够到达AS外部，Stub区域的ABR将生成一条缺省路由（使用3类LSA描述）。 配置Stub区域时需要注意下列几点：骨干区域不能被配置为Stub区域。Stub区域中的所有路由器都必须将该区域配置为Stub。Stub区域内不能引入也不接收AS外部路由。虚连接不能穿越Stub区域。 Totally Stub区域1、2、3类缺省LSA（ABR产生的） Totally Stub区域既不允许AS外部路由在本区域内传播，也不允许区域间路由在本区域内传播。Totally Stub区域内的路由器通过本区域ABR下发的缺省路由（使用3类LSA描述）到达其他区域，以及AS外部配置Totally Stub区域时需要注意：与Stub区域配置的区别在于，在ABR上需要追加no-summary关键字。 NSSA产生背景： 1、2、3、7类、7类缺省LSA（ABR产生的） NSSA区域能够引入外部路由，同时又不会学习来自OSPF网络其它区域引入的外部路由。Totally NSSA与NSSA区域的配置区别在于前者在ABR上需要追加no-summary关键字。 NSSA区域 相对于stub区别在于，可以引入外部路由，外部路由引入后，会以7类LSA在NSSA区域中泛洪，然后 在ABR设备上将7类LSA转化成5类LSA在其他区域 泛洪。为了让NSSA区域内的路由器能够通过骨干区域到达AS外部，NSSA区域的ABR会自动向该区域注入一条缺省路由，该路由采用7类LSA描述。 说明：上图中，R3上执行7转5的操作，把5类的lsa泛洪到其他区域，别的区域会认为R3是ASBR（实际是R5），R2作为ABR会发布4类lsa，来描述R3的位置 Totally NSSA：1、2、3缺省（ABR产生）、7类、7类缺省LSA（ABR产生的） Silent-InterfaceSilent-Interface有以下特性：Silent-Interface不会接收和发送OSPF报文。Silent-Interface的直连路由仍可以发布出去。 通常我们会 将连接终端或者服务器的接口设置成Silent-Interface [R1]ospf[R1-ospf-1]area 0[R1-ospf-1-area-0.0.0.0]network 192.168.4.0 0.0.0.255[R1-ospf-1]silent-interface GigabitEthernet 0&#x2F;0&#x2F;1 例 R1的GE0&#x2F;0&#x2F;1接口在OSPF network命令的网段范围内。 到达该接口的路由将被通告到OSPF，使得其他设备能够访问Server。 由于该接口上未连接任何其他OSPF路由器，因此管理员将该接口配置为Silent-Interface，该接口将不再收发Hello报文，从而避免了对Server的性能降低。 路由器对lsa处理流程","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"ospf","slug":"ospf","permalink":"http://example.com/tags/ospf/"}]},{"title":"交换机工作原理","slug":"交换机工作原理","date":"2024-03-29T17:08:49.000Z","updated":"2024-03-29T17:15:35.603Z","comments":true,"path":"2024/03/30/交换机工作原理/","permalink":"http://example.com/2024/03/30/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/","excerpt":"","text":"","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"交换机工作原理","slug":"交换机工作原理","permalink":"http://example.com/tags/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"}]},{"title":"子网划分","slug":"子网划分","date":"2024-03-23T16:39:44.000Z","updated":"2024-03-23T17:25:29.504Z","comments":true,"path":"2024/03/24/子网划分/","permalink":"http://example.com/2024/03/24/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/","excerpt":"","text":"子网划分首先为什么要子网划分？ 有类IP地址规划的缺陷：使用默认掩码的问题：地址范围过大或过小，导致IP地址的浪费！ 在一个网络地址中，主机数：2的n次方，可用的主机数：2*n-2（这里n是主机数） 如果这个网段只用于一个小型局域网，例如一个实验室，只有几十台主机，那么大大浪费了ip地址 所以，子网划分给这个网络地址分成若干个，减少浪费 相当于把主机数均匀的分配给若干个（网络号借位，主机号减少） 例如网络地址：192.168.1.0&#x2F;24，网络号24位，主机号8位，如果划成两个子网，网络号借1位 借的1位是1或者是0 192.168.1.00000000（前25位变成网络号）子网1：192.168.1.0&#x2F;25 192.168.1.10000000 子网2：192.168.128.0&#x2F;25 例：192.168.1.0 分配三个部门，每个部门30台主机 要借2位 00 01 10 11 这四种排列组合，分为四个子网 192.168.1.00 000000 –192.168.1.0&#x2F;26 192.168.1.01 000000 –192.168.1.64&#x2F;26 192.168.1.10 000000 –192.168.1.128&#x2F;26 192.168.1.11 000000 –192.168.1.192&#x2F;26 子网划分的原理 IP地址由网络位+主机位组成，子网划分就是借用现有网段的主机位的最左边某几位作为子网位，划分出多个子网。 ①把原来有类网络IPv4地址中的“网络号”部分向“主机号”部分借位 ②把一部分原来属于“主机号”部分的位变成“网络号”的一部分（通常称之为“子网号”）。 因此IP地址进行转变：网络号+主机号 变成 网络号+子网号（m）+主机号（n） 划分后子网数量：2*m 划分后每个子网可用主机数：2*n-2（主机号全为0和全为1（指二进制）的ip地址分别为网络地址与广播地址，是不能分配给某个特定的主机使用的） 子网划分的步骤 ① 确定所需子网数2*m， ② 确定每个子网可用主机数2*n-2 ③ 确定需像主机号部分借多少位（m），才能满足需要求 ④ 根据主机数可得知子网地址空间大小2*n ⑤ 进行地址划分 子网划分示例 某公司有四个部门，每个部门拥有50台主机，分配一个C类地址200.161.30.0&#x2F;24,请问如何进行网络地址规划？ a.确定子网数：四个部门，2*m&gt;&#x3D;4 b.确定主机数：30台主机，2*n-2&gt;&#x3D;30 c.C类地址网络号位24位，主机位8位，向第四段主机位借位，由上可知子网位m&#x3D;2，主机位n&#x3D;6 d.子网空间为64，子网数为4，根据原主机位八位则原网络空间为0-255，共256个，此时我们算出子网空间为64，可得出四个子网范围0-63、64-127、127-192、192-255 e. 第一个子网200.161.30.0&#x2F;26-200.161.30.63&#x2F;26 第二个子网200.161.30.64&#x2F;26-200.161.30.127&#x2F;26 第三个子网200.161.30.128&#x2F;26-200.161.30.191&#x2F;26 第四个子网200.161.39.192&#x2F;26-200.161.30.255&#x2F;26 f.主机位全为0和1的地址分别为网络地址与广播地址，不能分配给主机使用，则 部门1地址范围：200.161.30.1-62&#x2F;26 部门2地址范围：200.161.30.65-12&#x2F;26 部门3地址范围：200.161.30.129-190&#x2F;26 部门4地址范围：200.161.30.193-254&#x2F;26","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"子网划分","slug":"子网划分","permalink":"http://example.com/tags/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/"}]},{"title":"WLAN基础配置（ap上线）","slug":"WLAN基础配置（ap上线）","date":"2023-12-20T10:17:25.000Z","updated":"2023-12-20T10:27:08.822Z","comments":true,"path":"2023/12/20/WLAN基础配置（ap上线）/","permalink":"http://example.com/2023/12/20/WLAN%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE%EF%BC%88ap%E4%B8%8A%E7%BA%BF%EF%BC%89/","excerpt":"","text":"概念CAPWAP协议CAPWAP是基于UDP进行传输的应用层协议，CAPWAP协议在传输层运输两种类型的消息： 业务数据流量，封装转发无线数据帧 。——通过CAPWAP数据隧道。 管理流量，管理AP和AC之间交换的管理消息 。——通过CAPWAP控制隧道。 CAPWAP数据和控制报文基于不同的UDP端口发送： 管理流量端口为UDP端口5246。 业务数据流量端口为UDP端口5247。 AC连接方式直连模式下AC部署在用户的转发路径上，采用这种组网方式，对AC的吞吐量以及处理数据能力要求比较高，否则AC会是整个无线网络带宽的瓶颈。但用此种组网，组网架构清晰，组网实施起来简单 在旁挂式组网中，AC只承载对AP的管理功能，管理流封装在CAPWAP隧道中传输。数据业务流可以通过CAPWAP数据隧道经AC转发，也可以不经过AC转发直接转发，后者无线用户业务流经汇聚交换机由汇聚交换机传输至上层网络。 WLAN的基本概念 BSS：一个AP所覆盖的范围，在一个BSS的服务区域内，STA可以相互通信。 BSSID：是无线网络的一个身份标识，用AP的MAC地址表示。 SSID：表示无线网络的标识，用来区分不同的无线网络。例如，当我们在笔记本电脑上搜索可接入无线网络时，显示出来的网络名称就是SSID。 VAP早期的AP只支持1个BSS，如果要在同一空间内部署多个BSS，则需要安放多个AP，这不但增加了成本，还占用了信道资源。为了改善这种状况，现在的AP通常支持创建出多个虚拟AP (Virtual Access Point, VAP)。如图16-13所示，它相当于交换机中的VLAN ESS 为了满足实际业务的需求，需要对BSS的覆盖范围进行扩展。同时用户从一个BSS移动到另一个BSS时，不能感知到SSID的变化，则可以通过扩展服务集ESS (Extend Service Set)实现。如图6-14所示，这是由多个使用相同SSID的BSS组成，是采用相同的SSID的多个BSS组成的更大规模的虚拟BSS。 实验 实验步骤 步骤1：基本配置LSW2的配置system-view[Huawei]undo info-center enable[Huawei]sysname LSW2[LSW2]vlan 100[LSW2-vlan100]quit[LSW2]interface e0&#x2F;0&#x2F;1[LSW2-Ethernet0&#x2F;0&#x2F;1]port link-type trunk[LSW2-Ethernet0&#x2F;0&#x2F;1]port trunk allow-pass vlan 100[LSW2-Ethernet0&#x2F;0&#x2F;1]port trunk pvid vlan 100[LSW2-Ethernet0&#x2F;0&#x2F;1]quit[LSW2]interface e0&#x2F;0&#x2F;2[LSW2-Ethernet0&#x2F;0&#x2F;2]port link-type trunk[LSW2-Ethernet0&#x2F;0&#x2F;2]port trunk allow-pass vlan 100[LSW2-Ethernet0&#x2F;0&#x2F;2]port trunk pvid vlan 100[LSW2-Ethernet0&#x2F;0&#x2F;2]quit[LSW2]interface e0&#x2F;0&#x2F;3[LSW2-Ethernet0&#x2F;0&#x2F;3]port link-type trunk[LSW2-Ethernet0&#x2F;0&#x2F;3]port trunk allow-pass vlan 100[LSW2-Ethernet0&#x2F;0&#x2F;3]quit【思考1】：为什么LSW2只创建VLAN100，不用创建VLAN101？解析：因为我们用的是隧道转发，数据到达AC1后，才会打上101标记然后发给LSW1【思考2】：为什么连接AP的接口要打port trunk pvid vlan 100?解析：交换机收到AP的数据帧打上100的tag发送把带上100tag的数据帧去掉然后发给APLSW1的配置system-view[Huawei]undo info-center enable[Huawei]sysname LSW1[LSW1]vlan batch 100 101[LSW1]interface g0&#x2F;0&#x2F;1[LSW1-GigabitEthernet0&#x2F;0&#x2F;1]port link-type trunk[LSW1-GigabitEthernet0&#x2F;0&#x2F;1]port trunk allow-pass vlan 100[LSW1-GigabitEthernet0&#x2F;0&#x2F;1]quit[LSW1]interface g0&#x2F;0&#x2F;3[LSW1-GigabitEthernet0&#x2F;0&#x2F;3]port link-type trunk[LSW1-GigabitEthernet0&#x2F;0&#x2F;3]port trunk allow-pass vlan 100 101[LSW1-GigabitEthernet0&#x2F;0&#x2F;3]quit[LSW1]interface g0&#x2F;0&#x2F;2[LSW1-GigabitEthernet0&#x2F;0&#x2F;2]port link-type access[LSW1-GigabitEthernet0&#x2F;0&#x2F;2]port default vlan 101[LSW1-GigabitEthernet0&#x2F;0&#x2F;2]quit[LSW1]interface Vlanif 101[LSW1-Vlanif101]ip address 192.168.101.1 24[LSW1-Vlanif101]undo shutdown[LSW1-Vlanif101]quitAC1的配置system-view[AC6005]undo info-center enable[AC6005]sysname AC1[AC1]vlan batch 100 101[AC1]interface g0&#x2F;0&#x2F;1[AC1-GigabitEthernet0&#x2F;0&#x2F;1]port link-type trunk[AC1-GigabitEthernet0&#x2F;0&#x2F;1]port trunk allow-pass vlan 100 101[AC1-GigabitEthernet0&#x2F;0&#x2F;1]quit[AC1]interface Vlanif 100[AC1-Vlanif100]ip address 192.168.100.1 24[AC1-Vlanif100]undo shutdown[AC1-Vlanif100]quitR1的配置system-view[Huawei]undo info-center enable[Huawei]sysname R1[R1]interface g0&#x2F;0&#x2F;0[R1-GigabitEthernet0&#x2F;0&#x2F;0]ip address 192.168.101.2 24[R1-GigabitEthernet0&#x2F;0&#x2F;0]undo shutdown[R1-GigabitEthernet0&#x2F;0&#x2F;0]quit 步骤2：设置DHCP创建VLAN设置TRUNK业务DHCP-让STA获得IP地址[LSW1]dhcp enable[LSW1]interface Vlanif 101[LSW1-Vlanif101]dhcp select interface[LSW1-Vlanif101]quit管理DHCP-让AP获得IP地址system-view[AC1]dhcp enable[AC1]interface Vlanif 100[AC1-Vlanif100]dhcp select interface[AC1-Vlanif100]quit 步骤3：AC的配置 AP上线第一步：创建AP组system-view[AC1]wlan[AC1-wlan-view]ap-group name x &#x2F;&#x2F;创建AP组名字叫x[AC1-wlan-ap-group-x]quit第二步：创建域管理模板并关联到AP组[AC1]wlan[AC1-wlan-view]regulatory-domain-profile name x1 &#x2F;&#x2F;创建域管理模板，名字叫x1[AC1-wlan-regulate-domain-x1]country-code cn &#x2F;&#x2F;国家代码选择中国[AC1-wlan-regulate-domain-x1]quit[AC1-wlan-view]ap-group name x[AC1-wlan-ap-group-x]regulatory-domain-profile x1 &#x2F;&#x2F;AP组的域管理模板是x1Warning: Modifying the country code will clear channel, power and antenna gain configurations of the radio and reset the AP. Continue?[Y&#x2F;N]:y[AC1-wlan-ap-group-x]quit第三步：配置AC的接口源地址[AC1]capwap source interface Vlanif 100 &#x2F;&#x2F;AC的接口源地址为VLAN100第四步：离线导入AP[AC1]wlan[AC1-wlan-view]ap auth-mode mac-auth &#x2F;&#x2F;AP的认证模式为MAC认证[AC1-wlan-view]ap-id 1 ap-mac 00e0-fcd5-1c70 &#x2F;&#x2F;AP的编号和MAC地址[AC1-wlan-ap-1]ap-name ds &#x2F;&#x2F;AP的名字为ds[AC1-wlan-ap-1]ap-group x &#x2F;&#x2F;AP属于AP组x[AC1-wlan-view]ap-id 2 ap-mac 00e0-fc1e-3670 &#x2F;&#x2F;AP的编号和MAC地址[AC1-wlan-ap-2]ap-name xs &#x2F;&#x2F;Ap的名字[AC1-wlan-ap-2]ap-group x &#x2F;&#x2F;AP属于AP组xWarning: This operation may cause AP reset. If the country code changes, it willclear channel, power and antenna gain configurations of the radio, Whether to continue? [Y&#x2F;N]:y思考：AP的MAC地址是怎么知道的？读者可以通过在ap上使用命令“display interface Vlanif 1”查看当前ap的mac地址，然后再将mac地址进行绑定。查看命令：[AC1]display ap allInfo: This operation may take a few seconds. Please wait for a moment.done.Total AP information:nor : normal [2]-—————————————————————————————–ID MAC Name Group IP Type State STA Uptime-—————————————————————————————–1 00e0-fcd5-1c70 ds x 192.168.100.137 AP2050DN nor 0 11M:2S2 00e0-fc1e-3670 xs x 192.168.100.42 AP2050DN nor 0 54S-—————————————————————————————–可以看到两个AP都获取了IP地址，思考：以上过程一共几包？AP获取IP地址4个包：discovery、offer、request、ackCAPWAP的建立2个包：discovery request(udp 目的端口5246广播找AC) discovery response(单播回应AP)AP接入控制2个包：join request(udp 5246端口 单播) join response隧道维持2个包：数据隧道：keepalive(udp 5247) 控制隧道：echo(udp 5246) 配置VLAN业务参数第一步：创建安全模板[AC1]wlan[AC1-wlan-view]security-profile name y1 &#x2F;&#x2F;安全模板的名字叫y1[AC1-wlan-sec-prof-y1]security wpa-wpa2 psk pass-phrase huawei@123 aes &#x2F;&#x2F;密码是huawei@123，用AES加密。[AC1-wlan-sec-prof-y1]quit第二步：创建SSID模板[AC1]wlan[AC1-wlan-view]ssid-profile name y2 &#x2F;&#x2F;ssid的模板名字叫y2[AC1-wlan-ssid-prof-y2]ssid hcia &#x2F;&#x2F;ssid的名称叫hcia[AC1-wlan-ssid-prof-y2]quit[AC1-wlan-view]quit第三步：创建VAP模板[AC1]wlan[AC1-wlan-view]vap-profile name y &#x2F;&#x2F;vap模板的名字叫y[AC1-wlan-vap-prof-y]forward-mode tunnel &#x2F;&#x2F;转发模式为隧道[AC1-wlan-vap-prof-y]service-vlan vlan-id 101 &#x2F;&#x2F;服务的VLAN为101[AC1-wlan-vap-prof-y]security-profile y1 &#x2F;&#x2F;调用安全模板y1[AC1-wlan-vap-prof-y]ssid-profile y2 &#x2F;&#x2F;调用SSID模板y2[AC1-wlan-vap-prof-y]quit第四步：在AP组里面调用VAP模板[AC1-wlan-view]ap-group name x[AC1-wlan-ap-group-x]vap-profile y wlan 1 radio 0 &#x2F;&#x2F;调用VAP模板y[AC1-wlan-ap-group-x]vap-profile y wlan 1 radio 1 &#x2F;&#x2F;思考：radio0 1 2 是什么意思？思考：这相过程要几个包？WLAN业务配置下发2个包：Configuration Update Request Configuration Update Response STA接入，可以看到有两个ssid为hcia的无线网络，在之前的配置中配置了radio 0 、1就是为了释放两个不同的射频信号，选择其中一个，输入之前创建的密码huawei@123","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"ap上线","slug":"ap上线","permalink":"http://example.com/tags/ap%E4%B8%8A%E7%BA%BF/"},{"name":"wlan","slug":"wlan","permalink":"http://example.com/tags/wlan/"}]},{"title":"USG5500防火墙基础实验","slug":"USG5500防火墙基础实验","date":"2023-12-08T09:52:30.000Z","updated":"2023-12-08T10:57:14.753Z","comments":true,"path":"2023/12/08/USG5500防火墙基础实验/","permalink":"http://example.com/2023/12/08/USG5500%E9%98%B2%E7%81%AB%E5%A2%99%E5%9F%BA%E7%A1%80%E5%AE%9E%E9%AA%8C/","excerpt":"","text":"基础配置 1、本实验中的防火墙为USG5500系列防火墙； 2、 防火墙三个接口的IP地址按照上图所示进行配置；将这三个接口划入相应的安全域； 3、配置防火墙的域间包过滤策略，使得PC1能够主动访问PC2，但是PC2无法主动访问PC1；PC2能够主动访问WebServer的WEB服务。 防火墙配置： [FW] interface GigabitEthernet0&#x2F;0&#x2F;1 [FW-GigabitEthernet0&#x2F;0&#x2F;1] ip address 192.168.1.254 24 [FW] interface GigabitEthernet0&#x2F;0&#x2F;2 [FW-GigabitEthernet0&#x2F;0&#x2F;2] ip address 172.16.1.254 24 [FW] interface GigabitEthernet0&#x2F;0&#x2F;3 [FW-GigabitEthernet0&#x2F;0&#x2F;3] ip address 10.1.1.254 24 将接口添加到相应的安全区域： [FW] firewall zone trust [FW-zone-trust] add interface GigabitEthernet0&#x2F;0&#x2F;1 [FW] firewall zone dmz [FW-zone-dmz] add interface GigabitEthernet0&#x2F;0&#x2F;2 [FW] firewall zone untrust [FW-zone-untrust] add interface GigabitEthernet0&#x2F;0&#x2F;3 配置域间策略，使得trust域的192.168.1.0&#x2F;24网段用户能够访问untrust区域的10.1.1.0&#x2F;24网段 [FW] policy interzone trust untrust outbound [FW-policy-interzone-trust-untrust-outbound] policy 10 [FW-policy-interzone-trust-untrust-outbound-10] policy destination 10.1.1.0 0.0.0.255 [FW-policy-interzone-trust-untrust-outbound-10] policy source 192.168.1.0 0.0.0.255 [FW-policy-interzone-trust-untrust-outbound-10] action permit 配置域间策略，使得untrust可以访问server [FW] policy interzone dmz untrust inbound [FW-policy-interzone-dmz-untrust-inbound] policy 10 [FW-policy-interzone-dmz-untrust-inbound-10] policy source 10.1.1.0 0.0.0.255 [FW-policy-interzone-dmz-untrust-inbound-10] policy destination 172.16.1.1 0 [FW-policy-interzone-dmz-untrust-inbound-10] policy service service-set http [FW-policy-interzone-dmz-untrust-inbound-10] action permit 完成上述配置后，PC1即可主动发起访问PC2，而PC2无法主动访问PC1；另外，PC2能够访问WebServer的HTTP服务 （ping不同，需要再配置一条允许icmp协议通过） 通过命令display zone，可以查看防火墙的安全区域、安全等级，以及每个安全区域下的接口. 使用display firewall packet-filter default 命令，能查看防火墙的缺省安全策略。当数据包经过防火墙且从一个安全域试图访问另一个安全域时，防火墙会根据数据包的流向首先检查用户定义的policy interzone，如果没有自定义的policy interone，则会看根据防火墙的缺省安全策略进行处理。例如从上面的显示中，我们可以看到local-trust的inbound及outbound都是permit，因此即使我们没有显式的配置local及trust安全区域的区域间策略，但是由于默认的策略就是放行，所以 trust区域的用户可以直接ping通防火墙的接口。 如果要让防火墙默认放行所有域间的流量，可以使用：firewall packet-filter default permit all命令，值得注意的是，在网络正式投入现网使用之前，此命令必须关闭（firewall packet-filter default deny all），针对需要放行的流量，需通过policy interzone的配置来放行，而不能鲁莽地将所有流量统统放行。 使用display policy命令，能查看我们定义的区域间安全策略，例如： [FW] display policy interzone trust untrust outbound USG5500 nat实验 防火墙FW的配置如下： [FW] interface GigabitEthernet0&#x2F;0&#x2F;1 [FW-GigabitEthernet0&#x2F;0&#x2F;1] ip address 192.168.1.254 24 [FW] interface GigabitEthernet0&#x2F;0&#x2F;2 [FW-GigabitEthernet0&#x2F;0&#x2F;2] ip address 172.16.1.254 24 [FW] interface GigabitEthernet0&#x2F;0&#x2F;3 [FW-GigabitEthernet0&#x2F;0&#x2F;3] ip address 200.1.1.1 24 向安全域中添加接口 [FW] firewall zone trust [FW-zone-trust] add interface GigabitEthernet0&#x2F;0&#x2F;1 [FW] firewall zone dmz [FW-zone-dmz] add interface GigabitEthernet0&#x2F;0&#x2F;2 [FW] firewall zone untrust [FW-zone-untrust] add interface GigabitEthernet0&#x2F;0&#x2F;3 配置域间包过滤策略，使得trust区域的192.168.1.0&#x2F;24网段用户能够访问Internet： [FW] policy interzone trust untrust outbound [FW-policy-interzone-trust-untrust-outbound] policy 10 [FW-policy-interzone-trust-untrust-outbound-10] policy source 192.168.1.0 0.0.0.255 [FW-policy-interzone-trust-untrust-outbound-10] action permit 上述配置虽然放通了192.168.1.0&#x2F;24访问Internet的流量，但是由于192.168.1.0&#x2F;24是私有IP地址，不能直接进入公网，因此为了让这部分用户能够访问公网，还必须部署NAT源地址转换 [FW] nat address-group 1 200.1.1.10 200.1.1.20 定义NAT地址池，该地址池使用的公网地址区间是200.1.1.10到200.1.1.20 [FW] nat-policy interzone trust untrust outbound 配置NAT策略 [FW-nat-policy-interzone-trust-untrust-outbound] policy 10 [FW-nat-policy-interzone-trust-untrust-outbound-10] policy source 192.168.1.0 0.0.0.255 [FW-nat-policy-interzone-trust-untrust-outbound-10] action source-nat &#x2F;&#x2F;对匹配的流量执行源地址转换 [FW-nat-policy-interzone-trust-untrust-outbound-10] address-group 1 &#x2F;&#x2F;关联nat地址池1 完成上述配置后，内网用户PC1即可访问公网用户PC2。接下来继续配置防火墙，使得公网用户PC2能够访问WebServer。 配置域间包过滤策略，使得untrust区域的Internet用户能够访问DMZ区域的web服务 [FW] policy interzone dmz untrust inbound [FW-policy-interzone-dmz-untrust-inbound] policy 10 [FW-policy-interzone-dmz-untrust-inbound-10] policy destination 172.16.1.1 0 [FW-policy-interzone-dmz-untrust-inbound-10] policy service service-set http [FW-policy-interzone-dmz-untrust-inbound-10] action permit [FW-policy-interzone-dmz-untrust-inbound-10] quit [FW-policy-interzone-dmz-untrust-inbound] quit 完成上述配置后，Internet用户是依然无法访问WebServer的，因为WebServer是私有IP地址，因此还需要配置NAT server，将DMZ域内的WebServer映射到公网。 下面的命令，将内部IP地址172.16.1.1的80端口映射到了公网地址200.1.1.21的80端口，这样一来，当公网用户访问200.1.1.21的80端口服务时，实际上访问的就是内部服务器172.16.1.1的80端口。 [FW] nat server zone untrust protocol tcp global 200.1.1.21 80 inside 172.16.1.1 80 完成上述配置后，PC2即可使用目的地址200.1.1.21来访问WebServer。 当PC1 ping PC2时，能够在FW上能看到如下会话： display firewall session table Current Total Sessions : 5 icmp VPN:public –&gt; public 192.168.1.1:40373[200.1.1.15:2048]–&gt;200.1.1.2:2048 icmp VPN:public –&gt; public 192.168.1.1:40885[200.1.1.15:2049]–&gt;200.1.1.2:2048 留意到中括号内的IP地址，便是被NAT转换后的IP地址。 当PC2访问Server的WEB服务时，在FW上能看到如下会话： [FW]display firewall session table Current Total Sessions : 1 http VPN:public –&gt; public 200.1.1.2:2055–&gt;200.1.1.21:80[172.16.1.1:80]","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"USG5500","slug":"USG5500","permalink":"http://example.com/tags/USG5500/"},{"name":"防火墙nat","slug":"防火墙nat","permalink":"http://example.com/tags/%E9%98%B2%E7%81%AB%E5%A2%99nat/"}]},{"title":"rstp和mstp","slug":"rstp和mstp","date":"2023-12-07T10:08:51.000Z","updated":"2023-12-07T10:53:06.725Z","comments":true,"path":"2023/12/07/rstp和mstp/","permalink":"http://example.com/2023/12/07/rstp%E5%92%8Cmstp/","excerpt":"","text":"概念STP三个版本：STP（802.1d）RSTP（802.1w）MSTP （802.1s）作用：打破二层环路，实现设备或者链路的冗余STP的计算过程①选举根桥BID&#x3D;优先级+MAC，优先级值越小越优，如果优先级相等，MAC小的成为根桥②选举根端口RPC（小的越优）+上行交换机的BID+上行交换机的PID（优先级和接口ID，越小越优）+本地的PID③选举指定接口RPC（小的越优）+本端的BID+本端的PID（小的越优）④非指定接口 端口优先级 端口ID（pid）&#x3D; 端口优先级（Port Priority）4 bit+ 端口编号12 bit 构成； 缺省情况下，端口优先级是128；端口优先级取值范围是0到240，取值必须为16的整数倍。 优先级 默认32768 越小越优 必须是4096倍数 0-65535 接口根路径开销： 1、dot1tG：20000E：200000 PRC&#x3D;根桥到非根桥经过所有的入方向接口的cost累加 STP的收敛时间： ①根桥故障50s②直连链路发生故障30s③非直连链路故障50s 转发延迟计时器：15sBPDU发送时间：2s老化时间：20s 端口状态：disable:未启用blocking：阻塞listening:侦听learning:学习forwarding：转发 RSTP:一、端口角色：根端口指定端口A:根端口的备份端口，提供了指定桥到达根的另一条路径Backup:作为指定接口的备份，提供了另一条从根桥到相应网段的备份链路 二、端口状态Discarding状态：不转发用户流量也不学习MAC地址；Learning状态：不转发用户流量但是学习MAC地址；Forwarding状：既转发用户流量又学习MAC地址三、配置BPDUBPDU类型和flag字段四、配置BPDU的处理拓扑稳定后，运行RSTP协议的非根桥设备会定期的发送配置BPDURSTP的任何端口角色都会处理次优BPDU，从而加快拓扑收敛五、P&#x2F;A作用：保证一个指定接口从discarding—&gt;forwarding触发：只有指定discarding状态下才可以触发P&#x2F;A机制，必须是根端口在forwarding状态下回复一个A&#x3D;1的一个BPDU ① 选举根桥、根接口、指定接口，然后根接口、指定接口处于discarding②根桥的指定接口处于discarsing，触发到P&#x2F;A，根桥会从指定接口发送P&#x3D;1BPDU；③非根桥的根接口收到P&#x3D;1的BPDU，会启动一个同步过程，将非边缘接口全部阻塞，同步完成之后，根接口切换到转发状态，并且从根接口发送A&#x3D;1 BPDU④根桥收到A&#x3D;1 BPDU，立即切换为转发状态，实现指定接口的快速收敛 保护功能：1、BPDU保护存在问题：边缘端口收到BPDU之后，接口会变成普通接口，那么会引起网络中生成树重新计算，对网络造成影响。解决：开启BPDU保护功能，只要边缘端口收到BPDU，交换机立即把接口置位Error-down，同时会产生告警。（接口恢复两种方式：手工恢复、自动恢复） 2、根保护 存在问题：加入在一个稳定的STP网络，此时根桥连接一台交换机，该交换机支持生成树，发送BPDU，STP网络重新计算；如果新加入的交换机比根桥优先级更优，会抢占根桥的位置，从而引起网络震荡解决：根桥的指定接口下激活跟保护功能，如何接口收到了更优的BPDU，会忽略并且切换到discarding。注意：跟保护只能在指定接口下激活。状态恢复：如果接口不再收到更优的BPDU，在一段时间后（2*转发延迟时间）自动恢复转发状态。 3、环路保护存在问题：AP单向故障：假如交换机之间通过光纤（一收一发），链路发生单向故障，AP接口老化时间后没有收到BPDU,接口会成为DP并切换到转发状态，并转发流量，环路产生RP单向故障：假如交换机之间通过光纤（一收一发），链路发生单向故障，导致DP到RP的单向故障，RP在一段时间没有收到BPDU，AP会切换到RP角色，RP切换到DP，收敛完成，DP开始转发业务流量，环路产生。解决：在AP接口下开启环路保护功能，如何接口长时间没有BPDU ,那么AP接口切换成DP，端口状态保持discarding状态，避免环路。 在RP接口下开启环路保护功能，如何接口长时间没有BPDU，那么会重新计算选举根端口，并将原端口调整为DP，接口状态保持discarding状态，避免环路。 4、拓扑变更保护（TC protection）存在问题：假如网络中存在攻击者，会仿冒TC置位为1的BPDU报文发送大量的TC BPDU，交换机收到BPDU之后，会删除mac地址表项，会消耗大量的设备资源。解决：默认情况交换机开启了拓扑变更保护，缺省2s只会处理异常TC BPDU，超出的部分等待一段时间处理 如何生成STP树？主要通过比较4个参数：根桥ID、根路径开销、网桥ID和端口ID，值越小，越优先。而这些参数，都是报文BPDU中的字段。根桥选举：比较根桥ID，最小胜出。根端口选举：依次比较RPC、对端BID、对端PID和本端PID，最小胜出。指定端口选举：依次比较RPC、本端BID和本端PID，最小胜出。 在确定了根端口和指定端口之后，交换机上所有剩余的非根端口和非指定端口被阻塞。 MSTP：一、概念MST Region：Multiple Spanning Tree Region，多生成树域），也可简称MST域MSTI（Multiple Spanning Tree Instance，多生成树实例）：MSTI使用Instance ID标识，为0~4094。Instance0是缺省存在的，而且缺省时，华为交换机上所有的VLAN都映射到了Instance0。通过设置VLAN映射表（即VLAN和MSTI的对应关系表），把VLAN和MSTI联系起来。每个VLAN只能对应一个MSTI，即同一VLAN的数据只能在一个MSTI中传输，而一个MSTI可能对应多个VLAN。CST公共生成树：是连接交换网络内所有MST域的一棵生成树IST（内部生成树）是各MST域内的一棵生成树。CIST（公共和内部生成树）通过生成树协议计算生成的，连接一个交换网络内所有交换设备的单生成树SST（Single Spanning Tree，单生成树）有两种情况：运行生成树协议的交换设备只能属于一个生成树。MST域中只有一个交换设备，这个交换设备构成单生成树。 总根（CIST Root）是CIST的根桥 域根（Regional Root）分为IST域根和MSTI域根。IST域根，在MST域中IST生成树中距离总根最近的交换设备是IST域根，MSTI域根是每个多生成树实例的树根 主桥（Master Bridge）是IST Master，它是域内距离总根最近的交换设备，如果总根在MST域中，则总根为该域的主桥 新增的端口角色：①Master端口 Master端口是MST域和总根相连的所有路径中最短路径上的端口，它是交换设备上连接MST域到总根的端口。Master端口是域中的报文去往总根的必经之路。Master端口是特殊域边缘端口，Master端口在CIST上的角色是Root Port，在其它各实例上的角色都是Master端口。 ②域边缘端口域边缘端口是指位于MST域的边缘并连接其它MST域或SST的端口 MSTP计算优先级向量说明：根交换设备ID：根交换设备ID用于选择CIST中的根交换设备。根交换设备ID &#x3D; Priority(16 bit) + MAC(48 bit)。其中Priority为MSTI0的优先级。外部路径开销（External Root Path Cost，ERPC）：从CIST的域根到达总根的路径开销。MST域内所有交换设备上保存的外部路径开销相同。若CIST根交换设备在域中，则域内所有交换设备上保存的外部路径开销为0。域根ID：域根ID用于选择MSTI中的域根。域根ID &#x3D; Priority(16 bit) + MAC(48 bit)。其中Priority为MSTI0的优先级。内部路径开销（Internal Root Path Cost，IRPC）：本桥到达域根的路径开销。域边缘端口保存的内部路径开销大于非域边缘端口保存的内部路径开销。指定交换设备ID：CIST或MSTI实例的指定交换设备是本桥通往域根的最邻近的上游桥。如果本桥就是总根或域根，则指定交换设备为自己。指定端口ID：指定交换设备上同本设备上根端口相连的端口。Port ID &#x3D; Priority(4 bit) + 端口号（12 bit）。端口优先级必须是16的整数倍。接收端口ID：接收到BPDU报文的端口。Port ID &#x3D; Priority(4 bit) + 端口号（12 bit）。 端口优先级必须是16的整数倍。 优先级向量比较原则：同一向量比较，值最小的向量具有最高优先级。优先级向量比较原则如下首先，比较根交换设备ID。如果根交换设备ID相同，再比较外部路径开销。如果外部路径开销相同，再比较域根ID。如果域根ID仍然相同，再比较内部路径开销。如果内部路径仍然相同，再比较指定交换设备ID。如果指定交换设备ID仍然相同，再比较指定端口ID。如果指定端口ID还相同，再比较接收端口ID。如果端口接收到的BPDU内包含的配置消息优于端口上保存的配置消息，则端口上原来保存的配置消息被新收到的配置消息替代。端口同时更新交换设备保存的全局配置消息。反之，新收到的BPDU被丢弃。 配置 开启STP，修改STP模式为RSTP。 手动指定S1为RSTP根桥、S2为RSTP备份根桥。 通过修改接口开销值，使得S4的GE0&#x2F;0&#x2F;1接口成为根端口。 通过修改S1的GE0&#x2F;0&#x2F;11接口优先级，使得S2的GE0&#x2F;0&#x2F;11接口成为根端口。 修改STP模式为MSTP，创建Instance1、2，指定SW1为MSTI1的根桥、MSTI2的备份根桥，指定SW2为MSTI2的根桥、MSTI1的备份根桥。 RSTP基础配置#S1-s4 上都配置 stp enable stp mode rstp #查看STP的状态和统计信息摘要 dis stp brief 接口都为指定端口的是根桥，本实验中s4是根桥 根桥选举控制 #手动调整STP优先级，指定S1为主根桥、S2为备份根桥 [S1]stp priority 4096 [S2]stp priority 8192 在另外两台交换机保持默认桥优先级（32768）的情况下，S1拥有最小的桥优先级，S2次之。 此时s1变为根桥，s2备份根桥 dis stp可以看到优先级已经改变 #取消S1、S2上手动调整桥优先级的配置，使用stp root命令指定根桥、备份根桥 [S1]undo stp priority [S1]stp root primary [S2]undo stp priority [S2]stp root secondary #S1、S2上查看STP的状态和统计信息，可以看到如下内容 s1： s2: S1的桥优先级为0，而S2的桥优先级为4096，此时S1为根桥，S2为备份根桥。 修改接口开销值控制根端口选举 #在S4上查看STP的状态和统计信息摘要 S4上GE0&#x2F;0&#x2F;2拥有更小的RPC（根路径开销），从而成为根端口。 #在S4上查看GE0&#x2F;0&#x2F;2接口的STP的状态和统计信息 此时路径开销计算方法为Dot1t，接口的STP cost值为20000。 #修改S4的GE0&#x2F;0&#x2F;2接口的STP cost值为40001 [S4]interface GigabitEthernet 0&#x2F;0&#x2F;2 [S4-GigabitEthernet0&#x2F;0&#x2F;2] stp cost 40001 #再次在S4上查看STP的状态和统计信息摘要 此时GE0&#x2F;0&#x2F;1接口的RPC为20000，小于GE0&#x2F;0&#x2F;2接口的RPC 40001，S4的GE0&#x2F;0&#x2F;1接口成为根端口。 修改接口优先级控制根端口选举 #在S2上查看STP的状态和统计信息摘要 S2上GE0&#x2F;0&#x2F;10、GE0&#x2F;0&#x2F;11接口收到的BPDU拥有相同的RPC、上行交换机BID，此时比较上行交换机PID（优先级+接口id），接口优先级一样，接口id小的优，所以g0&#x2F;0&#x2F;10小，所以是根端口 #在S1上修改GE0&#x2F;0&#x2F;11的STP接口优先级，使其发送的BPDU优于 GE0&#x2F;0&#x2F;10发送的BPDU （修改上行交换机的PID） [S1]interface GigabitEthernet 0&#x2F;0&#x2F;11 [S1-GigabitEthernet0&#x2F;0&#x2F;11] stp port priority 64 端口ID&#x3D; 端口优先级（Port Priority）4 bit+ 端口编号12 bit 构成； 缺省情况下，端口优先级是128；端口优先级取值范围是0到240，取值必须为16的整数倍。 #再次查看S2上的STP状态和统计信息摘要 此时S2的GE0&#x2F;0&#x2F;1接口成为根端口。 MSTP基础配置在所有交换机上创建VLAN10、20、30、40、50、60、70、80，配置MSTP域hcip，并创建两个新的实例：Instance 1、Instance 2，将VLAN10、30、50、70映射到Instance 1，将VLAN20、40、60、80映射到Instance 2，同时将SW1规划为MSTI1的主根桥、MSTI2的备份根桥，将SW2规划为MSTI2的主根桥、MSTI1的备份根桥。 #创建VLAN [S1]vlan batch 10 20 30 40 50 60 70 80 [S2]vlan batch 10 20 30 40 50 60 70 80 [S3]vlan batch 10 20 30 40 50 60 70 80 [S4]vlan batch 10 20 30 40 50 60 70 80 #将所有互联接口配置为Trunk接口，放通所有VLAN 略 #修改STP模式为MSTP [S1]stp mode mstp [S2]stp mode mstp [S3]stp mode mstp [S4]stp mode mstp #配置MSTP [S1]stp region-configuration [S1-mst-region] region-name hcip &#x2F;&#x2F;域名为hcip [S1-mst-region] revision-level 1 &#x2F;&#x2F;版本1 [S1-mst-region] instance 1 vlan 10 30 50 70 实例1映射vlan 10 30 50 70 [S1-mst-region] instance 2 vlan 20 40 60 80 [S1-mst-region] active region-configuration &#x2F;&#x2F;生效 Info: This operation may take a few seconds. Please wait for a moment…done. [S1-mst-region] quit （s2，s3，s4同理配置） #在S1检查MSTP实例和VLAN的映射关系 [S1]display stp region-configuration #配置SW1为MSTI1的根桥、MSTI2的备份根桥 [S1]stp instance 1 root primary [S1]stp instance 2 root secondary #配置SW2为MSTI2的根桥、MSTI1的备份根桥 [S2]stp instance 1 root secondary [S2]stp instance 2 root primary #在S1上查看MSTI1的状态和统计信息摘要 [S1]display stp instance 1 brief MSTID Port Role STP State Protection 1 GigabitEthernet0&#x2F;0&#x2F;10 DESI FORWARDING NONE 1 GigabitEthernet0&#x2F;0&#x2F;11 DESI FORWARDING NONE 1 GigabitEthernet0&#x2F;0&#x2F;12 DESI FORWARDING NONE 1 GigabitEthernet0&#x2F;0&#x2F;13 DESI FORWARDING NONE S1上所有接口都是指定接口，S1为MSTI1的根桥。 #在S2上查看MSTI2的状态和统计信息摘要 [S2]display stp instance 2 brief MSTID Port Role STP State Protection 2 GigabitEthernet0&#x2F;0&#x2F;10 DESI FORWARDING NONE 2 GigabitEthernet0&#x2F;0&#x2F;11 DESI FORWARDING NONE 2 GigabitEthernet0&#x2F;0&#x2F;12 DESI FORWARDING NONE 2 GigabitEthernet0&#x2F;0&#x2F;13 DESI FORWARDING NONE S2上所有接口都是指定接口，S2为MSTI2的根桥。","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"rstp","slug":"rstp","permalink":"http://example.com/tags/rstp/"},{"name":"mstp","slug":"mstp","permalink":"http://example.com/tags/mstp/"}]},{"title":"链路聚合","slug":"链路聚合","date":"2023-12-07T07:56:27.000Z","updated":"2024-07-12T02:06:01.313Z","comments":true,"path":"2023/12/07/链路聚合/","permalink":"http://example.com/2023/12/07/%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/","excerpt":"","text":"概念什么是链路聚合在现网中，设备间如果通过一条链路连接，如果这条链路故障了，那么设备两端的终端就不能够通信了。有什么办法可以解决该问题呢？答案是——链路聚合。 从端口的角度定义： 链路聚合（Link Aggregation）是指将多个物理端口汇聚在一起，形成一个逻辑端口，以实现出&#x2F;入流量吞吐量在各成员端口的负荷分担，交换机根据用户配置的端口负载分担方式决定数据包从哪个成员端口发送到对端的交换机。 从链路的角度定义： 链路聚合（Link Aggregation）是把两台设备之间的多条物理链路聚合在一起，当做一条逻辑链路来使用。这两台设备可以是一对路由器，一对交换机，或者是一台路由器和一台交换机。一条聚合链路可以包含多条成员链路，默认最多为8条。 链路聚合的作用 链路聚合能够提高链路带宽。理论上，通过聚合几条链路，一个聚合口的带宽可以扩展为所有成员口带宽的总和，这样就有效地增加了逻辑链路的带宽。 链路聚合为网络提供了高可靠性。配置了链路聚合之后，如果一个成员接口发生故障，该成员口的物理链路会把流量切换到另一条成员链路上。 链路聚合在一个聚合口上实现负载均衡。一个聚合口可以把流量分散到多个不同的成员口上，通过成员链路把流量发送到同一个目的地，将网络产生拥塞的可能性降到最低。 三. 链路聚合的工作原理：应用场景： 链路聚合一般部署在核心结点，以便提升整个网络的数据吞吐量。 链路聚合能够提高链路带宽，增强网络可靠、可用性，支持负载分担。 链路聚合模式: 链路聚合包含两种模式：手动负载均衡模式和静态LACP（Link Aggregation Control Protocol）模式。 手工负载分担模式： 手工负载分担模式下，Eth-Trunk的建立、成员接口的加入由手工配置，没有链路聚合控制协议的参与。 该模式下所有活动链路都参与数据的转发，平均分担流量，因此称为负载分担模式。如果某条活动链路故障，链路聚合组自动在剩余的活动链路中平均分担流量。 使用场景： 当需要在两个直连设备间提供一个较大的链路带宽而设备又不支持LACP协议时，可以使用手工负载分担模式。 2. 静态LACP模式： 在静态LACP模式中，链路两端的设备相互发送LACP报文，协商聚合参数。协商完成后，两台设备确定活动接口和非活动接口。 在静态LACP模式中，需要手动创建一个Eth-Trunk口，并添加成员口。 静态LACP模式也叫M:N模式。M代表活动成员链路，用于在负载均衡模式中转发数据。N代表非活动链路，用于冗余备份。 如果一条活动链路发生故障，该链路传输的数据被切换到一条优先级最高的备份链路上，这条备份链路转变为活动状态。 两种链路聚合模式的主要区别： 在静态LACP模式中，一些链路充当备份链路。 在手动负载均衡模式中，所有的成员口都处于转发状态。 维度 手工模式 LACP模式 Eth-Trunk的建立方式 Eth-Trunk接口的创建、成员接口的加入由手工配置，没有链路聚合控制协议的参与。 Eth-Trunk接口的创建、成员接口的加入由手工配置，LACP协议参与链路动态调整，负责链路状态维护。在聚合条件发生变化时，自动调整或解散链路聚合。 设备是否需要支持LACP协议 不需要 需要 数据转发 正常情况下，所有链路都是活动链路。所有活动链路均参与数据转发。如果某条活动链路故障，链路聚合组自动在剩余的活动链路中分担流量。 正常情况下，部分链路是活动链路。所有活动链路均参与数据转发。如果某条活动链路故障，链路聚合组自动在非活动链路中选择一条链路作为活动链路，参与数据转发的链路数目不变。 检测故障 只能检测到同一聚合组内的成员链路有断路等故障，无法检测到链路断连、错连等故障。 不仅能够检测到同一聚合组内的成员链路有断路等故障，还可以检测到链路故障、链路错连等故障。 数据流控制: Eth-trunk链路两端相连的物理接口的数量、速率、双工方式、流控方式必须一致。 优先级系统优先级： 0-65535 默认32768 小的优先 优先级一样，看mac，mac小的优先 接口优先级： 也是0-65535 小的优 默认32768 LACPDU报文基于IEEE802.3ad标准的LACP是一种实现链路动态聚合与解聚合的协议。LACP通过链路聚合控制协议数据单元LACPDU（Link Aggregation Control Protocol Data Unit）与对端交互信息。 在LACP模式的Eth-Trunk中加入成员接口后，这些接口将通过发送LACPDU向对端通告自己的系统优先级、MAC地址、接口优先级、接口号和操作Key等信息。对端接收到这些信息后，将这些信息与自身接口所保存的信息比较，用以选择能够聚合的接口，双方对哪些接口能够成为活动接口达成一致，确定活动链路。 LACPDU 帧基于 IEEE 802.3ad 标准，是一种慢协议（平均每秒发送的协议报文不超过 5 个），其目的 MAC 地址是一个特殊的组播地址 0x01-80-c2-00-00-02。 如果接口板收到报文的目的 MAC 是该组播地址，且二层协议类型字段为 0x8809、协议子类型为 0x01，则说明此数据报文为 LACPDU 帧。 报文格式： LACPDU（Link Aggregation Control Protocol Data Unit，链路聚合控制协议数据单元）的报文格式如下： 字段 长度（字节） 说明 Destination Address（目的MAC地址） 6 是一个组播地址，固定为01-80-c2-00-00-02 Source Address（源MAC地址） 6 发送端口的MAC地址 Length&#x2F;Type（长度&#x2F;类型） 2 协议类型：0x8809 Subtype（报文子类型） 1 取值为0x01，代表是LACP报文 Version Number（协议版本号） 1 固定为0x01 TLV_Type&#x3D;Actor Information（TLV类型&#x3D;Actor信息） 1 标识TLV的类型，值为0x01代表Actor字段 Actor_Information_Length（Actor信息字段长度） 1 取值为20（即0x14），以字节为单位 Actor_System_Priority（本端系统优先级） 2 可以设置，默认情况下为32768（即0x8000） Actor_System（本端系统ID） 6 本端系统的MAC地址 Actor_Key（端口Key值） 2 系统根据端口的配置生成，是端口能否成为聚合组成员的关键因素，影响Key值的因素有Trunk ID、接口的速率和双工模式 Actor_Port_Priority（本端接口优先级） 2 可以配置，默认为0x8000 Actor_Port（本端端口号） 2 由接口所在的槽位号、子卡号和端口号决定 Actor_State（本端状态信息） 1 8位比特的含义分别为： Bit0：lacp_activity，代表链路所在的聚合组参与LACP协商的方式。主动的LACP被编码为1，即主动方式下会主动发送LACPDU报文给对方，被动方式不会主动发送协商报文，除非收到协商报文才会参与； Bit1：lacp_timeout，代表链路接收LACPDU报文的周期，有两种，快周期1秒和慢周期30秒，超时时间为周期的3倍。短超时被编码为1，长超时被编码为0； Bit2：aggregation，标识该链路能否被聚合组聚合。如果编码为0，该链路被认为是独立的，不能被聚合，即这个链路只能作为一个个体链路运行； Bit3：synchronization，代表该链路是否已被分配到一个正确的链路聚合组，如果该链路已经关联了一个兼容的聚合器，那么该链路聚合组的识别与系统ID和被发送的运行Key信息是一致的。编码为0，代表链路当前不在正确的聚合里； Bit4：collecting，帧的收集使能位，假如编码为1，表示在这个链路上进来的帧的收集是明确使能的，即收集当前被使能，并且不期望在没有管理变化或接收协议信息变化的情况下被禁止。其它情况下这个值编码为0； Bit5：distributing，帧的分配使能位，假如编码为0，意味着在这个链路上的外出帧的分配被明确禁止，并且不期望在没有管理变化或接收协议信息变化的情况下被使能。其它情况下这个值编码为1； Bit6-7：default和expired，用于诊断调试，default编码为1代表接收到的对端的信息是管理配置的。假如编码为0，正在使用的运行伙伴信息在接收到的LACPDU里。expired编码为1代表本端的接收机是处于expired超时状态；假如编码为0，本端接收状态机处于正常状态。这两值不被正常LACP协议使用，仅用于诊断协议问题 Reserved（保留字段） 3 可用于功能调试以及扩展 TLV_Type&#x3D;Partner Information（TLV类型&#x3D;Partner信息） 1 标识TLV的类型，值为0x02代表Partner字段 Partner_Information_Length（Partner信息字段长度） 1 取值为20（即0x14），以字节为单位 Partner_System_Priority（对端系统优先级） 2 对端系统优先级 Partner_System（对端系统ID） 6 对端系统的MAC地址 Partner_Key（对端端口Key值） 2 对端端口Key值 Partner_Port_Priority（对端接口优先级） 2 对端接口优先级 Partner_Port（对端端口号） 2 对端端口号 Partner_State（对端状态信息） 2 对端状态信息，与Actor_State字段含义一致 Reserved（保留字段） 3 可用于功能调试以及扩展 TLV_Type&#x3D;Collector Information（TLV类型&#x3D;Collector信息） 1 标识TLV的类型，值为0x03代表Collector字段 Collector_Information_Length（Collector信息字段长度） 1 取值为16（即0x10），以字节为单位 CollectorMaxDelay（最大延时） 2 以10微秒为单位 Reserved（保留字段） 12 可用于功能调试以及扩展 TLV_Type&#x3D;Terminator Information（TLV类型&#x3D;Terminator信息） 1 标识TLV的类型，值为0x00代表Terminator字段 Terminator_Length（Terminator信息字段长度） 1 取值为0（即0x00） Reserved（保留字段） 50 全置0，接收端忽略此字段 FCS（帧校验序列） 4 用于帧内后续字节差错的循环 1.两端互相发送LACPDU报文 在DeviceA和DeviceB上创建Eth-Trunk并配置为LACP模式，然后向Eth-Trunk中手工加入成员接口。此时成员接口上便启用了LACP协议，两端互发LACPDU报文。 以DeviceB为例，当DeviceB收到DeviceA发送的报文时，DeviceB会查看并记录对端信息，然后比较系统优先级字段，如果DeviceA的系统优先级高于本端的系统优先级，则确定DeviceA为LACP主动端。如果DeviceA和DeviceB的系统优先级相同，比较两端设备的MAC地址，确定MAC地址小的一端为LACP主动端。 选出主动端后，两端都会以主动端的接口优先级来选择活动接口，两端设备选择了一致的活动接口，活动链路组便可以建立起来，从这些活动链路中以负载分担的方式转发数据。 2.确定主动端(基于系统优先级和MAC)和活动链路（基于接口优先级） 两端设备均会收到对端发来的LACPDU报文。以DeviceB为例，当DeviceB收到DeviceA发送的报文时，DeviceB会查看并记录对端信息，然后比较系统优先级字段，如果DeviceA的系统优先级高于本端的系统优先级，则确定DeviceA为LACP主动端。如果DeviceA和DeviceB的系统优先级相同，比较两端设备的MAC地址，确定MAC地址小的一端为LACP主动端。 选出主动端后，两端都会以主动端的接口优先级来选择活动接口，两端设备选择了一致的活动接口，活动链路组便可以建立起来，从这些活动链路中以负载分担的方式转发数据。 3.LACP抢占（缺省不抢占） 使能LACP抢占功能后，聚合组会始终保持高优先级的接口作为活动接口的状态。 接口Port1、Port2和Port3为Eth-Trunk的成员接口，DeviceA为主动端，活动接口数上限阈值为2，三个接口的LACP优先级分别为10、20、30。当通过LACP协议协商完毕后，接口Port1和Port2因为优先级较高被选作活动接口，Port3成为备份接口。 以下两种情况需要使能LACP的抢占功能。 Port1接口出现故障而后又恢复了正常。当接口Port1出现故障时被Port3所取代，如果在Eth-Trunk接口下未使能LACP抢占功能，则故障恢复时Port1将处于备份状态；如果使能了LACP抢占功能，当Port1故障恢复时，由于接口优先级比Port3高，将重新成为活动接口，Port3再次成为备份接口。 如果希望Port3接口替换Port1、Port2中的一个接口成为活动接口，可以使能了LACP抢占功能，并配置Port3的接口LACP优先级较高。如果没有使能LACP抢占功能，即使将备份接口的优先级调整为高于当前活动接口的优先级，系统也不会进行重新选择活动接口的过程，不切换活动接口。 LACP抢占延时（默认30s，10-180） 抢占延时是LACP抢占发生时，处于备用状态的链路将会等待一段时间后再切换到转发状态。配置抢占延时是为了避免由于某些链路状态频繁变化而导致Eth-Trunk数据传输不稳定的情况。 Port1由于链路故障切换为非活动接口，此后该链路又恢复了正常。若系统使能了LACP抢占功能并配置了抢占延时，Port1重新切换回活动状态就需要经过抢占延时的时间。 LACP 抢占延时的取值范围通常是10～180秒。 LACP 抢占延时是指在启用 LACP 抢占功能后，当高优先级的链路恢复正常，且当前活动链路数已达到上限阈值时，等待多久后高优先级链路才会取代低优先级链路成为活动链路。 默认情况下，LACP 抢占等待时间通常为30秒。但这个时间可以根据具体需求进行配置，通过在Eth-Trunk接口视图下使用“lacp preempt delay delay-time”命令来设置，其中“delay-time”为具体的时间值，单位是秒。 配置抢占延时功能可以避免由于链路状态频繁变化而导致的数据传输不稳定。但需注意，配置抢占延时需要确保当前的Eth-Trunk工作模式为LACP模式，并且已经使能了优先级抢占，否则配置不生效。要使能优先级抢占，可在Eth-Trunk接口视图下执行“lacp preempt enable”命令。 活动链路与非活动链路切换 LACP模式链路聚合组两端设备中任何一端检测到以下事件，都会触发聚合组的链路切换： 链路Down事件。 以太网OAM检测到链路失效。 LACP协议发现链路故障。 接口不可用。 在使能了LACP抢占功能的前提下，更改备份接口的优先级高于当前活动接口的优先级。 当满足上述切换条件其中之一时，按照如下步骤进行切换： 关闭故障链路。 从N条备份链路中选择优先级最高的链路接替活动链路中的故障链路。 优先级最高的备份链路转为活动状态并转发数据，完成切换。 配置 配置手工链路聚合# 创建Eth-Trunk接口 [S1]interface Eth-Trunk 1 interface eth-trunk命令用来进入已经存在的Eth-Trunk接口，或创建并进入Eth-Trunk接口。数字“1”代表接口编号，编号范围根据设备情况有所不同。 [S2]interface Eth-Trunk 1 # 设置Eth-Trunk接口的聚合模式 [S1-Eth-Trunk1]mode manual load-balance mode命令用来配置Eth-Trunk的工作模式，有LACP模式和手工负载分担模式（手工模式）两种，缺省情况下，Eth-Trunk的工作模式为手工负载分担模式。此处S1上的模式配置仅为示范目的，实际操作时不需要。 # 将成员接口加入聚合组 [S1]interface GigabitEthernet 0&#x2F;0&#x2F;10 [S1-GigabitEthernet0&#x2F;0&#x2F;10]eth-trunk 1 Info: This operation may take a few seconds. Please wait for a moment…done. [S1-GigabitEthernet0&#x2F;0&#x2F;10]quit [S1]interface GigabitEthernet 0&#x2F;0&#x2F;11 [S1-GigabitEthernet0&#x2F;0&#x2F;11]eth-trunk 1 Info: This operation may take a few seconds. Please wait for a moment…done. [S1-GigabitEthernet0&#x2F;0&#x2F;11]quit [S1]interface GigabitEthernet 0&#x2F;0&#x2F;12 [S1-GigabitEthernet0&#x2F;0&#x2F;12]eth-trunk 1 Info: This operation may take a few seconds. Please wait for a moment…done. [S1-GigabitEthernet0&#x2F;0&#x2F;12]quit 可进入到成员接口的接口视图下，逐一添加到Eth-Trunk接口。也可以在Eth-Trunk接口视图下通过trunkport命令批量添加接口。 [S2]interface Eth-Trunk 1 [S2-Eth-Trunk1]trunkport GigabitEthernet 0&#x2F;0&#x2F;10 to 0&#x2F;0&#x2F;12 Info: This operation may take a few seconds. Please wait for a moment…done. 将成员接口加入Eth-Trunk时，需要注意以下问题： • 每个Eth-Trunk接口下最多可以包含8个成员接口。 • Eth-Trunk接口不能嵌套，即Eth-Trunk接口的成员接口不能是Eth-Trunk接口。 • 一个以太网接口只能加入到一个Eth-Trunk接口，如果需要加入其它Eth-Trunk接口，必须先退出原来的Eth-Trunk接口。 • 如果本地设备使用了Eth-Trunk，与成员接口直连的对端接口也必须捆绑为Eth-Trunk接口，两端才能正常通信。 Eth-Trunk链路两端相连的物理接口的数量、速率、双工方式等必须一致。 #查看Eth-Trunk接口状态 dis eth-trunk 1 配置LACP模式# 删除现有Eth-Trunk接口下的成员接口 [S1]interface Eth-Trunk 1 [S1-Eth-Trunk1]undo trunkport GigabitEthernet 0&#x2F;0&#x2F;10 to 0&#x2F;0&#x2F;12 [S2]interface Eth-Trunk 1 [S2-Eth-Trunk1]undo trunkport GigabitEthernet 0&#x2F;0&#x2F;10 to 0&#x2F;0&#x2F;12 在修改Eth-Trunk接口的聚合模式之前，需要确保Eth-Trunk中没有任何成员接口。 # 修改聚合模式 [S1]interface Eth-Trunk 1 [S1-Eth-Trunk1]mode lacp mode lacp 指定Eth-Trunk工作模式为LACP模式。 注：部分版本的设备命令为 mode lacp-static [S2]interface Eth-Trunk 1 [S2-Eth-Trunk1]mode lacp # 将成员接口加入聚合组 [S1]interface Eth-Trunk 1 [S1-Eth-Trunk1]trunkport GigabitEthernet 0&#x2F;0&#x2F;10 to 0&#x2F;0&#x2F;12 [S2]interface Eth-Trunk 1 [S2-Eth-Trunk1]trunkport GigabitEthernet 0&#x2F;0&#x2F;10 to 0&#x2F;0&#x2F;12 查看 注意此时三个接口都是Select的状态 选择接口​ 考虑到网络流量情况，当网络正常时，只需要GigabitEthernet0&#x2F;0&#x2F;11和GigabitEthernet0&#x2F;0&#x2F;12接口处于转发状态，GigabitEthernet0&#x2F;0&#x2F;10接口作为备份。但当活动接口数量少于2时，直接关闭整个Eth-Trunk接口。 全局配置优先级选举主动方，主动方设备的端口上配置接口优先级选举活动端口 # 配置设备S1的LACP优先级，使其成为主动端设备 [S1]lacp priority 100 # 配置接口优先级，优选GigabitEthernet0&#x2F;0&#x2F;11和GigabitEthernet0&#x2F;0&#x2F;12接口 [S1]interface GigabitEthernet 0&#x2F;0&#x2F;10 [S1-GigabitEthernet0&#x2F;0&#x2F;10]lacp priority 40000 # 配置接口优先级，优选GigabitEthernet0&#x2F;0&#x2F;11和GigabitEthernet0&#x2F;0&#x2F;12接口 [S1]interface GigabitEthernet 0&#x2F;0&#x2F;10 [S1-GigabitEthernet0&#x2F;0&#x2F;10]lacp priority 40000 g0&#x2F;0&#x2F;10配置了大于32768的优先级4000，所以变为备份端口 之后，g0&#x2F;0&#x2F;11和g0&#x2F;0&#x2F;12为活动端口 使能了LACP模式链路聚合的两端设备均会收发的LACPDU报文。 首先选举主动端设备： 比较系统优先级字段，如果对端的系统优先级高于本端的系统优先级（默认为32768，越小越优），则确定对端为LACP主动端。 如果系统优先级相同，比较两端设备的MAC地址，MAC地址小的一端为LACP主动端。 选出主动端后，两端都会以主动端的接口优先级来选择活动接口，接口优先级越小越优，默认为32768。 # 配置Eth-trunk活动接口数上限阈值和下限阈值 [S1]interface Eth-Trunk 1 [S1-Eth-Trunk1]max active-linknumber 2 [S1-Eth-Trunk1]least active-linknumber 2 在一个Eth-Trunk接口内，活动接口数可以影响到Eth-Trunk接口的状态和带宽。Eth-Trunk接口的带宽是所有处于Up状态的成员口带宽之和。为保证Eth-Trunk接口的状态和带宽，可以设置以下两个阈值，以减小成员链路状态的变化带来的影响。 • 活动接口数下限阈值：当活动接口数小于配置的下限阈值时，Eth-Trunk接口的状态转为Down。设置活动接口数下限阈值的目的是为了保证最小带宽。least active-linknumber命令用来配置链路聚合组活动接口数目的下限阈值。 • 活动接口数上限阈值：当活动接口数达到上限阈值后，之后再发生成员链路状态变为Up都不会使Eth-Trunk接口的带宽增加。设置活动接口数上限阈值的目的是在保证了带宽的情况下提高网络的可靠性。max active-linknumber命令用来配置链路聚合组活动接口数目的上限阈值。 # 开启抢占功能 [S1]interface Eth-Trunk 1 [S1-Eth-Trunk1]lacp preempt enable 在LACP模式下，当活动链路中出现故障链路时，系统会从备用链路中选择优先级最高的链路替代故障链路；如果被替代的故障链路恢复了正常，而且该链路的优先级又高于替代自己的链路。这种情况下，如果使能了LACP优先级抢占功能，高优先级链路会抢占低优先级链路，回切到活动状态。lacp preempt enable命令用来使能LACP模式下LACP优先级抢占的功能，缺省情况下，优先级抢占处于禁止状态。 # 查看当前 Eth-Trunk接口状态 shutdown接口g0&#x2F;0&#x2F;11和g0&#x2F;0&#x2F;12 查看状态，发现都变为unselect状态 由于设置了Eth-Trunk的活动链路下限阈值为2，所以聚合组中可用活动接口数量少于2时，整个聚合组对应的接口将会被关闭。尽管此时GigabitEthernet0&#x2F;0&#x2F;10处于UP状态，但是仍处于Unselect状态。 修改负载分担模式# 开启上一步中关闭的接口 [S1]inter GigabitEthernet 0&#x2F;0&#x2F;11 [S1-GigabitEthernet0&#x2F;0&#x2F;11]undo shutdown [S1-GigabitEthernet0&#x2F;0&#x2F;11]quit [S1]inter GigabitEthernet 0&#x2F;0&#x2F;12 [S1-GigabitEthernet0&#x2F;0&#x2F;12]undo shutdown # 大约30秒后，查看当前Eth-Trunk1的接口状态 由于使能了Eth-Trunk接口的抢占功能，所以当GigabitEthernet0&#x2F;0&#x2F;11和GigabitEthernet0&#x2F;0&#x2F;12接口进入UP状态之后，这两个接口的接口的优先级高于GigabitEthernet0&#x2F;0&#x2F;10，所以GigabitEthernet0&#x2F;0&#x2F;10会进入unselect状态。同时因为系统为了保证链路的稳定性，默认的抢占延时为30秒，所以要在30秒后才会发生抢占。 # 修改Eth-Trunk接口的负载分担模式为基于目的IP地址 [S1]interface Eth-Trunk 1 [S1-Eth-Trunk1]load-balance dst-ip 当需要将Eth-Trunk接口的流量分散到不同的链路上，最后能到达统一目的地时，使用load-balance命令配置Eth-Trunk接口负载分担模式，以确保出方向的流量在各物理链路间进行合理的负载分担，避免链路阻塞。由于负载分担只对出方向的流量有效，因此链路两端接口的负载分担模式可以不一致，两端互不影响","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"链路聚合","slug":"链路聚合","permalink":"http://example.com/tags/%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/"},{"name":"lacp","slug":"lacp","permalink":"http://example.com/tags/lacp/"},{"name":"eth-trunk","slug":"eth-trunk","permalink":"http://example.com/tags/eth-trunk/"}]},{"title":"MPLS","slug":"MPLS","date":"2023-12-05T09:53:41.000Z","updated":"2024-08-15T11:25:59.818Z","comments":true,"path":"2023/12/05/MPLS/","permalink":"http://example.com/2023/12/05/MPLS/","excerpt":"","text":"概念MPLS（Multiprotocol Label Switching）多协议标签转发复习总结首先我们要先知道MPLS是为何出现的？MPLS是基于传统IP网络（RIP，OSPF等）的缺陷由IETF确定的 顺便先复习一下路由器查路由表 转发的过程： 传统的IP转发中，物理层从交换机的一个端口收到一个报文，上送到数据链路层。数据链路层去掉链路层封装，根据报文的协议域上送给相应的网络层。网络层首先看报文是否是送给本机的，若是，去掉网络层封装，上送给它的上层协议。若不是，则根据报文的目的地址查找路由表，若找到路由，将报文送给相应端口的数据链路层，数据链路层封装后，发送报文。若找不到路由，将报文丢弃。传统的IP转发采用的是逐跳转发，数据报文经过每一台交换机，都要执行上述过程（如图中SWA收到目的地址为10.2.0.1的数据包，SWA会依次查找路由表，根据匹配的路由表项的进行转发，SWB、SWC、SWD都会进行类似的处理），所以速度缓慢。并且所有的交换机需要知道全网的路由或者默认路由。另外，由于传统IP转发是面向无连接的，所以无法提供好的Qos保证。 传统IP网络基于IGP Metric计算最优路径，这是远远不够的，往往在现实网络中还需考虑带宽、链路属性等其他因素；基于IP的流量工程是基于IGP面向目的地址的转发，是hop-by-hop（逐跳）的转发，无法实现根据来源来控制流量转发；另外基于IP的流量工程是面向无连接的，不能实现显式路径（Explicit Routing）。 MPLS的出现从A到走到B有三种方法：1.广播（如以太网）：直接把数据发给每一个地方2.逐跳寻径：走到一个地方，问一下路接下来该怎么走（也就是上面说的根据路由协议，查路由表）3.源路由：提前规划好路线，到哪里怎么走，不常用。 而MPLS是第四种走法：跟在“向导”后面走，向导在走过的路上做好标记，你只要沿着标记的指示走就可以了。这也就是“标签交换” MPLS结合了三层路由技术与二层交换技术，所以可以把它看成“2.5层”的其中的MP多协议指的是支持多种网络协议，如ipv4，ipv6，CLNP，IPX等 MPLS是一种标签转发技术，它采用无连接的控制平面和面向连接的数据平面（具体的MPLS架构下面还有介绍），无连接的控制平面实现路由信息的传递和标签的分发，面向连接的数据平面实现报文在建立的标签转发路径上传送。MPLS域内，交换机不需要查看每个报文的目的IP地址，只需要根据封装在IP头外面的标签进行转发即可，这样可以大大提高效率 MPLS转发与IP逐跳转发的关系MPLS是IP的承载层：MPLS转发与IP转发不冲突，它们的关系是如果能够使用MPLS转发，那么IP包会先封装成MPLS数据帧来转发。如果不能MPLS转发，就还是原来的ip逐跳转发。（也就是尽量优先MPLS，因为它会更快） 看上面的图，我们需要理解：整个MPLS域（可以进行MPLS转发的区域）是嵌在IP域上的，也就是MPLS域外部是IP域，它本身也运行IP域。 MPLS中一些基本概念，名词标签（Label）：是一个定长的，比较短的，只具有本地意义的标识。FEC（转发等价类）：一组或一类数据，这组数据分配的标签相同，这些数据流在转发过程中被网络节点以相同方式处理。在MPLS网络中，FEC可以通过多种方式划分，例如基于目的IP地址及网络掩码、DSCP等特征来划分。数据属于哪一个LSP，由数据进入MPLS域时的Ingress LSR决定。LSP（标签交换通道）：一个FEC的数据流，在不同的节点被赋予确定的标签,数据转发按照这些标签进行。数据流所走的路径就是LSP。LSP是一个从“起点”到“终点”的单向路径，若需要双向数据互通，则需要在双方之间建立双向的LSP。LSR（Label Switching Router）： LSR是MPLS的网络的核心交换机，它提供标签交换和标签分发功能。LER（Label Switching Edge Router）：在MPLS的网络边缘，进入到MPLS网络的流量由LER分为不同的FEC，并为这些FEC请求相应的标签。它提供流量分类和标签的映射、标签的移除功能。 从IP域进入MPLS域的时候，LER（标记边缘路由器）要做一个压入（push），出MPLS域的时候做一个弹出（pop），而LSR（标记交换路由器）负责转发。所以LER实际工作量比LSR大很多。LSP（标记交换路径）就是从进入到离开 走的路径。这条路径是在转发报文之前就已经通过各种协议确定并建立的，报文会在特定的LSP上传递。（也可以把LSP看成一个隧道） 标签报文格式 MPLS Header长度为32bits，包括长度为20bits的标签（Label），该标签用于报文转发；长度为3bits的EXP通常用来承载IP报文中的优先级；长度为1bit的栈底标志S用来表明是否是最后一个标签（MPLS标签可以多层嵌套）；长度为8bits的TTL，作用类似IP头部的TTL，用来防止报文环路等。 标签空间： MPLS转发过程依据三张表： Tunnel ID：为了给使用隧道的上层应用（如VPN、路由管理）提供统一的接口，系统自动为隧道分配了一个ID，也称为Tunnel ID。该Tunnel ID的长度为32比特，只是本地有效。在MPLS转发过程中，FIB、ILM和NHLFE表项是通过Tunnel ID关联的。 在Ingress LSR，通过查询FIB表（得到FTN信息）和NHLFE表指导报文的转发。 当IP报文进入MPLS域时，首先查看FIB表，检查目的IP地址对应的Tunnel ID值是否为0x0。如果Tunnel ID值为0x0，则进入正常的IP转发流程。如果Tunnel ID值不为0x0，则进入MPLS转发流程。 在Transit LSR，通过查询ILM表和NHLFE表指导MPLS报文的转发。 在Egress LSR，通过查询ILM表指导MPLS报文的转发。 例： 1.Push：首先从IP数据包从ip域进入MPLS域，入口LER做 push 操作，分析转发等价类，为数据包“打上标签”，绑定LSP通道；图中A的标签转发表内容大概如下： 2.Swap：B，C两个LSR根据标签转发表，用下一跳分配的标签，替换MPLS报文的标签并转发 3.Pop：转发到出口LER D时，进行pop弹出操作，去掉标签 MPLS转发的过程到这里结束。 PHP（倒数第二跳弹出。Penultimate Hop Popping ，和web开发的php可没关系）：上面的过程我们可以发现，C在发给D时，其实带标签的数据已经没有意义，因为下一跳就要弹出标签了，所以完全可以在C就把标签弹出，然后以ip报文形式转发给D。这样可以大大降低最后的出口LER的工作量，是现在MPLS普遍采用的方法。默认情况下，设备支持PHP特性，支持PHP的Egress节点即出口LER 分配给倒数第二跳节点的标签值为3。 MPLS标签转发表与LDP我们知道，交换机中的MAC地址表是通过逆向学习法产生的；路由器中的路由表是通过路由协议学习或自己配置静态路由产生的。那么MPLS中标签转发表是怎么产生的呢？ 答案是也会有一个类似的路由器学习的协议，这个协议叫做LDP（Label Distribution Protocol 标签分发协议），这个也是MPLS技术的核心协议之一。LDP来完成标签的分配控制和保持 从整个MPLS架构看这个协议的位置： MPLS包括两个平面：控制平面和数据平面。控制平面负责产生和维护路由信息以及标签信息。数据平面负责普通IP报文的转发以及带MPLS标签报文的转发。控制平面中路由协议模块（Routing Protocol）用来传递路由信息，生成路由信息表；标签分发协议模块（Label Distribution Protocol）用来完成标签信息的交换，建立标签转发路径。数据平面包括IP转发表和标签转发表，当收到普通IP报文时（Incoming IP Packets），如果是普通IP转发，则查找IP路由表转发，如果需要标签转发，则按照标签转发表转发；当收到带有标签的报文时（Incoming Labeled Packets）时，如果需要按照标签转发，根据标签转发表转发，如果需要转发到IP网络，则去掉标签后根据IP转发表转发。 LDP消息： LDP消息承载在UDP或TCP之上，端口号均为646 。其中发现消息基于UDP传递；会话消息、通告消息、通知消息都基于TCP传递。 标签分配：LSR从本地标签空间中取出一个标签与FEC绑定。标签分发：LSR将标签与FEC的绑定关系通知给上游LSR。 Liberal方式的最大优点在于路由发生变化时能够快速建立新的LSP进行数据转发，因为Liberal方式保留了所有的标签。缺点是需要分发和维护不必要的标签映射。 Conservative方式的优点在于只需保留和维护用于转发数据的标签，以达到节约标签的目的。 LDP的标签管理与保留方式主要内容有下面三部分 标签分配模式 DoD：下游按需标记分发DU：下游自主标记分发2. 标签控制模式 有序方式独立方式 标签保持模式 保守模式自由模式最常用的组合是 下游自主（DU） + 有序 + 自由 下面来具体介绍什么意思 这里先要理解上游，下游的概念，MPLS入口出为最上游；出口处为最下游。标签的产生可以理解为是下游为上游产生的，下游产生的IN标签作为上游的OUT标签（比如图中R3左边要接收的IN标签为100，那么R2向右的OUT标签就要是100，因为R3只要为100的标签） 然后具体介绍上面的三个部分：Ⅰ.标签的控制模式（即标签是怎么产生的）：有序（常用）：只有最下游路由器才能产生标签，最下游的上游收到最下游的标签映射消息后，然后才能再往自己的上游发送标签映射关系。独立：中间的路由器也可以直接产生标签 Ⅱ.标签的分发模式：下游按需 ：需要的时候上游再向下游询问标签信息；下游自主：不管有没有问，下游路由器都自主的向上游发送标签映射信息（主动向上汇报）Ⅲ.标签的保留模式：如果有两条路径，也就会有两个标签，那么路由器保留哪个。保守：只保留路由表中的”最佳路径“，跳数比较少的；自由：保留所有的标签，虽然占用了更多的标签空间，但是收敛会快 基础实验 配置步骤： 完成ip和ospf配置： R1的配置如下： [R1] interface GigabitEthernet0&#x2F;0&#x2F;0 [R1-GigabitEthernet0&#x2F;0&#x2F;0] ip address 12.1.1.1 24 [R1] interface loopback0 [R1-Loopback0] ip address 1.1.1.1 32 [R1] ospf 1 router-id 1.1.1.1 [R1-ospf-1] area 0 [R1-ospf-1-0.0.0.0] network 12.1.1.0 0.0.0.255 [R1-ospf-1-0.0.0.0] network 1.1.1.1 0.0.0.0 R2的配置如下： [R2] interface GigabitEthernet0&#x2F;0&#x2F;0 [R2-GigabitEthernet0&#x2F;0&#x2F;0] ip address 12.1.1.2 24 [R2] interface GigabitEthernet0&#x2F;0&#x2F;1 [R2-GigabitEthernet0&#x2F;0&#x2F;1] ip address 23.1.1.2 24 [R2] interface loopback0 [R2-Loopback0] ip address 2.2.2.2 32 [R2] ospf 1 router-id 2.2.2.2 [R2-ospf-1] area 0 [R2-ospf-1-0.0.0.0] network 12.1.1.0 0.0.0.255 [R2-ospf-1-0.0.0.0] network 23.1.1.0 0.0.0.255 [R2-ospf-1-0.0.0.0] network 2.2.2.2 0.0.0.0 R3的配置如下： [R3] interface GigabitEthernet0&#x2F;0&#x2F;0 [R3-GigabitEthernet0&#x2F;0&#x2F;0] ip address 23.1.1.3 24 [R3] interface GigabitEthernet0&#x2F;0&#x2F;1 [R3-GigabitEthernet0&#x2F;0&#x2F;1] ip address 34.1.1.3 24 [R3] interface loopback0 [R3-Loopback0] ip address 3.3.3.3 32 [R3] ospf 1 router-id 3.3.3.3 [R3-ospf-1] area 0 [R3-ospf-1-0.0.0.0] network 23.1.1.0 0.0.0.255 [R3-ospf-1-0.0.0.0] network 34.1.1.0 0.0.0.255 [R3-ospf-1-0.0.0.0] network 1.1.1.1 0.0.0.0 R4的配置如下： [R4] interface GigabitEthernet0&#x2F;0&#x2F;0 [R4-GigabitEthernet0&#x2F;0&#x2F;0] ip address 34.1.1.4 24 [R4] interface loopback0 [R4-Loopback0] ip address 4.4.4.4 32 [R4] ospf 1 router-id 4.4.4.4 [R4-ospf-1] area 0 [R4-ospf-1-0.0.0.0] network 34.1.1.0 0.0.0.255 [R4-ospf-1-0.0.0.0] network 4.4.4.4 0.0.0.0 激活mpls并激活ldp （全局和接口下都需要激活） R1的配置如下： [R1] mpls lsr-id 1.1.1.1 #配置MPLS LSR ID [R1] mpls #全局激活MPLS [R1-mpls] quit [R1] mpls ldp #全局激活LDP [R1-mpls-ldp] quit [R1] Interface GigabitEthernet 0&#x2F;0&#x2F;0 [R1-GigabitEthernet0&#x2F;0&#x2F;0] mpls #在接口上激活MPLS [R1-GigabitEthernet0&#x2F;0&#x2F;0] mpls ldp #在接口上激活LDP R2的配置如下： [R2] mpls lsr-id 2.2.2.2 [R2] mpls [R2-mpls] quit [R2] mpls ldp [R2-mpls-ldp] quit [R2] Interface GigabitEthernet 0&#x2F;0&#x2F;0 [R2-GigabitEthernet0&#x2F;0&#x2F;0] mpls [R2-GigabitEthernet0&#x2F;0&#x2F;0] mpls ldp [R2] Interface GigabitEthernet 0&#x2F;0&#x2F;1 [R2-GigabitEthernet0&#x2F;0&#x2F;1] mpls [R2-GigabitEthernet0&#x2F;0&#x2F;1] mpls ldp R3的配置如下： [R3] mpls lsr-id 3.3.3.3 [R3] mpls [R3-mpls] quit [R3] mpls ldp [R3-mpls-ldp] quit [R3] Interface GigabitEthernet 0&#x2F;0&#x2F;0 [R3-GigabitEthernet0&#x2F;0&#x2F;0] mpls [R3-GigabitEthernet0&#x2F;0&#x2F;0] mpls ldp [R3] Interface GigabitEthernet 0&#x2F;0&#x2F;1 [R3-GigabitEthernet0&#x2F;0&#x2F;1] mpls [R3-GigabitEthernet0&#x2F;0&#x2F;1] mpls ldp R4的配置如下： [R4] mpls lsr-id 4.4.4.4 [R4] mpls [R4-mpls] quit [R4] mpls ldp [R4-mpls-ldp] quit [R4] Interface GigabitEthernet 0&#x2F;0&#x2F;0 [R4-GigabitEthernet0&#x2F;0&#x2F;0] mpls [R4-GigabitEthernet0&#x2F;0&#x2F;0] mpls ldp 验证： display mpls ldp peer LDP Peer Information in Public network A ‘*’ before a peer means the peer is being deleted. -—————————————————————————– PeerID TransportAddress DiscoverySource -—————————————————————————– 2.2.2.2:0 2.2.2.2 GigabitEthernet0&#x2F;0&#x2F;0 -—————————————————————————– TOTAL: 1 Peer(s) Found. 以上输出的是R1的LDP邻居表，从表中可以看出R1已经发现了一个LDP邻居，那就是R2。 disp mpls ldp session verbose LDP Session(s) in Public Network -—————————————————————————– Peer LDP ID : 2.2.2.2:0 Local LDP ID : 1.1.1.1:0 TCP Connection : 1.1.1.1 &lt;- 2.2.2.2 Session State : Operational Session Role : Passive Session FT Flag : Off MD5 Flag : Off Reconnect Timer : — Recovery Timer : — Keychain Name : — Negotiated Keepalive Hold Timer : 45 Sec Configured Keepalive Send Timer : — Keepalive Message Sent&#x2F;Rcvd : 153&#x2F;153 (Message Count) Label Advertisement Mode : Downstream Unsolicited Label Resource Status(Peer&#x2F;Local) : Available&#x2F;Available Session Age : 0000:00:38 (DDDD:HH:MM) Session Deletion Status : No Capability: Capability-Announcement : Off P2MP Capability : Off Outbound&amp;Inbound Policies applied : NULL Addresses received from peer: (Count: 3) 2.2.2.2 12.1.1.2 23.1.1.2 -—————————————————————————– 以上输出的是LDP会话的详细信息，邻居的状态必须为Operational才是最终的稳态，另外从TCP连接1.1.1.1 &lt; 2.2.2.2可以验证一点，LDP的会话建立是由传输地址大的一方发起的。 display mpls ldp lsp LDP LSP Information -—————————————————————————— DestAddress&#x2F;Mask In&#x2F;OutLabel UpstreamPeer NextHop OutInterface -—————————————————————————— 1.1.1.1&#x2F;32 3&#x2F;NULL 2.2.2.2 127.0.0.1 InLoop0 *1.1.1.1&#x2F;32 Liberal&#x2F;1026 DS&#x2F;2.2.2.2 2.2.2.2&#x2F;32 NULL&#x2F;3 - 12.1.1.2 GE0&#x2F;0&#x2F;0 2.2.2.2&#x2F;32 1026&#x2F;3 2.2.2.2 12.1.1.2 GE0&#x2F;0&#x2F;0 3.3.3.3&#x2F;32 NULL&#x2F;1024 - 12.1.1.2 GE0&#x2F;0&#x2F;0 3.3.3.3&#x2F;32 1024&#x2F;1024 2.2.2.2 12.1.1.2 GE0&#x2F;0&#x2F;0 4.4.4.4&#x2F;32 NULL&#x2F;1025 - 12.1.1.2 GE0&#x2F;0&#x2F;0 4.4.4.4&#x2F;32 1025&#x2F;1025 2.2.2.2 12.1.1.2 GE0&#x2F;0&#x2F;0 -—————————————————————————— TOTAL: 7 Normal LSP(s) Found. TOTAL: 1 Liberal LSP(s) Found. TOTAL: 0 Frr LSP(s) Found. A ‘*’ before an LSP means the LSP is not established A ‘*’ before a Label means the USCB or DSCB is stale A ‘*’ before a UpstreamPeer means the session is stale A ‘*’ before a DS means the session is stale A ‘*’ before a NextHop means the LSP is FRR LSP 以上输出的是R1的LFIB（标签转发信息库），可以看到已经建立好的LSP。 实际上，当我们再R1、R2、R3、R4上运行OSPF后，全网的路由已经被打通，也就是每台路由器都拥有全网的路由，其中包括互联网段的路由，以及各设备的Loopback路由。随后我们激活各设备的MPLS和LDP，每台设备会基于自己的路由表中的路由前缀进行标签捆绑，并且将为路由前缀（FEC）所捆绑的标签分发给自己的LDP邻居。默认情况下在我司的设备上，仅为&#x2F;32的主机路由分发标签，并且默认水平分割规则并未打开。 现在，来测试一下，从R1去tracert 4.4.4.4： tracert lsp ip 4.4.4.4 32 LSP Trace Route FEC: IPV4 PREFIX 4.4.4.4&#x2F;32 , press CTRL_C to break. TTL Replier Time Type Downstream 0 Ingress 12.1.1.2&#x2F;[1025 ] 1 12.1.1.2 20 ms Transit 23.1.1.3&#x2F;[1024 ] 2 23.1.1.3 20 ms Transit 34.1.1.4&#x2F;[3 ] 3 4.4.4.4 20 ms Egress 从tracert的结果我们可以看到数据包行走的路径，以及被压入的标签。","categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"mpls","slug":"mpls","permalink":"http://example.com/tags/mpls/"},{"name":"ldp","slug":"ldp","permalink":"http://example.com/tags/ldp/"}]},{"title":"Hybrid接口","slug":"Hybrid接口","date":"2023-12-05T05:30:11.000Z","updated":"2023-12-05T05:40:22.635Z","comments":true,"path":"2023/12/05/Hybrid接口/","permalink":"http://example.com/2023/12/05/Hybrid%E6%8E%A5%E5%8F%A3/","excerpt":"","text":"接口属性​ 交换机接口的类型，可以是Access、Trunk和Hybrid。Access类型的接口仅属于一个VLAN,,,,只能接收、转发相应VLAN的帧；而Trunk类型接口则默认属于所有VLAN任何Tagged帧都能经过Trunk接收和转发； Hybrid类型接口则介于二者之间，可自主定义端口上能接收和转发那些VLAN Tag帧，并可决定VLAN Tag是否继续携带或者剥离。。Access和Trunk类型接口是Hybrid类型接口的两个特例，，，一个仅支持一个VLAN传递，，一个默认支持所有VLAN的传递，而Access类型和Trunk类型的接口能做到的，Hybrid接口都能做到。 ​ hybrid属性具有trunk和access两种端口属性的特点，tag类似trunk，untag类似access，但是又不同，因为hybrid端口可以接收某个或者多个vlan的数据。 在开始研究之前强调几点： 1、在hybrid端口中，所有端口都默认属于vlan1，除非配置undo port hybrid vlan 1 才能将该hybrid剔除出vlan1，可以使用display vlan 查看端口所属的vlan 2、在hybrid端口中，无论是tag还是untag后面配置的vlan-id就是该hybrid端口所能够收到vlan数据的vlan-id，换句话说就是这些vlan中发出的数据该端口都能收到，可以使用display vlan查看（这里注意虽然可以收到这些vlan的数据但是严格意义上讲hybrid端口并不属于任何一个vlan） 3、所有类型端口的默认pvid都是vlan1，而pvid这个属性只！针对！进入！该端口的！没有标签的！普通数据包有效，作用是将没有标签的普通数据包打上pvid中配置的标签号 4、hybrid属性中，tag是针对于端口的接收方向的（从该端口进来的流量允许带有这些vlan标签的通过），untag是针对端口的发送方向的（从该端口出去的流量去除这些vlan标签） 5、加入一个hybrid端口配置tag vlan 2 3和untag vlan 4 5 ，那么默认情况下这个hybrid属于vlan1、2、3、4、5，在display vlan中可以查看到，只有端口属于了某个vlan，那么该端口才能收到某个vlan的数据包，这一点是理解下列两种配置和hybrid端口属性的关键！！！ 收发过程在数据发送时untag列表的原理，如下图1.带有vlan 3标签的数据从F0&#x2F;0接口出去，通过时查看untag列表，发现有对应的标签，将标签脱掉发送出去2.带有vlan 8标签的数据从F0&#x2F;1接口出去，通过时查看untag列表，发现没有对应的标签，继续查看tag表，发现有对应标签，所以直接带有vlan 8标签的数据发送出去3.带有vlan 5标签的数据从F0&#x2F;2接口出去，通过时查看untag列表，发现没有对应的标签 ，继续查看tag列表，发现也没有对应的标签，所以数据直接被丢弃 tag列表处理数据帧的接收和发送的原理，如下图1.没有标签的数据进入F0&#x2F;0接口，接口查看到数据没有标签，根据接口PVID&#x3D;3，将vlan 3标签打入数据2.带有vlan 9标签的数据进入接口F0&#x2F;1，接口查看到数据带有标签，接着查看tag列表，发现列表中存在对应标签，放通数据3.带有vlan 5标签的数据从接口F0&#x2F;2出去，接口查看到数据带有标签，查看untag列表，发现列表中没有对应vlan 5标签，继续查看tag列表，发现列表中存在对应标签vlan 5，放通数据出去4.带有vlan 3标签的数据从F0&#x2F;2接口出去，查看untag列表，发现列表中存在对应vlan 3标签，将标签脱掉，放通数据出去5.带有vlan 9标签的数据从F0&#x2F;2接口出去，查看untag表，发现列表中不存在对应vlan 9标签，继续查看tag列表，发现列表中不存在vlan 9标签，将数据丢弃 实例分析 1、为了让我们更加简洁的理解hydrid的属性，首先在所有的端口上移除了vlan1这个默认有的vlan，假设为所有端口初始不属于任何vlan，都不能相互之间通信 2、pvid是当普通的主机数据帧进入交换机端口后被打上的vlan-tag的属性，在途中可以看出PC1、PC2、PC3的流量在进入交换机的时候分别会被打上vlan2、vlan3、vlan99的vlan标签 3、untag后面的vlan就是该端口属于的vlan，那么不难看出LSW1的G0&#x2F;0&#x2F;1属于vlan2、3，G0&#x2F;0&#x2F;2属于vlan2、10，G0&#x2F;0&#x2F;3属于vlan3、10，而untag的动作是在流量出端口去往主机的时候把vlan-tag全部去除，那么不难看出LSW1的G0&#x2F;0&#x2F;1将去除vlan2、3的标签，G0&#x2F;0&#x2F;2去除vlan2、10的标签，G0&#x2F;0&#x2F;3去除vlan3、10的标签（还原成普通帧） LSW2的G0&#x2F;0&#x2F;1属于vlan99，G0&#x2F;0&#x2F;2属于vlan99，在流量出端口的时候会去除vlan99的标签（还原成普通帧） 那么PC1与PC2的通信现在分析如下：当PC1发送arp去请求PC2的MAC地址的时候，PC1会将数据包广播发往LSW1的G0&#x2F;0&#x2F;2接口，LSW1收到后发现是个普通的不带标签的数据帧，于是根据接口的pvid给该帧打上vlan2的tag，然后往vlan2中进行泛红，无奈G0&#x2F;0&#x2F;3端口只属于vlan3、10所以无法收到vlan2中的泛红，故PC1与PC2通信失败。 下面再来分析PC1与PC3通信：前面已经分析了PC1要去请求PC3的MAC，被LSW1的G0&#x2F;0&#x2F;2收到，并且打上vlan2的tag，然后在vlan2中泛红，那么在vlan2中的端口就都能收到该泛红了，所以在配置了untag vlan 2 3的G0&#x2F;0&#x2F;1端口自然也能收到vlan2和vlan3的泛红并转发出去，但是LSW1发现G0&#x2F;0&#x2F;1配置untag vlan2 3，所以将从该端口发送出去的所有带有vlan2和vlan3的数据包的tag全部去除（还原成普通帧），然后这个普通的帧就会发往LSW2被G0&#x2F;0&#x2F;1端口接收到，LSW2发现了一个普通的帧，那么就会用到pvid了不是，所以LSW2收到这个帧后打上vlan99的tag进行泛红，那么PC3所在的hybrid因为配置有untag vlan99必然能够收到vlan99的数据包了，然后在G0&#x2F;0&#x2F;2发给PC3的时候将vlan99的tag去除掉，PC3收到的就是一个不带任何tag的普通包（PC3完全不知道在它个PC1之间还有SW这种东西存在），好了PC3收到了PC1发来的arp请求，那么作为有礼貌的人应该回复自己的MAC地址了，与回一个arp响应给PC1， 下面PC3的回包分析：PC3使用PC1的MAC和ip封装好数据包后从网卡发送出去，LSW2的G0&#x2F;0&#x2F;2端口收到了，发现是一个普通帧，OK来pvid打上vlan99的tag，然后查看mac地址表发现PC1的MAC地址在G0&#x2F;0&#x2F;1口，在查看vlan信息，发现G0&#x2F;0&#x2F;1口可以接收vlan99的数据（untag vlan99），两个转发条件都满足了，那么久把数据包发给G0&#x2F;0&#x2F;1转发，G0&#x2F;0&#x2F;1转发的时候根据untag vlan99把数据包vlan-id去除还原成普通帧，被LSW1的G0&#x2F;0&#x2F;1收到，按照pvid的惯例，普通帧被打上了pvid vlan10的tag（用vlan10举例，也可以是任意vlan），然后LSW1根据MAC地址表找到PC1在自己的G0&#x2F;0&#x2F;2口，再查看vlan信息发现G0&#x2F;0&#x2F;2接口配置了untag vlan2 10，可以接收vlan10的数据包，于是就把这个被打上vlan10的PC3发来的arp响应通过G0&#x2F;0&#x2F;2发送给了PC1，当然在从G0&#x2F;0&#x2F;2接口出去的时候根据untag vlan2 10的配置将vlan10的tag去除还原成一个普通的帧，PC1收到的是一个普通的帧，完全不知道它和PC3之间还有交换机这个东西。好了，这就是一次通信过程，PC2与PC3的通信原理也是一样的，于是就实现了PC3与PC1、PC2互通，PC1与PC2之间不通的效果。","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"hybrid","slug":"hybrid","permalink":"http://example.com/tags/hybrid/"},{"name":"tag","slug":"tag","permalink":"http://example.com/tags/tag/"}]},{"title":"telnet","slug":"telnet","date":"2023-12-02T09:19:24.000Z","updated":"2023-12-02T09:35:21.015Z","comments":true,"path":"2023/12/02/telnet/","permalink":"http://example.com/2023/12/02/telnet/","excerpt":"","text":"两种配置方法1.仅密码登录验证代码如下（示例）：system-view —–进入配置模式[Quidway]interface vlan 1 —–进入管理vlan[Quidway-Vlanif1]ip address 192.168.28.49 255.255.255.0 —–配置管理ip地址[Quidway-Vlanif1]quit —–退出[Quidway]telnet server enable —–打开telnet服务 （一般默认开启）[Quidway]user-interface vty 0 4 —–用户指定虚拟用户终端接口[Quidway-ui-vty0-4]authentication-mode password —–配置用户终端接口认证方式 密码验证[Quidway-ui-vty0-4]set authentication password cipher huawei123 —–设置接口验证密码,密码为huawei123[Quidway-ui-vty0-4]user privilege level 15 —–设置用户优先级 （可选）[Quidway-ui-vty0-4]idle-timeout 1 —–设置登陆超时为一分钟 （可选）[Quidway-ui-vty0-4]return —–返回用户视图save —–保存 2.配置AAA登录代码如下（示例）：system-view —–进入配置模式[Quidway]interface vlan 1 —–进入管理vlan[Quidway-Vlanif1]ip address 192.168.28.49 255.255.255.0 —–配置管理ip地址[Quidway-Vlanif1]quit —–退出[Quidway]telnet server enable —–打开telnet服务 （一般默认开启）[Quidway]user-interface vty 0 4 —–用户指定虚拟用户终端接口[Quidway-ui-vty0-4]authentication-mode aaa —–配置用户终端接口认证方式 aaa验证[Quidway-ui-vty0-4]user privilege level 15 —–设置用户优先级[Quidway-ui-vty0-4]idle-timeout 1 —–设置登陆超时为一分钟[Quidway-ui-vty0-4]quit —–退出[Quidway]aaa —–进入aaa[Quidway-aaa]local-user huawei password cipher huawei123 —–创建用户名huawei 密码huawei123[Quidway-aaa]local-user huawei privilege level 15 —–设置用户优先级[Quidway-aaa]local-user huawei service-type telnet —–授权用户使用telnet[Quidway-ui-vty0-4]return —–返回用户视图save —–保存 user-interface vty 0 4 详解Quidway]user-interface vty 0 4 ；进入虚拟终端[S3026-ui-vty0-4]authentication-mode password ；设置口令模式[S3026-ui-vty0-4]set authentication-mode password simple 222 ；设置口令[S3026-ui-vty0-4]user privilege level 3 一、第一句的意思是：进入到vty 终端，在华为的交换机里，vty就是人家用telnet远程进入到你交换机的界面，最多有五个，所以说你可以vty 0 vty 1 vty… vty 4交换机最多可以允许五个人同时在线进到交换机里去配置命令的。vty0 4 就是说把这五个界面一起配置了，这五个界面进去的话，都是使用以下的配置。二、用的认证模式是密码认证，可以使用scheme模式来，也可以用password来，用password的话，是要密码的，就是说你telnet的话，要输入密码才能登陆到包交换机里去的。二、设置密码为明文密码，密码是123 ，如果是密文的话，就是cipher四、用户等级为3，也就是最高的，华为的命令级别很多，分为四级，0 1 2 3 ，0是参观级，只能看，1比0要高，可以使用一些命令，2 是可以配置了，3可以备份与删除IOS啦，呵呵，这个命令就是说用这个123密码，进来就是最高级别的，不用换级别。","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"telnet","slug":"telnet","permalink":"http://example.com/tags/telnet/"},{"name":"aaa","slug":"aaa","permalink":"http://example.com/tags/aaa/"}]},{"title":"FTP实验","slug":"FTP实验","date":"2023-11-30T10:10:45.000Z","updated":"2023-11-30T10:55:14.400Z","comments":true,"path":"2023/11/30/FTP实验/","permalink":"http://example.com/2023/11/30/FTP%E5%AE%9E%E9%AA%8C/","excerpt":"","text":"File Transfer Protocol 文件传输协议FTP服务器开启21号端口进行控制连接，20号端口与客户端建立数据连接 ASCII ((American Standard Code for Information Interchange): 美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言，它是最通用的信息交换标准。 FTP是用来传送文件的协议。使用FTP实现远程文件传输的同时，还可以保证数据传输的可靠性和高效性。 FTP 是基于客户———服务器（C&#x2F;S）模型而设计的，在客户端与 FTP 服务器之间建立两个连接 传输方式FTP支持两种方式的传输：文本（ASCII）方式和二进制（Binary）方式。通常文本文件的传输采用ASCII方式，而图象、声音文件、加密和压缩文件等非文本文件采用二进制方式传输，如果为了从一个系统上传输文件而使用了与本地系统不同的计算机字节位数，那么就必须使用Tenex模式。FTP以ASCII方式作为缺省的文件传输方式。 传输过程 使用FTP进行文件传输时，会使用两个TCP连接。第一个连接是FTP客户端和FTP服务器间的控制连接。FTP服务器开启21号端口，等待FTP客户端发送连接请求。FTP客户端随机开启端口，向服务器发送建立连接的请求。控制连接用于在服务器和客户端之间传输控制命令。 第二个连接是FTP客户端和FTP服务器间的数据连接。服务器使用TCP的20号端口与客户端建立数据连接。通常情况下，服务器主动建立或中断数据连接。 FTP服务器配置路由器和X7系列交换机均可提供FTP功能。执行ftp server enable命令使能FTP功能。执行set default ftp-directory命令设置FTP用户的默认工作目录。 在配置FTP服务器时，可以使用AAA为每个用户分别配置登录账号和访问权限。 aaa命令用来进入AAA视图。 local-user user-name { access-limit max-number | ftp-directory directory | idle-timeout minutes [ seconds ] | password cipher password [ opt ] | privilege level level | state {active | block } } *命令用来创建本地用户，并配置本地用户的各项参数。 user-name指定用户名。 local-user huawei service-type ftp命令用来配置本地用户的接入类型为ftp。 ftp-directory指定FTP用户可访问的目录。如果不配置FTP用户可访问的目录，则FTP用户无法登录设备。 access-limit指定用户名可建立的最大连接数目。 idle-timeout指定用户的闲置超时时间。 privilege level指定用户的优先级。 命令详解idle-timeoutidle-timeout命令用来设置用户连接的超时时间。 undo idle-timeout命令用来恢复超时时间的缺省值。 缺省情况下，用户连接的超时时间是5分钟。 命令格式 idle-timeout minutes [ seconds ] undo idle-timeout minutes 指定用户界面断连的超时时间的分钟数。 整数形式，取值范围是0～35791，单位是分钟。 seconds 指定用户界面断连的超时时间的秒数。 整数形式，取值范围是0～59，单位是秒 缺省级别 3：管理级 设置执行命令idle-timeout 0 0即关闭用户界面的超时断连功能。 如果用户界面没有设置闲置断连功能，则会导致已登录的用户始终处于连接状态，给设备带来安全风险，同时还有可能导致其他用户无法获得连接。 通常情况下，推荐设置用户界面断连的超时时间在10～15分钟之间。 # 设置超时为1分钟30秒。 1idle-timeout 1 30 local-user privilege level必须配置在3以上，否则ftp连接无法成功 local-user privilege level命令用来配置本地用户的优先级。 undo local-user privilege level命令用来将本地用户的优先级恢复为缺省配置。 缺省情况下，本地用户（如Telnet用户、SSH用户）的优先级由管理模块来决定。 命令格式 local-user user-name privilege level level undo local-user user-name privilege level user-name 用户名。 字符串形式，不支持空格，不区分大小写，长度范围是1~64。 level 用户的优先级。 整数形式，取值范围是0~15，取值越大，用户的优先级越高。缺省级别是0级。不同级别的用户登录后，只能使用等于或低于自己级别的命令 缺省情况下，命令级别分为0~3级： 级别0即参观级，网络诊断工具命令（ping、tracert）、从本设备出发访问外部设备的命令（包括：Telnet 客户端、SSH）等。该级别命令不允许进行配置文件保存的操作。 级别1即监控级，用于系统维护，包括display命令。该级别命令不允许进行配置文件保存的操作。 级别2即配置级，可以使用业务配置命令，包括路由、各个网络层次的命令，向用户提供直接网络服务。 级别3即管理级，用于系统基本运行的命令，对业务提供支撑作用，包括文件系统、FTP、TFTP、配置文件切换命令、备板控制命令、用户管理命令、命令级别设置命令、系统内部参数设置命令；用于业务故障诊断的debugging命令。 access-limitaccess-limit命令用来配置当前域允许接入的用户数。 undo access-limit命令用来恢复缺省配置。 缺省情况下，不限制接入的用户数目。 命令格式 access-limit max-number undo access-limit max-number 指定允许接入的用户数。 整数形式，取值范围是0～283648。 为了更方便地管理用户访问设备，可以限制域下用户的在线数量。 注意事项 执行这条配置命令后，当接入用户数大于允许的用户数时，系统不再允许用户接入系统，提示用户认证失败。 access-limit命令对一个域下所能接入的用户总数进行限制，不区分接入用户的类型。 # 设置当前域最多允许接入100个用户。 1access-limit 100 local-user ftp-directorylocal-user ftp-directory命令用来配置本地用户的FTP目录。 undo local-user ftp-directory命令用来将本地用户的FTP目录恢复为缺省配置。 缺省情况下，本地用户的FTP目录为空。 当需要将设备配置为FTP服务器，从而便于本地用户以FTP方式登录设备，对设备上的文件进行增加、删除、修改等操作时，可以通过本命令配置本地用户以FTP方式登录设备后所处的目录。 不指定该目录时，本地用户无法以FTP方式登录设备。 配置本地用户的FTP目录时，该用户必须已由local-user password命令建立。 local-user passwordlocal-user password命令用来创建一个本地用户并配置该用户的登录密码，或者修改已创建用户的登录密码。 undo local-user命令用来删除一个本地用户。 缺省情况下，系统没有本地用户。 local-user user-name password [ cipher password | irreversible-cipher irreversible-cipher-password ] undo local-user user-name cipher password 指定密文密钥。密钥以明文或密文形式输入，但配置文件中保存为密文形式。 irreversible-cipher irreversible-cipher-password 指定不可逆密文密钥。密钥以明文或不可逆密文形式输入，但配置文件中保存为密文形式。 总结1.FTP服务器需要开启TCP的21号端口来建立控制连接，20号端口来建立数据连接。 2.如果用户无权访问任何工作目录，则需要定义一个默认的FTP目录。执行set default ftp-directory 命令建立默认目录。 FTP实验R1 做为FTP Server 进行配置R2 做为Client 测试 R1：undo ter mosyssysname R1int g0&#x2F;0&#x2F;0ip add 192.168.1.1 24 R2：undo ter mosyssysname R2int g0&#x2F;0&#x2F;0ip add 192.168.1.2 24 R1:ftp server enableset default ftp-directory flash:&#x2F; （设置默认目录为flash:&#x2F;） ftp server enable命令用来开启设备的FTP服务器功能，允许FTP用户登录。缺省情况下，FTP服务器功能处于关闭状态。 其他可选的配置参数还包括：指定FTP服务器端口号、指定FTP服务器的源地址和配置FTP连接空闲时间等。 R1： 通过在AAA中设置用户名和密码（均为huawei）aaalocal-user huawei password cipher huaweilocal-user huawei service-type ftplocal-user huawei ftp-directory flash:&#x2F;local-user huawei access-limit 200local-user huawei idle-timeout 0 0local-user huawei privilege level 3 查看ftp server配置信息 R2登录FTP服务器 在R1和R2上分别保存文件text1.cfg和text2.cfg，用于后续测试 R1：save text1.cfg R2：save text2.cfg R2上通过dir命令查看服务器上的文件 R2从服务器上下载text1.cfg文件，并改名为newtext1.cfg R2本地查看dir put把本地文件text2.cfg上传到服务器，并改名为newtext2.cfg 查看是否上传成功 关闭ftp连接：bye","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"FTP","slug":"FTP","permalink":"http://example.com/tags/FTP/"}]},{"title":"VRRP基础实验","slug":"VRRP基础实验","date":"2023-11-29T13:01:52.000Z","updated":"2023-11-29T13:33:55.792Z","comments":true,"path":"2023/11/29/VRRP基础实验/","permalink":"http://example.com/2023/11/29/VRRP%E5%9F%BA%E7%A1%80%E5%AE%9E%E9%AA%8C/","excerpt":"","text":"设备连接方式如图所示，网络中存在VLAN10、20，每个VLAN中部署一组VRRP，使用与VLAN ID相同的数值作为VRID，将S1配置为VLAN10的VRRP Master，将S2配置为VLAN20的VRRP Master。 同时在S1、S2、S3上部署MSTP，创建Instance 1、2，将VLAN10映射到MSTI 1、VLAN20映射到MSTI 2，将S1配置为MSTI 1的主根桥、MSTI 2的备份根桥，而将S2配置为MSTI 1的备份根桥、MSTI 2的主根桥。 VLANIF接口地址使用10.0.x.y&#x2F;24，其中x为VRID组号，y为设备编号，VRIP使用10.0.x.254&#x2F;24。 #创建VLAN [S1]vlan batch 10 20 [S2]vlan batch 10 20 [S3]vlan batch 10 20 [S4]vlan batch 10 20 #将所有互联接口配置为Trunk接口，放通对应VLAN 略 #修改STP模式为MSTP [S1]stp mode mstp [S2]stp mode mstp [S3]stp mode mstp #配置MSTP [S1]stp region-configuration [S1-mst-region] region-name hcip [S1-mst-region] revision-level 1 [S1-mst-region] instance 1 vlan 10 [S1-mst-region] instance 2 vlan 20 [S1-mst-region] active region-configuration Info: This operation may take a few seconds. Please wait for a moment…done. [S1-mst-region] quit [S2]stp region-configuration [S2-mst-region] region-name hcip [S2-mst-region] revision-level 1 [S2-mst-region] instance 1 vlan 10 [S2-mst-region] instance 2 vlan 20 [S2-mst-region] active region-configuration Info: This operation may take a few seconds. Please wait for a moment…done. [S2-mst-region] quit [S3]stp region-configuration [S3-mst-region] region-name hcip [S3-mst-region] revision-level 1 [S3-mst-region] instance 1 vlan 10 [S3-mst-region] instance 2 vlan 20 [S3-mst-region] active region-configuration Info: This operation may take a few seconds. Please wait for a moment…done. [S3-mst-region] quit #配置SW1为MSTI1的根桥、MSTI2的备份根桥 [S1]stp instance 1 root primary [S1]stp instance 2 root secondary #配置SW2为MSTI2的根桥、MSTI1的备份根桥 [S2]stp instance 1 root secondary [S2]stp instance 2 root primary #在S1上查看MSTI1的状态和统计信息摘要 S1上所有接口都是指定接口，S1为MSTI1的根桥。 #在S2上查看MSTI2的状态和统计信息摘要 S2上所有接口都是指定接口，S2为MSTI1的根桥。 VRRP基础配置在S1、S2均创建VLANIF 10、20，分别加入VRRP组10、20，手动配置VRRP优先级，使得S1的VLAN10成为VRRP Master、S2的VLAN20成为VRRP Master。 #创建VLANIF [S1]interface Vlanif10 [S1-Vlanif10] ip address 10.0.10.1 255.255.255.0 [S1-Vlanif10] quit [S1]interface Vlanif20 [S1-Vlanif20] ip address 10.0.20.1 255.255.255.0 [S1-Vlanif20] quit [S2]interface Vlanif10 [S2-Vlanif10] ip address 10.0.10.2 255.255.255.0 [S2-Vlanif10] quit [S2]interface Vlanif20 [S2-Vlanif20] ip address 10.0.20.2 255.255.255.0 [S2-Vlanif20] quit #S1上配置VRRP [S1]interface Vlanif 10 [S1-Vlanif10] vrrp vrid 10 virtual-ip 10.0.10.254 [S1-Vlanif10] vrrp vrid 10 priority 120 [S1-Vlanif10] quit [S1]interface Vlanif 20 [S1-Vlanif20] vrrp vrid 20 virtual-ip 10.0.20.254 [S1-Vlanif20] quit 配置VLAN10的VRRP优先级为120，VLAN20保持默认的100。 #S2上配置VRRP [S2]interface Vlanif10 [S2-Vlanif10] vrrp vrid 10 virtual-ip 10.0.10.254 [S2-Vlanif10] quit [S2]interface Vlanif20 [S2-Vlanif20] vrrp vrid 20 virtual-ip 10.0.20.254 [S2-Vlanif20] vrrp vrid 20 priority 120 [S2-Vlanif20] quit 配置VLAN20的VRRP优先级为120，VLAN10保持默认的100。 #查看VRRP组状态 配置VRRP与BFD联动进行快速切换在S1、S2上配置BFD单跳检测，检测VLANIF接口之间的连通性，将VRRP与BFD联动，当BFD会话状态Down时，增加VRRP Backup设备的优先级。 #在S1上配置BFD会话 [S1]bfd [S1-bfd] quit [S1]bfd vlanif10 bind peer-ip 10.0.10.2 interface Vlanif10 [S1-bfd-session-vlanif10] discriminator local 1 [S1-bfd-session-vlanif10] discriminator remote 2 [S1-bfd-session-vlanif10] min-tx-interval 100 [S1-bfd-session-vlanif10] min-rx-interval 100 [S1-bfd-session-vlanif10] commit [S1-bfd-session-vlanif10] quit [S1]bfd vlanif20 bind peer-ip 10.0.20.2 interface Vlanif20 [S1-bfd-session-vlanif20] discriminator local 11 [S1-bfd-session-vlanif20] discriminator remote 22 [S1-bfd-session-vlanif20] min-tx-interval 100 [S1-bfd-session-vlanif20] min-rx-interval 100 [S1-bfd-session-vlanif20] commit [S1-bfd-session-vlanif20] quit #在S2上配置BFD会话 [S2]bfd [S2-bfd] quit [S2]bfd vlanif10 bind peer-ip 10.0.10.1 interface Vlanif10 [S2-bfd-session-vlanif10] discriminator local 2 [S2-bfd-session-vlanif10] discriminator remote 1 [S2-bfd-session-vlanif10] min-tx-interval 100 [S2-bfd-session-vlanif10] min-rx-interval 100 [S2-bfd-session-vlanif10] commit [S2-bfd-session-vlanif10] quit [S2]bfd vlanif20 bind peer-ip 10.0.20.1 interface Vlanif20 [S2-bfd-session-vlanif20] discriminator local 22 [S2-bfd-session-vlanif20] discriminator remote 11 [S2-bfd-session-vlanif20] min-tx-interval 100 [S2-bfd-session-vlanif20] min-rx-interval 100 [S2-bfd-session-vlanif20] commit [S2-bfd-session-vlanif20] quit #检查BFD会话状态 此时S1、S2上BFD会话状态都为Up。 #配置VRRP与BFD联动 [S1]interface Vlanif20 [S1-Vlanif20] vrrp vrid 20 track bfd-session 11 increased 30 [S1-Vlanif20] quit [S2]interface Vlanif10 [S2-Vlanif10] vrrp vrid 10 track bfd-session 2 increased 30 [S2-Vlanif10] quit 注意，此处的bfd-session号为本地的BFD discriminator，只需要在Backup状态的接口上配置联动，BFD会话Down时增加本地的VRRP优先级。 #关闭S1上所有接口，模拟链路故障 [S1]interface GigabitEthernet0&#x2F;0&#x2F;10 [S1-GigabitEthernet0&#x2F;0&#x2F;10] shutdown [S1-GigabitEthernet0&#x2F;0&#x2F;10] quit [S1]interface GigabitEthernet0&#x2F;0&#x2F;11 [S1-GigabitEthernet0&#x2F;0&#x2F;11] shutdown [S1-GigabitEthernet0&#x2F;0&#x2F;11] quit [S1]interface GigabitEthernet0&#x2F;0&#x2F;12 [S1-GigabitEthernet0&#x2F;0&#x2F;12] shutdown [S1-GigabitEthernet0&#x2F;0&#x2F;12] quit #在S2上查看BFD会话状态 此时两个BFD会话状态立马变为Down。 #在S2上查看VRRP组状态 VRRP组10、20的Master此时都是S2。 #在S2上查看VRRP组的状态和配置参数信息","categories":[],"tags":[{"name":"VRRP","slug":"VRRP","permalink":"http://example.com/tags/VRRP/"},{"name":"BFD","slug":"BFD","permalink":"http://example.com/tags/BFD/"}]},{"title":"BGP路由优选","slug":"BGP路由优选","date":"2023-11-28T10:19:34.000Z","updated":"2023-11-28T11:52:29.140Z","comments":true,"path":"2023/11/28/BGP路由优选/","permalink":"http://example.com/2023/11/28/BGP%E8%B7%AF%E7%94%B1%E4%BC%98%E9%80%89/","excerpt":"BGP路由优选实验背景你是公司的网络管理员。公司的网络采用了BGP协议接入了两个服务运营商。公司自己采用了私有的AS号64512，ISP1的AS号为100，ISP2的AS号为200。通过AS100、AS200都可以到达相同的网络，你通过改变BGP的各种属性达到了调整路由走向的目的。","text":"BGP路由优选实验背景你是公司的网络管理员。公司的网络采用了BGP协议接入了两个服务运营商。公司自己采用了私有的AS号64512，ISP1的AS号为100，ISP2的AS号为200。通过AS100、AS200都可以到达相同的网络，你通过改变BGP的各种属性达到了调整路由走向的目的。 实验介绍： 设备互联方式、互联接口地址如图所示，所有设备均创建Loopback0接口，IP地址为10.0.x.x&#x2F;32，其中x为设备编号，所有设备都使用Loopback0地址作为BGP Router ID。 R1在AS100，R5在AS200，R2、R3、R4在AS64512。AS64512内运行OSPF，在互联接口（不包括连接外部AS的接口）、Loopback0接口上激活OSPF。 EBGP对等体关系基于直连接口建立，IBGP对等体关系基于Loopback0接口建立。 R1、R5上存在相同的网段172.16.1.0&#x2F;24、172.16.2.0&#x2F;24、172.16.3.0&#x2F;24、172.16.4.0&#x2F;24，在R1、R5上将其发布到BGP，以用于BGP路由优选。 配置ip，配置bgp：略 #在R1、R5上将Loopback1、Loopback2、Loopback3、Loopback4接口路由发布到BGP中 [R1]bgp 100 [R1-bgp] network 172.16.1.0 24 [R1-bgp] network 172.16.2.0 24 [R1-bgp] network 172.16.3.0 24 [R1-bgp] network 172.16.4.0 24 [R5]bgp 200 [R5-bgp] network 172.16.1.0 24 [R5-bgp] network 172.16.2.0 24 [R5-bgp] network 172.16.3.0 24 [R5-bgp] network 172.16.4.0 24 #在R3上查看BGP路由表，检查BGP路由是否成功学习 R3已经成功学习R1、R5发布的路由，此时所有路由都优选由R2通告的。 修改AS_Path属性在R1上通过路由策略修改BGP路由172.16.1.0&#x2F;24的 AS_Path属性值，使得R3优选R5发布的BGP路由172.16.1.0&#x2F;24。 #创建IP前缀列表1，匹配Loopback1接口路由 [R1]ip ip-prefix 1 permit 172.16.1.0 24 greater-equal 24 less-equal 24 #创建Route-Policy hcip，并创建节点10，在其中调用IP前缀列表1，修改AS_Path属性值 [R1]route-policy hcip permit node 10 [R1-route-policy] if-match ip-prefix 1 [R1-route-policy] apply as-path 300 400 additive [R1-route-policy] quit [R1]route-policy hcip permit node 20 注意创建一个空节点，对于另外3条BGP路由不执行任何操作。 #对向BGP对等体R2通告的BGP路由应用Route-Policy [R1]bgp 100 [R1-bgp] peer 10.0.12.2 route-policy hcip export #在R1上触发出方向的软复位，刷新对外通告的BGP路由 refresh bgp all export #在R3上查看BGP路由172.16.1.0&#x2F;24的明细信息 此时R3优选R4通告的BGP路由172.16.1.0&#x2F;24，R2通告的未被优选的原因是AS_Path长度。 修改Local_Preference属性local_Preference：默认100，越大越优先，只能在ibgp对等体之间传递 在R4上通过路由策略修改BGP路由172.16.2.0&#x2F;24的Local_Preference属性值，使得R3优选R4通告的BGP路由172.16.2.0&#x2F;24。 #创建IP前缀列表1，匹配BGP路由172.16.2.0&#x2F;24 [R4]ip ip-prefix 1 permit 172.16.2.0 24 greater-equal 24 less-equal 24 #创建Route-Policy hcip，并创建节点10，在其中调用IP前缀列表1，修改Local_Preference属性值 [R4]route-policy hcip permit node 10 [R4-route-policy] if-match ip-prefix 1 [R4-route-policy] apply local-preference 200 [R4-route-policy] quit [R4]route-policy hcip permit node 20 注意创建一个空节点，对于另外3条BGP路由不执行任何操作。 #对向BGP对等体R3通告的BGP路由应用Route-Policy [R4]bgp 64512 [R4-bgp] peer 10.0.3.3 route-policy hcip export #在R4上触发出方向的软复位，刷新对外通告的BGP路由 refresh bgp all export #在R3上查看BGP路由172.16.2.0&#x2F;24的明细信息 此时R3优选R4通告的BGP路由172.16.2.0&#x2F;24，R2通告的BGP路由其Local_Preference值为100，小于R3通告的BGP路由Local_Preference值200，因此R2通告的BGP路由未被优选。 修改MED属性在R2上通过路由策略修改BGP路由172.16.3.0&#x2F;24的MED属性值，使得R3优选R5发布的BGP路由172.16.3.0&#x2F;24。 #创建IP前缀列表1，匹配BGP路由172.16.3.0&#x2F;24 [R2]ip ip-prefix 1 permit 172.16.3.0 24 greater-equal 24 less-equal 24 #创建Route-Policy hcip，并创建节点10，在其中调用IP前缀列表1，修改MED属性值 [R2]route-policy hcip permit node 10 [R2-route-policy] if-match ip-prefix 1 [R2-route-policy] apply cost 200 [R2-route-policy] quit [R2]route-policy hcip permit node 20 注意创建一个空节点，对于另外3条BGP路由不执行任何操作。 #对来自BGP对等体R1的BGP路由应用Route-Policy [R2]bgp 64512 [R2-bgp] peer 10.0.12.1 route-policy hcip import #在R2上触发入方向的软复位，刷新接收到的BGP路由 refresh bgp all import #在R3上配置允许比较来自不同AS的BGP路由的MED值 [R3]bgp 64512 [R3-bgp] compare-different-as-med 缺省情况下，不比较来自不同AS邻居的BGP的MED属性值。 #在R3上查看BGP路由172.16.3.0&#x2F;24的明细信息 R2通告的BGP路由172.16.3.0&#x2F;24其MED值为200，而R4通告BGP路由MED值为0，R3优选MED值较小的BGP路由，因此R2通告的BGP路由未被优选。 修改preferred-value属性preferred-value：华为特有的属性值，仅在本地有效，当bgp存在到相同的路由时，将优选prefeerred-value大的路由。只能在路由器本地配置，只影响本设备的路由优选，不会传递给任何bgp对等体。 在R3上通过路由策略修改BGP路由172.16.4.0&#x2F;24的preferred-value属性值，使得R3优选R4通告的BGP路由172.16.4.0&#x2F;24。 #创建IP前缀列表1，匹配BGP路由172.16.4.0&#x2F;24 [R3]ip ip-prefix 1 permit 172.16.4.0 24 greater-equal 24 less-equal 24 #创建Route-Policy hcip，并创建节点10，在其中调用IP前缀列表1，修改preferred-value属性值 [R3]route-policy hcip permit node 10 [R3-route-policy] if-match ip-prefix 1 [R3-route-policy] apply preferred-value 300 [R3-route-policy] quit [R3]route-policy hcip permit node 20 注意创建一个空节点，对于另外3条BGP路由不执行任何操作。 #对来自BGP对等体R4的BGP路由应用Route-Policy [R3]bgp 64512 [R3-bgp] peer 10.0.4.4 route-policy hcip import #在R3上触发入方向的软复位，刷新收到的BGP路由 refresh bgp all import #在R3上查看BGP路由172.16.4.0&#x2F;24的明细信息 R4通告的BGP路由172.16.3.0&#x2F;24其preferred-value值为300，而R2通告的preferred-value值为0，R3优选preferred-value值较大的BGP路由，因此R3优选R4通告的BGP路由。","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"BGP路由优选","slug":"BGP路由优选","permalink":"http://example.com/tags/BGP%E8%B7%AF%E7%94%B1%E4%BC%98%E9%80%89/"}]},{"title":"BGP路由反射器","slug":"BGP路由反射器","date":"2023-11-28T08:48:20.000Z","updated":"2023-11-28T10:16:01.185Z","comments":true,"path":"2023/11/28/BGP路由反射器/","permalink":"http://example.com/2023/11/28/BGP%E8%B7%AF%E7%94%B1%E5%8F%8D%E5%B0%84%E5%99%A8/","excerpt":"BGP路由反射器由于水平分割的原因，为了保证AS内所有的BGP路由器都能学习到完整的BGP路由，就必须在AS内实现IBGP全互联。 然而实现IBGP全互联存在诸多短板： 路由器需维护大量的TCP及BGP连接，尤其在路由器数量较多时。 AS内BGP网络的可扩展性较差，因为通过纯手工配置命令。 为了解决该问题，可应用到RR路由反射器技术。 1、Client：RR客户端，在RR设备上通过手动指定。 指定命令：peer 邻居 reflect-client 2、除了指定的设备为客户端，其它设备均为非客户端。 实验： R1、R2、R3、R4都属于AS64511，其连接方式、互联接口地址如图所示。每台设备均创建Loopback0接口，IP地址为10.0.x.x&#x2F;32，其中x为设备编号。R1、R2上的Loopback1地址分别为10.1.1.1&#x2F;24、10.2.2.2&#x2F;24，用于模拟用户网段。","text":"BGP路由反射器由于水平分割的原因，为了保证AS内所有的BGP路由器都能学习到完整的BGP路由，就必须在AS内实现IBGP全互联。 然而实现IBGP全互联存在诸多短板： 路由器需维护大量的TCP及BGP连接，尤其在路由器数量较多时。 AS内BGP网络的可扩展性较差，因为通过纯手工配置命令。 为了解决该问题，可应用到RR路由反射器技术。 1、Client：RR客户端，在RR设备上通过手动指定。 指定命令：peer 邻居 reflect-client 2、除了指定的设备为客户端，其它设备均为非客户端。 实验： R1、R2、R3、R4都属于AS64511，其连接方式、互联接口地址如图所示。每台设备均创建Loopback0接口，IP地址为10.0.x.x&#x2F;32，其中x为设备编号。R1、R2上的Loopback1地址分别为10.1.1.1&#x2F;24、10.2.2.2&#x2F;24，用于模拟用户网段。 所有设备都使用Loopback0地址作为BGP Router ID，R1与R2、R2与R3、R3与R4、R4与R2之间基于直连接口建立IBGP对等体关系，其中R1为R2的路由反射器客户端，R2为R3的路由反射器客户端，R3为R4的路由反射器客户端。 配置ip地址：略 建立ibgp对等体：略 配置路由反射器#R2上将R1配置为路由反射器客户端 [R2]bgp 64511 [R2-bgp] peer 10.0.1.1 reflect-client #R3上将R2配置为路由反射器客户端 [R3]bgp 64511 [R3-bgp] peer 10.0.2.2 reflect-client #R4上将R3配置为路由反射器客户端 [R4]bgp 64511 [R4-bgp] peer 10.0.3.3 reflect-client 验证Orginator_ID实现路由防环在本步骤中，我们将在R2上发布BGP路由10.2.2.0&#x2F;24，并观察该路由依次经路由反射器R3、R4反射后，被通告回R2从而引发潜在路由环路风险的情况。 缺省情况下，R2发布BGP路由后，该路由将被R2直接通告给R4，另一方面也会通过R3反射给R4，此时R4将优选R2直接通告过来的路由，从而不会再将R3反射过来的路由再反射回给R2。为此，我们需要在R2上部署路由策略，使R2不直接向R4通告10.2.2.0&#x2F;24路由。 #配置路由策略 [R2]acl number 2000 [R2-acl-basic-2000] rule 5 permit [R2-acl-basic-2000] quit [R2]route-policy bgp deny node 10 [R2-route-policy] if-match acl 2000 #在BGP中调用路由策略 [R2]bgp 64511 [R2-bgp] peer 10.0.24.4 route-policy bgp export #在R2上发布路由 [R2]bgp 64511 [R2-bgp] network 10.2.2.0 24 #R2上查看BGP路由10.2.2.0&#x2F;24的明细信息 R2将该条路由通告给了R3、R1，但是并未通告给R4。 #R3上查看BGP路由10.2.2.0&#x2F;24的明细信息 R3将来自反射器客户端的BGP路由10.2.2.0&#x2F;24反射给了10.0.34.4（R4）。同时该BGP路由的nexthop为10.0.23.2。 # R4上查看BGP路由10.2.2.0&#x2F;24的明细信息 该条路由来自反射器客户端R3，原始路由经由R3反射，路由的nexthop地址并未改变，同时R3为其添加了Orginator_ID属性，值为10.0.2.2。同时R4将该条路由反射给了R2。 #再次在R2上查看BGP路由10.2.2.0&#x2F;24的明细信息 依旧只存在本地通告的BGP路由，没有R4通告的BGP路由。 #在R2上查看BGP对等体10.0.4.4的详细信息 display bgp peer 10.0.4.4 verbose 从输出信息可以看到R2从R4收到了1个Update报文，未向R4发送Update报文（路由策略限制），但是本地BGP路由表中不存在由R4通告的BGP路由10.2.2.0&#x2F;24。 R4通告的BGP路由Orginator_ID属性值与本地的Router ID一致，R2忽略了该路由通告。 验证Cluster_List实现路由防环为了方便观察现象，取消R2上的BGP路由发布，在R1上将Loopback1接口路由发布到BGP，观察Cluster_List如何防止环路。 #取消R2上的BGP路由发布 [R2]bgp 64511 [R2-bgp] undo network 10.2.2.0 255.255.255.0 #在R1上将Loopback1接口路由发布到BGP [R1]bgp 64511 [R1-bgp] network 10.1.1.0 24 #依次在R1、R2、R3、R4上查看BGP路由10.1.1.0 &#x2F;24的明细信息 R1为BGP路由10.1.1.0&#x2F;24的始发者，R1将路由通告给了R2 来自路由反射器客户端R1的BGP路由10.1.1.0&#x2F;24，R2将其反射给了R3 来自路由反射器客户端R2的BGP路由10.1.1.0&#x2F;24，R2反射时添加了Cluster_List属性，值为10.0.2.2，R3将该条路由反射给了R4 来自路由反射器客户端R3的BGP路由10.1.1.0&#x2F;24，R3反射时添加了Cluster_List属性的值，当前值为10.0.3.3，10.0.2.2，R4将该条路由反射给了R2 #再次查看R2的BGP路由表 R2的BGP路由表中依旧只有一条来自r1的BGP路由10.1.1.0&#x2F;24。 4通告的BGP路由其Cluster_List属性值中包含了R2的Cluster-ID，R2忽略了该路由通告。","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"BGP路由反射器","slug":"BGP路由反射器","permalink":"http://example.com/tags/BGP%E8%B7%AF%E7%94%B1%E5%8F%8D%E5%B0%84%E5%99%A8/"}]},{"title":"BGP实验","slug":"BGP实验","date":"2023-11-28T02:58:58.000Z","updated":"2023-11-28T07:45:03.915Z","comments":true,"path":"2023/11/28/BGP实验/","permalink":"http://example.com/2023/11/28/BGP%E5%AE%9E%E9%AA%8C/","excerpt":"BGP基础实验设备连接方式、IP地址规划、BGP AS号如图所示，所有设备均创建Loopback0接口，IP地址为10.0.x.x&#x2F;32，其中x为设备编号，所有设备都使用Loopback0接口IP地址作为BGP Router ID。R1、R5上存在Loopback1模拟用户网段。 R2、R3、R4之间运行OSPF，在R2、R3、R4的互联接口、Loopback0接口上激活OSPF。!","text":"BGP基础实验设备连接方式、IP地址规划、BGP AS号如图所示，所有设备均创建Loopback0接口，IP地址为10.0.x.x&#x2F;32，其中x为设备编号，所有设备都使用Loopback0接口IP地址作为BGP Router ID。R1、R5上存在Loopback1模拟用户网段。 R2、R3、R4之间运行OSPF，在R2、R3、R4的互联接口、Loopback0接口上激活OSPF。! 实验背景你是公司的网络管理员。公司的网络采用了BGP协议作为路由协议。公司的网络由多个自治系统组成，不同的分支机构使用了不同的AS号，现在你需要完成公司网络的搭建工作。在公司总部使用了OSPF作为IGP，公司内部不同分支机构使用的是私有的BGP AS号。 1.配置ip如拓扑图配置各个接口ip，和loopback 0 ：10.0.x.x r1 loopback 1 ：10.1.1.1 24 r5 loopback 1 ：10.1.5.5 24 r2 r3 r4配置ospf：略 2.配置IBGP对等体在R2、R3、R4之间基于Loopback0接口建立全互联的IBGP对等体关系。 #R2上配置BGP [R2]bgp 64512 [R2-bgp] router-id 10.0.2.2 [R2-bgp] peer 10.0.3.3 as-number 64512 [R2-bgp] peer 10.0.3.3 connect-interface LoopBack0 [R2-bgp] peer 10.0.4.4 as-number 64512 [R2-bgp] peer 10.0.4.4 connect-interface LoopBack0 #R3上配置BGP [R3]bgp 64512 [R3-bgp] router-id 10.0.3.3 [R3-bgp] peer 10.0.2.2 as-number 64512 [R3-bgp] peer 10.0.2.2 connect-interface LoopBack0 [R3-bgp] peer 10.0.4.4 as-number 64512 [R3-bgp] peer 10.0.4.4 connect-interface LoopBack0 #R4上配置BGP [R4]bgp 64512 [R4-bgp] peer 10.0.2.2 as-number 64512 [R4-bgp] peer 10.0.2.2 connect-interface LoopBack0 [R4-bgp] peer 10.0.3.3 as-number 64512 [R4-bgp] peer 10.0.3.3 connect-interface LoopBack0 #分别在R2、R3、R4上检查BGP对等体状态 3.配置EBGP对等体（一般情况使用直连接口建立EBGp） 在R1与R2、R4与R5之间基于Loopback0接口建立EBGP对等体关系，为保证能够正常建立，在R1、R2上配置静态路由使Loopback0之间路由可达（R4、R5同样操作）。 #在R1、R2上配置静态路由 [R1]ip route-static 10.0.2.2 32 10.0.12.2 [R2]ip route-static 10.0.1.1 32 10.0.12.1 #在R4、R5上配置静态路由 [R4]ip route-static 10.0.5.5 32 10.0.45.5 [R5]ip route-static 10.0.4.4 32 10.0.45.4 这里配置静态路由，因为要建立TCP会话的前提，需要在数据层面两路由器相通，所以需要需要手工配置静态路由，实现loopback 0 之间互通 #配置R1、R2之间的EBGP对等体 [R1]bgp 64513 [R1-bgp] router-id 10.0.1.1 [R1-bgp] peer 10.0.2.2 as-number 64512 [R1-bgp] peer 10.0.2.2 ebgp-max-hop 2 [R1-bgp] peer 10.0.2.2 connect-interface LoopBack0 [R2]bgp 64512 [R2-bgp] peer 10.0.1.1 as-number 64513 [R2-bgp] peer 10.0.1.1 ebgp-max-hop 2 [R2-bgp] peer 10.0.1.1 connect-interface LoopBack0 默认情况下，EBGP连接允许的最大跳数为1，这导致EBGP对等体之间只能使用直连链路建立EBGP对等体关系，为使用环回口作为更新源需要手动修改EBGP连接允许的最大跳数。 #配置R4、R5之间的EBGP对等体 [R4]bgp 64512 [R4-bgp] peer 10.0.5.5 as-number 64514 [R4-bgp] peer 10.0.5.5 ebgp-max-hop 2 [R4-bgp] peer 10.0.5.5 connect-interface LoopBack0 [R5]bgp 64514 [R5-bgp] router-id 10.0.5.5 [R5-bgp] peer 10.0.4.4 as-number 64512 [R5-bgp] peer 10.0.4.4 ebgp-max-hop 2 [R5-bgp] peer 10.0.4.4 connect-interface LoopBack0 #在R1、R5上检查EBGP对等体状态 4.在BGP中发布路由在R1、R5上将Loopback1接口路由发布到BGP #在R1、R5上通过network命令发布路由 [R1]bgp 64513 [R1-bgp] network 10.1.1.1 24 [R5]bgp 64514 [R5-bgp] network 10.1.5.5 24 在R3上查看BGP路由表 可以看到此时R3上已经学习到R1、R5上发布的BGP路由，但是都是非有效路由，这是因为它们的下一跳在R3上都不可达，为此可以在R2、R4上通过next-hop-local命令修改下一跳地址为R2、R4的更新源地址。 原因：ebgp对等体在发送数据时，下一跳地址为自身更新源地址，ibgp收到ebgp发送的数据，下一跳不变 #在R2、R4上将路由的下一跳地址修改为自身 [R2]bgp 64512 [R2-bgp] peer 10.0.3.3 next-hop-local [R2-bgp] peer 10.0.4.4 next-hop-local [R4]bgp 64512 [R4-bgp] peer 10.0.2.2 next-hop-local [R4-bgp] peer 10.0.3.3 next-hop-local peer next-hop-local命令一般在ASBR上配置。当设备通过EBGP邻居学到路由再转发给其他IBGP邻居时，默认不修改下一跳，但其EBGP邻居发来的路由的下一跳都是其EBGP邻居的Peer地址，本端对等体所属AS域内的IBGP邻居收到这样的路由后，由于下一跳不可达导致路由无法活跃。因此，需要在ASBR上对IBGP邻居配置peer next-hop-local命令，使得发给IBGP邻居的路由的下一跳是其自身的地址，IBGP邻居收到这样的路由后（由于域内都配置了IGP）发现下一跳可达，路由即为活跃路由。 此命令为覆盖式命令。 执行peer next-hop-local命令后，设备向IBGP对等体&#x2F;对等体组通告路由时，把下一跳属性设为自身的IP地址。 peer next-hop-local命令仅应用于IBGP对等体间。 再次r3上查看bgp路由表 此时两条BGP路由都变成了有效、最优的状态。 #在R1、R5上查看BGP路由表 R1、R5之间相互学习到了对端Loopback1接口路由。 BGP路由汇总实验 BGP AS号、互联地址如图所示，所有设备均创建Loopback0接口，IP地址为10.0.x.x&#x2F;32，其中x为设备编号。 R1、R2、R3使用Loopback0地址作为BGP Router ID，基于直连接口建立EBGP对等体关系。 R1、R3上存在Loopback1、Loopback2接口，用于模拟用户网段。 1.配置ip略 2.配置EBGPd对等体#配置R1 [R1]bgp 64511 [R1-bgp] router-id 10.0.1.1 [R1-bgp] peer 10.0.12.2 as-number 64512 #配置R2 #配置R3 [R3]bgp 64513 [R3-bgp] router-id 10.0.3.3 [R3-bgp] peer 10.0.23.2 as-number 64512 3.BGP路由自动汇总在R1上开启BGP路由自动汇总，将Loopback1、Loopback2接口路由发布到BGP中，并进行自动汇总。 #创建IP前缀列表1，匹配Loopback1、Loopback2接口路由 [R1]ip ip-prefix 1 permit 172.16.0.0 16 greater-equal 24 less-equal 24 #创建Route-Policy hcip，并创建节点10，在其中调用IP前缀列表1 [R1]route-policy hcip permit node 10 [R1-route-policy] if-match ip-prefix 1 [R1-route-policy] quit [R1]bgp 64511 [R1-bgp] import-route direct route-policy hcip [R1-bgp] summary automatic Info: Automatic summarization is valid only for the routes imported through the import-route command. 自动汇总只对通过import-route命令引入的路由生效。 #在R1上查看BGP路由表 display bgp routing-table Loopback1、Loopback2接口路由已经发布到BGP，由于R1激活了BGP路由自动汇总，因此R1会将这些路由汇总成172.16.0.0&#x2F;16，同时抑制所有的明细路由，通过明细路由前的“s”标记可以看出，该标记的含义为“suppressed”，表示被抑制，最终R1只对外通告汇总路由172.16.0.0&#x2F;16。 #在R2上查看BGP路由表 display bgp routing-table R2上只能看到一条主类路由172.16.0.0&#x2F;16。 #在R2上查看BGP路由172.16.0.0的明细信息 display bgp routing-table 172.16.0.0 该路由的路径属性中存在Aggregator属性，其中携带了汇总路由生成设备所属的AS号以及其Router ID 4.BGP路由手动汇总在R3上将Loopback1、Loopback2接口路由发布到BGP，在R2上通过aggregate命令执行手动汇总，并抑制明细路由的对外发布。 #创建IP前缀列表1，匹配Loopback1、Loopback2接口路由 [R3]ip ip-prefix 1 permit 172.17.0.0 16 greater-equal 24 less-equal 24 #创建Route-Policy hcip，并创建节点10，在其中调用IP前缀列表1 [R3]route-policy hcip permit node 10 [R3-route-policy] if-match ip-prefix 1 [R3-route-policy] quit #将Loopback1、Loopback2接口路由发布到BGP [R3]bgp 64513 [R3-bgp] import-route direct route-policy hcip #查看R2的BGP路由表 display bgp routing-table ​ 在R2的BGP路由表中已经存在R3通告的BGP路由172.17.1.0&#x2F;24、172.17.2.0&#x2F;24。 #R2上执行手动路由汇总，将172.17.1.0&#x2F;24、172.17.2.0&#x2F;24汇总成172.17.0.0&#x2F;22，并抑制明细路由的对外通告 [R2]bgp 64512 [R2-bgp] aggregate 172.17.0.0 22 detail-suppressed #查看R2的BGP路由表 display bgp routing-table ​ 此时在R2的BGP路由表中可以看到汇总后的路由。 #在R2上查看BGP路由172.16.0.0&#x2F;22的明细信息 display bgp routing-table 172.17.0.0 22 从输出信息可以看到AS_Path值为Nil，代表了AS_Path属性值为空，这意味着丢失了明细的AS_Path属性值，BGP依赖AS_Path实现防环，因此AS_Path属性的丢失可能带来路由环路。从该条路由对外通告的对等体中可以看到10.0.23.3（R3)。 #查看R3的BGP路由表 在R3的BGP路由表中可以看到汇总路由172.17.0.0&#x2F;22。 #为防止路由环路，在R2上执行手动汇总时增加as-set关键字 [R2]bgp 64512 [R2-bgp] aggregate 172.17.0.0 255.255.252.0 detail-suppressed as-set #再次在R2上查看BGP路由172.17.0.0&#x2F;22的明细信息 可以看到此时AS_Path属性值为64513，此时该条路由依旧向10.0.23.3（R3）通告。 R3收到关于172.17.0.0&#x2F;22的通告之后，在AS_Path中将看到自身的AS号（64153），将会忽略该路由通告。此时R3的BGP路由表中无法看到汇总路由172.17.0.0&#x2F;22，因此通过在手动路由汇总的配置中使用as-set关键字顺利地规避了路由环路的产生。 BGP路由反射器","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"BGP","slug":"BGP","permalink":"http://example.com/tags/BGP/"}]},{"title":"路由策略","slug":"路由策略","date":"2023-11-26T12:36:59.000Z","updated":"2024-07-23T15:14:38.526Z","comments":true,"path":"2023/11/26/路由策略/","permalink":"http://example.com/2023/11/26/%E8%B7%AF%E7%94%B1%E7%AD%96%E7%95%A5/","excerpt":"ACL访问控制列表ACL（Access Control List）是由一条或多条规则组成的集合。所谓规则，是指描述报文匹配条件的判断语句，这些条件可以是报文的源地址、目的地址、端口号等。 ACL本质上是一种报文过滤器，规则是过滤器的滤芯。设备基于这些规则进行报文匹配，可以过滤出特定的报文，并根据应用ACL的业务模块的处理策略来允许或阻止该报文通过。 ACL可以实现对网络中报文流的精确识别和控制，达到控制网络访问行为、防止网络攻击和提高网络带宽利用率的目的，从而切实保障网络环境的安全性和网络服务质量的可靠性。 ACL匹配机制设备将报文与ACL规则进行匹配时，遵循“一旦命中即停止匹配”的机制，当找到一条符合匹配条件的规则时，结束查找。 报文与ACL规则匹配后，会产生两种结果：“命中规则”和“未命中规则”。 命中规则：指存在ACL，且在ACL中查找到了符合匹配条件的规则 未命中规则：指不存在ACL，或ACL中无规则，再或者在ACL中遍历了所有规则都没有找到符合匹配条件的规则。 报文最终是被允许通过还是拒绝通过，实际是ACL规则中的指定动作和应用ACL的各个业务模块来共同决定。不同的业务模块，对命中和未命中规则报文的处理方式也各不相同。 系统按照ACL规则编号从小到大的顺序进行报文匹配，规则编号越小越容易被匹配。 如果配置规则时指定了规则编号，则规则编号越小，规则插入位置越靠前，该规则越先被匹配。 如果配置规则时未指定规则编号，则由系统自动为其分配一个编号。该编号是一个大于当前ACL内最大规则编号且是步长整数倍的最小整数，因此该规则会被最后匹配。 IP前缀列表IP前缀列表（IP-Prefix List）是将路由条目的网络地址、掩码长度作为匹配条件的过滤器，可在各路由协议发布和接收路由时使用。 不同于ACL，IP-Prefix List能够同时匹配IP地址前缀长度以及掩码长度，增强了匹配的精确度。 匹配机制和ACL一样 Filter-PolicyFilter-Policy（过滤-策略）是一个很常用的路由信息过滤工具，能够对接收、发布、引入的路由进行过滤，可应用于IS-IS、OSPF、BGP等协议。 filter-policy在距离矢量路由协议中的应用 filter-policy在链路状态路由协议中的应用 在链路状态路由协议中，各路由设备之间传递的是LSA信息，然后设备根据LSA汇总成的LSDB信息计算出路由表。以OSPF为例，filter-policy生效规则如下： filter-policy import命令实际上是对OSPF计算出来的路由进行过滤，不是对发布和接收的LSA进行过滤。filter-policy import命令对接收的路由设置过滤策略，只有通过过滤策略的路由才被添加到路由表中，没有通过过滤策略的路由不会被添加进路由表，但不影响对外发布出去。（只影响本地全局路由表） filter-policy export命令用来对引入的路由在发布时进行过滤，只将满足条件的外部路由转换为Type5 LSA（AS-external-LSA）并发布出去。这样可以在引入外部路由时进行特定的过滤，防止形成路由环路。 OSPF通过命令import-route引入外部路由后，为了避免路由环路的产生，通过filter-policy export命令对引入的路由在发布时进行过滤，只将满足条件的外部路由转换为Type5 LSA（AS-external-LSA）并发布出去。（影响后边的路由器的ospf路由表和全局路由表） import示例： （1）通过filter-policy对OSPF接收的路由过滤（区域内）示例 三台交换机同属于OSPF Area 0区域，SwitchA发布测试网段10.1.1.0&#x2F;24，要求在SwitchB上部署filter-policy import，使得SwitchB的路由表中不允许出现10.1.1.0&#x2F;24这条路由。 配置方法 在SwitchB上定义一个地址前缀列表，“抓取”符合条件的路由。 12[SwitchB] ip ip-prefix huawei index 10 deny 10.1.1.0 24 //拒绝这条[SwitchB] ip ip-prefix huawei index 20 permit 0.0.0.0 0 less-equal 32 //允许所有 在SwitchB的OSPF视图中，部署filter-policy import。 12[SwitchB] ospf[SwitchB-ospf-1] filter-policy ip-prefix huawei import 结果验证 做完上述配置以后，查看SwitchB和SwitchC的路由表如下： 12345678910111213141516171819202122232425262728293031[SwitchB] display ip routing-tableRoute Flags: R - relay, D - download to fib-----------------------------------------------------------------------------Routing Tables: Public Destinations : 6 Routes : 6 Destination/Mask Proto Pre Cost Flags NextHop Interface 127.0.0.0/8 Direct 0 0 D 127.0.0.1 InLoopBack0 127.0.0.1/32 Direct 0 0 D 127.0.0.1 InLoopBack0 192.168.12.0/24 Direct 0 0 D 192.168.12.2 Vlanif12 192.168.12.2/32 Direct 0 0 D 127.0.0.1 Vlanif12 192.168.23.0/24 Direct 0 0 D 192.168.23.1 Vlanif23 192.168.23.1/32 Direct 0 0 D 127.0.0.1 Vlanif23（B的ip路由表中被过滤，但ospf路由表在仍然存在）[SwitchC] display ip routing-tableRoute Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public Destinations : 6 Routes : 6 Destination/Mask Proto Pre Cost Flags NextHop Interface 10.1.1.0/24 OSPF 10 3 D 192.168.23.1 Vlanif23 127.0.0.0/8 Direct 0 0 D 127.0.0.1 InLoopBack0 127.0.0.1/32 Direct 0 0 D 127.0.0.1 InLoopBack0 192.168.12.0/24 OSPF 10 2 D 192.168.23.1 Vlanif23 192.168.23.0/24 Direct 0 0 D 192.168.23.2 Vlanif23 192.168.23.2/32 Direct 0 0 D 127.0.0.1 Vlanif23 通过SwitchB和SwitchC的路由表可以看到，虽然在SwitchB上10.1.1.0&#x2F;24这条路由已经被过滤掉，但是LSA信息会继续传递给SwitchC，所以SwitchC的路由表中继续存在10.1.1.0&#x2F;24这条路由。这样的结果也验证了一开始在注意事项中给出的结论：在链路状态路由协议中，filter-policy只能过滤路由信息，不能过滤LSA信息。 同时SwitchB和SwitchC的LSDB中仍然存在描述10.1.1.0&#x2F;24这条路由的LSA信息，此处可以通过查看SwitchB和SwitchC的LSA信息进行验证。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950[SwitchB] display ospf lsdb router OSPF Process 1 with Router ID 10.10.10.2 Area: 0.0.0.0 Link State Database ……… Type : Router Ls id : 10.10.10.1 Adv rtr : 10.10.10.1 Ls age : 139 Len : 48 Options : E seq# : 80000005 chksum : 0x41c4 Link count: 2 * Link ID: 10.1.1.0 Data : 255.255.255.0 Link Type: StubNet Metric : 1 Priority : Low * Link ID: 192.168.12.2 Data : 192.168.12.1 Link Type: TransNet Metric : 1[SwitchC] display ospf lsdb router OSPF Process 1 with Router ID 10.10.10.3 Area: 0.0.0.0 Link State Database ………… Type : Router Ls id : 10.10.10.1 Adv rtr : 10.10.10.1 Ls age : 81 Len : 48 Options : E seq# : 80000005 chksum : 0x41c4 Link count: 2 * Link ID: 10.1.1.0 Data : 255.255.255.0 Link Type: StubNet Metric : 1 Priority : Low * Link ID: 192.168.12.2 Data : 192.168.12.1 Link Type: TransNet Metric : 1 可以看到SwitchB和SwitchC的LSDB中仍然存在描述10.1.1.0&#x2F;24这条路由的LSA信息。 （2）通过filter-policy对OSPF接收的路由过滤（区域间） 相对于上一个场景，这个场景的区别之处是划分了两个不同的区域，SwitchB和SwitchC之间传递的是Type3 LSA，这个Type3 LSA是SwitchB上根据区域间路由生成的。配置方法跟上一个场景一样，此处不再赘述。 在部署路由过滤策略之前，SwitchB和SwitchC的路由表中都有10.1.1.0&#x2F;24这条路由。 在SwitchB上部署filter-policy import以后，查看SwitchB和SwitchC的路由表，结果如下： 1234567891011121314151617181920212223242526272829[SwitchB] display ip routing-tableRoute Flags: R - relay, D - download to fib-----------------------------------------------------------------------------Routing Tables: Public Destinations : 6 Routes : 6 Destination/Mask Proto Pre Cost Flags NextHop Interface 127.0.0.0/8 Direct 0 0 D 127.0.0.1 InLoopBack0 127.0.0.1/32 Direct 0 0 D 127.0.0.1 InLoopBack0 192.168.12.0/24 Direct 0 0 D 192.168.12.2 Vlanif12 192.168.12.2/32 Direct 0 0 D 127.0.0.1 Vlanif12 192.168.23.0/24 Direct 0 0 D 192.168.23.1 Vlanif23 192.168.23.1/32 Direct 0 0 D 127.0.0.1 Vlanif23[SwitchC] display ip routing-tableRoute Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public Destinations : 5 Routes : 5 Destination/Mask Proto Pre Cost Flags NextHop Interface 127.0.0.0/8 Direct 0 0 D 127.0.0.1 InLoopBack0 127.0.0.1/32 Direct 0 0 D 127.0.0.1 InLoopBack0 192.168.12.0/24 OSPF 10 2 D 192.168.23.1 Vlanif23 192.168.23.0/24 Direct 0 0 D 192.168.23.2 Vlanif23 192.168.23.2/32 Direct 0 0 D 127.0.0.1 Vlanif23 由于现在划分不同的区域，SwitchC上的10.1.1.0&#x2F;24这条路由是由SwitchB根据自身学习的路由产生的Type3-LSA描述的，而SwitchB上的这条路由被过滤掉了，因此不能够再产生描述区域间路由的这个Type3-LSA，因此SwitchC上不会再学习到10.1.1.0&#x2F;24这条路由。 export示例： 在R1上创建四个环回口，IP地址分别为192.168.1.0&#x2F;24，192.168.2.0&#x2F;24、192.168.3.0&#x2F;24、192.168.4.0&#x2F;24，并且全部宣告进OSPF。 引入直连，但是要保证R2和R3上只能收到192.168.1.0这条路由 通过Filter-policy让R2和R3只能收到192.168.1.0这条路由 [R1]ip ip-prefix ly permit 192.168.1.0 24 [R1]ospf [R1-ospf-1]filter-policy ip-prefix ly export 【技术要点】 OSPF通过命令import-route引入外部路由后，为了避免路由环路的产生，通过filter-policy export命令对引入的路由在发布时进行过滤，只将满足条件的外部路由转换为Type5 LSA（AS-external-LSA）并发布出去。 当网络中同时部署了IS-IS和其他路由协议时，如果已经在边界设备上引入其他路由协议的路由，缺省情况下，该设备将把引入的全部外部路由发布给IS-IS邻居。如果只希望将引入的部分外部路由发布给邻居，可以使用****filter-policy export****命令实现。 Route-PolicyRoute-Policy是一个策略工具，用于过滤路由信息，以及为过滤后的路由信息设置路由属性。 一个Route-Policy由一个或多个节点（Node）构成，每个节点都可以是一系列条件语句（匹配条件）以及执行语句（执行动作）的集合，这些集合按照编号从小到大的顺序排列。 示例： 双点双向路由重发布 解决次优路径： 环路问题： 解决环路： 策略路由若设备部署了PBR，则被匹配的报文优先根据PBR的策略进行转发，即PBR策略的优先级高于传统路由表。 策略路由PBR（Policy-Based Routing）是一种依据用户制定的策略进行路由选择的机制，分为本地策略路由、接口策略路由和智能策略路由SPR（Smart Policy Routing）。 策略路由与路由策略（Routing Policy）存在以下不同： 策略路由的操作对象是数据包，在路由表已经产生的情况下，不按照路由表进行转发，而是根据需要，依照某种策略改变数据包转发路径。 路由策略的操作对象是路由信息。路由策略主要实现了路由过滤和路由属性设置等功能，它通过改变路由属性（包括可达性）来改变网络流量所经过的路径。 语法： MQCMQC（Modular QoS Command-Line Interface，模块化QoS命令行）是指通过将具有某类共同特征的数据流划分为一类，并为同一类数据流提供相同的服务，也可以对不同类的数据流提供不同的服务。 MQC包含三个要素：流分类（traffic classifier）、流行为（traffic behavior）和流策略（traffic policy）。MQC的流行为支持重定向报文，因此可以使用MQC实现IP单播策略路由。 流分类流分类用来定义一组流量匹配规则，以对报文进行分类。流分类规则: 流分类中各规则之间的关系分为：and或or，缺省情况下的关系为or。 and：当流分类中包含ACL规则时，报文必须匹配其中一条ACL规则以及所有非ACL规则才属于该类；当流分类中没有ACL规则时，报文必须匹配所有非ACL规则才属于该类。 or：报文只要匹配了流分类中的一个规则，设备就认为报文属于此类。 流行为 流策略绑定流分类与流行为 案例 Traffic-Filter使用Traffic-Filter过滤流量可以灵活地选择部署位置，在流量进入设备或者离开设备的接口上执行过滤动作，双向访问的业务禁止其中一个方向即可实现阻断业务的需求。 实验手册实验 设备互联方式、互联地址如图所示，所有设备均创建Loopback0，其IP地址为10.0.x.x&#x2F;32，其中x为设备编号，R1、R2、R3在互联接口、Loopback0接口上激活OSPF。 R3、R4属于IS-IS Area 49.0001，两者都是Level-1路由器，R3、R4的系统ID采用0000.0000.000x格式，其中x为设备编号。","text":"ACL访问控制列表ACL（Access Control List）是由一条或多条规则组成的集合。所谓规则，是指描述报文匹配条件的判断语句，这些条件可以是报文的源地址、目的地址、端口号等。 ACL本质上是一种报文过滤器，规则是过滤器的滤芯。设备基于这些规则进行报文匹配，可以过滤出特定的报文，并根据应用ACL的业务模块的处理策略来允许或阻止该报文通过。 ACL可以实现对网络中报文流的精确识别和控制，达到控制网络访问行为、防止网络攻击和提高网络带宽利用率的目的，从而切实保障网络环境的安全性和网络服务质量的可靠性。 ACL匹配机制设备将报文与ACL规则进行匹配时，遵循“一旦命中即停止匹配”的机制，当找到一条符合匹配条件的规则时，结束查找。 报文与ACL规则匹配后，会产生两种结果：“命中规则”和“未命中规则”。 命中规则：指存在ACL，且在ACL中查找到了符合匹配条件的规则 未命中规则：指不存在ACL，或ACL中无规则，再或者在ACL中遍历了所有规则都没有找到符合匹配条件的规则。 报文最终是被允许通过还是拒绝通过，实际是ACL规则中的指定动作和应用ACL的各个业务模块来共同决定。不同的业务模块，对命中和未命中规则报文的处理方式也各不相同。 系统按照ACL规则编号从小到大的顺序进行报文匹配，规则编号越小越容易被匹配。 如果配置规则时指定了规则编号，则规则编号越小，规则插入位置越靠前，该规则越先被匹配。 如果配置规则时未指定规则编号，则由系统自动为其分配一个编号。该编号是一个大于当前ACL内最大规则编号且是步长整数倍的最小整数，因此该规则会被最后匹配。 IP前缀列表IP前缀列表（IP-Prefix List）是将路由条目的网络地址、掩码长度作为匹配条件的过滤器，可在各路由协议发布和接收路由时使用。 不同于ACL，IP-Prefix List能够同时匹配IP地址前缀长度以及掩码长度，增强了匹配的精确度。 匹配机制和ACL一样 Filter-PolicyFilter-Policy（过滤-策略）是一个很常用的路由信息过滤工具，能够对接收、发布、引入的路由进行过滤，可应用于IS-IS、OSPF、BGP等协议。 filter-policy在距离矢量路由协议中的应用 filter-policy在链路状态路由协议中的应用 在链路状态路由协议中，各路由设备之间传递的是LSA信息，然后设备根据LSA汇总成的LSDB信息计算出路由表。以OSPF为例，filter-policy生效规则如下： filter-policy import命令实际上是对OSPF计算出来的路由进行过滤，不是对发布和接收的LSA进行过滤。filter-policy import命令对接收的路由设置过滤策略，只有通过过滤策略的路由才被添加到路由表中，没有通过过滤策略的路由不会被添加进路由表，但不影响对外发布出去。（只影响本地全局路由表） filter-policy export命令用来对引入的路由在发布时进行过滤，只将满足条件的外部路由转换为Type5 LSA（AS-external-LSA）并发布出去。这样可以在引入外部路由时进行特定的过滤，防止形成路由环路。 OSPF通过命令import-route引入外部路由后，为了避免路由环路的产生，通过filter-policy export命令对引入的路由在发布时进行过滤，只将满足条件的外部路由转换为Type5 LSA（AS-external-LSA）并发布出去。（影响后边的路由器的ospf路由表和全局路由表） import示例： （1）通过filter-policy对OSPF接收的路由过滤（区域内）示例 三台交换机同属于OSPF Area 0区域，SwitchA发布测试网段10.1.1.0&#x2F;24，要求在SwitchB上部署filter-policy import，使得SwitchB的路由表中不允许出现10.1.1.0&#x2F;24这条路由。 配置方法 在SwitchB上定义一个地址前缀列表，“抓取”符合条件的路由。 12[SwitchB] ip ip-prefix huawei index 10 deny 10.1.1.0 24 //拒绝这条[SwitchB] ip ip-prefix huawei index 20 permit 0.0.0.0 0 less-equal 32 //允许所有 在SwitchB的OSPF视图中，部署filter-policy import。 12[SwitchB] ospf[SwitchB-ospf-1] filter-policy ip-prefix huawei import 结果验证 做完上述配置以后，查看SwitchB和SwitchC的路由表如下： 12345678910111213141516171819202122232425262728293031[SwitchB] display ip routing-tableRoute Flags: R - relay, D - download to fib-----------------------------------------------------------------------------Routing Tables: Public Destinations : 6 Routes : 6 Destination/Mask Proto Pre Cost Flags NextHop Interface 127.0.0.0/8 Direct 0 0 D 127.0.0.1 InLoopBack0 127.0.0.1/32 Direct 0 0 D 127.0.0.1 InLoopBack0 192.168.12.0/24 Direct 0 0 D 192.168.12.2 Vlanif12 192.168.12.2/32 Direct 0 0 D 127.0.0.1 Vlanif12 192.168.23.0/24 Direct 0 0 D 192.168.23.1 Vlanif23 192.168.23.1/32 Direct 0 0 D 127.0.0.1 Vlanif23（B的ip路由表中被过滤，但ospf路由表在仍然存在）[SwitchC] display ip routing-tableRoute Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public Destinations : 6 Routes : 6 Destination/Mask Proto Pre Cost Flags NextHop Interface 10.1.1.0/24 OSPF 10 3 D 192.168.23.1 Vlanif23 127.0.0.0/8 Direct 0 0 D 127.0.0.1 InLoopBack0 127.0.0.1/32 Direct 0 0 D 127.0.0.1 InLoopBack0 192.168.12.0/24 OSPF 10 2 D 192.168.23.1 Vlanif23 192.168.23.0/24 Direct 0 0 D 192.168.23.2 Vlanif23 192.168.23.2/32 Direct 0 0 D 127.0.0.1 Vlanif23 通过SwitchB和SwitchC的路由表可以看到，虽然在SwitchB上10.1.1.0&#x2F;24这条路由已经被过滤掉，但是LSA信息会继续传递给SwitchC，所以SwitchC的路由表中继续存在10.1.1.0&#x2F;24这条路由。这样的结果也验证了一开始在注意事项中给出的结论：在链路状态路由协议中，filter-policy只能过滤路由信息，不能过滤LSA信息。 同时SwitchB和SwitchC的LSDB中仍然存在描述10.1.1.0&#x2F;24这条路由的LSA信息，此处可以通过查看SwitchB和SwitchC的LSA信息进行验证。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950[SwitchB] display ospf lsdb router OSPF Process 1 with Router ID 10.10.10.2 Area: 0.0.0.0 Link State Database ……… Type : Router Ls id : 10.10.10.1 Adv rtr : 10.10.10.1 Ls age : 139 Len : 48 Options : E seq# : 80000005 chksum : 0x41c4 Link count: 2 * Link ID: 10.1.1.0 Data : 255.255.255.0 Link Type: StubNet Metric : 1 Priority : Low * Link ID: 192.168.12.2 Data : 192.168.12.1 Link Type: TransNet Metric : 1[SwitchC] display ospf lsdb router OSPF Process 1 with Router ID 10.10.10.3 Area: 0.0.0.0 Link State Database ………… Type : Router Ls id : 10.10.10.1 Adv rtr : 10.10.10.1 Ls age : 81 Len : 48 Options : E seq# : 80000005 chksum : 0x41c4 Link count: 2 * Link ID: 10.1.1.0 Data : 255.255.255.0 Link Type: StubNet Metric : 1 Priority : Low * Link ID: 192.168.12.2 Data : 192.168.12.1 Link Type: TransNet Metric : 1 可以看到SwitchB和SwitchC的LSDB中仍然存在描述10.1.1.0&#x2F;24这条路由的LSA信息。 （2）通过filter-policy对OSPF接收的路由过滤（区域间） 相对于上一个场景，这个场景的区别之处是划分了两个不同的区域，SwitchB和SwitchC之间传递的是Type3 LSA，这个Type3 LSA是SwitchB上根据区域间路由生成的。配置方法跟上一个场景一样，此处不再赘述。 在部署路由过滤策略之前，SwitchB和SwitchC的路由表中都有10.1.1.0&#x2F;24这条路由。 在SwitchB上部署filter-policy import以后，查看SwitchB和SwitchC的路由表，结果如下： 1234567891011121314151617181920212223242526272829[SwitchB] display ip routing-tableRoute Flags: R - relay, D - download to fib-----------------------------------------------------------------------------Routing Tables: Public Destinations : 6 Routes : 6 Destination/Mask Proto Pre Cost Flags NextHop Interface 127.0.0.0/8 Direct 0 0 D 127.0.0.1 InLoopBack0 127.0.0.1/32 Direct 0 0 D 127.0.0.1 InLoopBack0 192.168.12.0/24 Direct 0 0 D 192.168.12.2 Vlanif12 192.168.12.2/32 Direct 0 0 D 127.0.0.1 Vlanif12 192.168.23.0/24 Direct 0 0 D 192.168.23.1 Vlanif23 192.168.23.1/32 Direct 0 0 D 127.0.0.1 Vlanif23[SwitchC] display ip routing-tableRoute Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public Destinations : 5 Routes : 5 Destination/Mask Proto Pre Cost Flags NextHop Interface 127.0.0.0/8 Direct 0 0 D 127.0.0.1 InLoopBack0 127.0.0.1/32 Direct 0 0 D 127.0.0.1 InLoopBack0 192.168.12.0/24 OSPF 10 2 D 192.168.23.1 Vlanif23 192.168.23.0/24 Direct 0 0 D 192.168.23.2 Vlanif23 192.168.23.2/32 Direct 0 0 D 127.0.0.1 Vlanif23 由于现在划分不同的区域，SwitchC上的10.1.1.0&#x2F;24这条路由是由SwitchB根据自身学习的路由产生的Type3-LSA描述的，而SwitchB上的这条路由被过滤掉了，因此不能够再产生描述区域间路由的这个Type3-LSA，因此SwitchC上不会再学习到10.1.1.0&#x2F;24这条路由。 export示例： 在R1上创建四个环回口，IP地址分别为192.168.1.0&#x2F;24，192.168.2.0&#x2F;24、192.168.3.0&#x2F;24、192.168.4.0&#x2F;24，并且全部宣告进OSPF。 引入直连，但是要保证R2和R3上只能收到192.168.1.0这条路由 通过Filter-policy让R2和R3只能收到192.168.1.0这条路由 [R1]ip ip-prefix ly permit 192.168.1.0 24 [R1]ospf [R1-ospf-1]filter-policy ip-prefix ly export 【技术要点】 OSPF通过命令import-route引入外部路由后，为了避免路由环路的产生，通过filter-policy export命令对引入的路由在发布时进行过滤，只将满足条件的外部路由转换为Type5 LSA（AS-external-LSA）并发布出去。 当网络中同时部署了IS-IS和其他路由协议时，如果已经在边界设备上引入其他路由协议的路由，缺省情况下，该设备将把引入的全部外部路由发布给IS-IS邻居。如果只希望将引入的部分外部路由发布给邻居，可以使用****filter-policy export****命令实现。 Route-PolicyRoute-Policy是一个策略工具，用于过滤路由信息，以及为过滤后的路由信息设置路由属性。 一个Route-Policy由一个或多个节点（Node）构成，每个节点都可以是一系列条件语句（匹配条件）以及执行语句（执行动作）的集合，这些集合按照编号从小到大的顺序排列。 示例： 双点双向路由重发布 解决次优路径： 环路问题： 解决环路： 策略路由若设备部署了PBR，则被匹配的报文优先根据PBR的策略进行转发，即PBR策略的优先级高于传统路由表。 策略路由PBR（Policy-Based Routing）是一种依据用户制定的策略进行路由选择的机制，分为本地策略路由、接口策略路由和智能策略路由SPR（Smart Policy Routing）。 策略路由与路由策略（Routing Policy）存在以下不同： 策略路由的操作对象是数据包，在路由表已经产生的情况下，不按照路由表进行转发，而是根据需要，依照某种策略改变数据包转发路径。 路由策略的操作对象是路由信息。路由策略主要实现了路由过滤和路由属性设置等功能，它通过改变路由属性（包括可达性）来改变网络流量所经过的路径。 语法： MQCMQC（Modular QoS Command-Line Interface，模块化QoS命令行）是指通过将具有某类共同特征的数据流划分为一类，并为同一类数据流提供相同的服务，也可以对不同类的数据流提供不同的服务。 MQC包含三个要素：流分类（traffic classifier）、流行为（traffic behavior）和流策略（traffic policy）。MQC的流行为支持重定向报文，因此可以使用MQC实现IP单播策略路由。 流分类流分类用来定义一组流量匹配规则，以对报文进行分类。流分类规则: 流分类中各规则之间的关系分为：and或or，缺省情况下的关系为or。 and：当流分类中包含ACL规则时，报文必须匹配其中一条ACL规则以及所有非ACL规则才属于该类；当流分类中没有ACL规则时，报文必须匹配所有非ACL规则才属于该类。 or：报文只要匹配了流分类中的一个规则，设备就认为报文属于此类。 流行为 流策略绑定流分类与流行为 案例 Traffic-Filter使用Traffic-Filter过滤流量可以灵活地选择部署位置，在流量进入设备或者离开设备的接口上执行过滤动作，双向访问的业务禁止其中一个方向即可实现阻断业务的需求。 实验手册实验 设备互联方式、互联地址如图所示，所有设备均创建Loopback0，其IP地址为10.0.x.x&#x2F;32，其中x为设备编号，R1、R2、R3在互联接口、Loopback0接口上激活OSPF。 R3、R4属于IS-IS Area 49.0001，两者都是Level-1路由器，R3、R4的系统ID采用0000.0000.000x格式，其中x为设备编号。 R1上存在三个业务网段A、B、C（使用Loopback1、2、3接口路由模拟），在R1上将直连路由引入到OSPF，但是OSPF域内的路由器上不需要C业务的路由，为此在R1上引入直连路由时通过Route-Policy过滤引入的路由。 R2上不需要A业务网段的路由，但是R3上需要A、B业务网段的路由，为此在R2上配置Filter-Policy对OSPF接收的路由进行过滤。 IS-IS域内的路由器需要访问A业务，因此需要在R3上执行路由重分发，将OSPF路由引入到IS-IS，但是IS-IS域内的路由器不需要访问B业务，为此在R1上引入直连路由时为A、B业务网段路由打上不同的路由标记，R3上执行重分发时根据路由标记过滤B业务网段路由。 任务思路 设备基础IP地址配置。 配置R1、R2、R3之间的OSPF，在互联接口、Loopback0接口上激活OSPF。在R3、R4之间配置IS-IS。 在R1上将直连路由引入到OSPF中，同时配置路由策略不引入C业务网段的路由，将A、B业务网段路由分别打上路由标记10、20。 在R2上配置Filter-Policy对接收的OSPF路由进行过滤，只接收B业务网段的路由。 在R3上将OSPF路由引入到IS-IS中，通过Route-Policy匹配路由标记，只引入A业务网段的OSPF外部路由。 1.配置ip#配置R1的GE0&#x2F;0&#x2F;2、Loopback0接口IP地址 [R1]interface GigabitEthernet0&#x2F;0&#x2F;2 [R1-GigabitEthernet0&#x2F;0&#x2F;2] ip address 10.0.12.1 255.255.255.0 [R1-GigabitEthernet0&#x2F;0&#x2F;2] quit [R1]interface LoopBack0 [R1-LoopBack0] ip address 10.0.1.1 255.255.255.255 [R1-LoopBack0] quit #在R1上创建多个环回口，用于模拟业务网段A、B、C [R1]interface LoopBack1 [R1-LoopBack1] ip address 172.16.1.1 255.255.255.0 [R1-LoopBack1] quit [R1]interface LoopBack2 [R1-LoopBack2] ip address 172.16.2.1 255.255.255.0 [R1-LoopBack2] quit [R1]interface LoopBack3 [R1-LoopBack3] ip address 172.16.3.1 255.255.255.0 [R1-LoopBack3] quit #配置R2的GE0&#x2F;0&#x2F;2、GE0&#x2F;0&#x2F;3、Loopback0接口IP地址 [R2]interface LoopBack0 [R2-LoopBack0] ip address 10.0.2.2 255.255.255.255 [R2-LoopBack0] quit [R2]interface GigabitEthernet0&#x2F;0&#x2F;2 [R2-GigabitEthernet0&#x2F;0&#x2F;2] ip address 10.0.23.2 255.255.255.0 [R2-GigabitEthernet0&#x2F;0&#x2F;2] quit [R2]interface GigabitEthernet0&#x2F;0&#x2F;3 [R2-GigabitEthernet0&#x2F;0&#x2F;3] ip address 10.0.12.2 255.255.255.0 [R2-GigabitEthernet0&#x2F;0&#x2F;3] quit #配置R3的GE0&#x2F;0&#x2F;2、GE0&#x2F;0&#x2F;3、Loopback0接口IP地址 [R3]interface LoopBack0 [R3-LoopBack0] ip address 10.0.3.3 255.255.255.255 [R3-LoopBack0] quit [R3]interface GigabitEthernet0&#x2F;0&#x2F;2 [R3-GigabitEthernet0&#x2F;0&#x2F;2] ip address 10.0.34.3 255.255.255.0 [R3-GigabitEthernet0&#x2F;0&#x2F;2] quit [R3]interface GigabitEthernet0&#x2F;0&#x2F;3 [R3-GigabitEthernet0&#x2F;0&#x2F;3] ip address 10.0.23.3 255.255.255.0 [R3-GigabitEthernet0&#x2F;0&#x2F;3] quit #配置R4的GE0&#x2F;0&#x2F;3、Loopback0接口IP地址 [R4]interface GigabitEthernet0&#x2F;0&#x2F;3 [R4-GigabitEthernet0&#x2F;0&#x2F;3] ip address 10.0.34.4 255.255.255.0 [R4-GigabitEthernet0&#x2F;0&#x2F;3] quit [R4]interface LoopBack0 [R4-LoopBack0] ip address 10.0.4.4 255.255.255.255 [R4-LoopBack0] quit #在R2、R4上检查IP地址连通性 配置ospf和isis#配置R1 [R1]ospf 1 router-id 10.0.1.1 [R1-ospf-1] area 0 [R1-ospf-1-area-0.0.0.0] network 10.0.1.1 0.0.0.0 [R1-ospf-1-area-0.0.0.0] network 10.0.12.1 0.0.0.0 [R1-ospf-1-area-0.0.0.0] quit [R1-ospf-1] quit #配置R2 [R2]ospf 1 router-id 10.0.2.2 [R2-ospf-1] area 0.0.0.0 [R2-ospf-1-area-0.0.0.0] network 10.0.2.2 0.0.0.0 [R2-ospf-1-area-0.0.0.0] network 10.0.12.2 0.0.0.0 [R2-ospf-1-area-0.0.0.0] network 10.0.23.2 0.0.0.0 [R2-ospf-1-area-0.0.0.0] quit [R2-ospf-1] quit #配置R3 [R3]ospf 1 router-id 10.0.3.3 [R3-ospf-1] area 0.0.0.0 [R3-ospf-1-area-0.0.0.0] network 10.0.3.3 0.0.0.0 [R3-ospf-1-area-0.0.0.0] network 10.0.23.3 0.0.0.0 [R3-ospf-1-area-0.0.0.0] quit [R3-ospf-1] quit #在R2上检查OSPF邻居的概要信息 R3、R4上配置IS-IS，区域为49.0001，系统ID采用0000.0000.000x格式（x为设备编号），两台设备都为Level-1路由器，在互联接口、R4的Loopback0接口上激活IS-IS。 #配置R3 [R3]isis 1 [R3-isis-1] is-level level-1 [R3-isis-1] network-entity 49.0001.0000.0000.0003.00 [R3-isis-1] quit [R3]interface GigabitEthernet0&#x2F;0&#x2F;2 [R3-GigabitEthernet0&#x2F;0&#x2F;2] isis enable 1 [R3-GigabitEthernet0&#x2F;0&#x2F;2] quit #配置R4 [R4]isis 1 [R4-isis-1] is-level level-1 [R4-isis-1] network-entity 49.0001.0000.0000.0004.00 [R4-isis-1] quit [R4]interface GigabitEthernet0&#x2F;0&#x2F;3 [R4-GigabitEthernet0&#x2F;0&#x2F;3] isis enable 1 [R4-GigabitEthernet0&#x2F;0&#x2F;3] quit [R4]interface LoopBack 0 [R4-LoopBack0] isis enable 1 [R4-LoopBack0] quit #在R3上检查IS-IS邻居状态 在R1上引入直连路由在R1上将直连路由引入到OSPF中，同时配置路由策略过滤C业务网段，将A、B业务网段路由分别打上路由标记10、20。 #创建IP前缀列表1，匹配Loopback1接口路由（A业务网段） [R1]ip ip-prefix 1 index 10 permit 172.16.1.0 24 greater-equal 24 less-equal 24 #创建IP前缀列表2，匹配Loopback2接口路由（B业务网段） [R1]ip ip-prefix 2 index 10 permit 172.16.2.0 24 greater-equal 24 less-equal 24 #创建Route-Policy hcip，并创建节点10、20，分别调用IP前缀列表1、2，打上路由标记 [R1]route-policy hcip permit node 10 [R1-route-policy] if-match ip-prefix 1 [R1-route-policy] apply tag 10 [R1-route-policy] quit [R1]route-policy hcip permit node 20 [R1-route-policy] if-match ip-prefix 2 [R1-route-policy] apply tag 20 [R1-route-policy] quit #在R1的OSPF中引入直连路由，调用Route-Policy hcip [R1]ospf 1 [R1-ospf-1] import-route direct route-policy hcip r1上查看ospf lsdb，Loopback1、2接口路由已经被成功引入OSPF中。 #在R1上查看OSPF LSDB中AS-external LSA 172.16.1.0的相关信息 [R1]display ospf lsdb ase 172.16.1.0 ​ OSPF Process 1 with Router ID 10.0.1.1 ​ Link State Database Type : External Ls id : 172.16.1.0 Adv rtr : 10.0.1.1 Ls age : 165 Len : 36 Options : E seq# : 80000001 chksum : 0xa954 Net mask : 255.255.255.0 TOS 0 Metric: 1 E type : 2 Forwarding Address : 0.0.0.0 Tag : 10 Priority : Low 外部路由172.16.1.0&#x2F;24已经被打上Tag 10。 #在R1上查看OSPF LSDB中AS-external LSA 172.16.2.0的相关信息 [R1]display ospf lsdb ase 172.16.2.0 ​ OSPF Process 1 with Router ID 10.0.1.1 ​ Link State Database Type : External Ls id : 172.16.2.0 Adv rtr : 10.0.1.1 Ls age : 355 Len : 36 Options : E seq# : 80000001 chksum : 0x539f Net mask : 255.255.255.0 TOS 0 Metric: 1 E type : 2 Forwarding Address : 0.0.0.0 Tag : 20 Priority : Low 外部路由172.16.2.0&#x2F;24已经被打上Tag 20。 在R2上配置过滤策略在R2上配置Filter-Policy对接收的OSPF路由进行过滤，只接收B业务网段的路由。 #查看配置Filter-Policy前的OSPF路由表 display ospf routing #查看配置Filter-Policy前的IP路由表中的OSPF路由 display ip routing-table protocol ospf 在OSPF路由表以及IP路由表中都可以看到OSPF外部路由172.16.1.0&#x2F;24、172.16.2.0&#x2F;24。 #配置基础ACL [R2]acl number 2000 [R2-acl-basic-2000] rule 5 deny source 172.16.1.0 0.0.0.255 [R2-acl-basic-2000] rule 10 permit #在OSPF中部署入方向的Filter-Policy，调用ACL 2000 [R2]ospf 1 [R2-ospf-1] filter-policy 2000 import #查看配置Filter-Policy后的OSPF路由表 dis ospf routing 发现两条外部路由都还存在 #查看配置Filter-Policy后的IP路由表中的OSPF路由 display ip routing-table protocol ospf 在IP路由表中路由172.16.2.0&#x2F;24已经不存在，但是在OSPF路由表中依旧存在。这验证了对于OSPF，Filter-Policy只是限制路由加入IP路由表，不影响本地的LSDB以及LSA的传递。 #在R3上查看IP路由表中的OSPF路由 display ip routing-table protocol ospf R3的IP路由表中OSPF外部路由172.16.1.0&#x2F;24、172.16.2.0&#x2F;24依旧存在。 在R3上将OSPF路由引入到IS-IS在R3上将OSPF路由引入到IS-IS中，通过Route-Policy匹配路由标记，只引入A业务网段的OSPF外部路由。 #创建Route-Policy hcip [R3]route-policy hcip permit node 10 [R3-route-policy] if-match tag 10 [R3-route-policy] quit #在IS-IS中引入OSPF路由，调用Route-Policy hcip只引入A业务网段的OSPF外部路由 [R3]isis 1 [R3-isis-1] import-route ospf 1 level-1 route-policy hcip （注意指定level） #查看R3的IS-IS路由表 display isis route Level-1的路由重分发表中只有172.16.1.0&#x2F;24。","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"路由策略","slug":"路由策略","permalink":"http://example.com/tags/%E8%B7%AF%E7%94%B1%E7%AD%96%E7%95%A5/"}]},{"title":"nat实验","slug":"nat实验","date":"2023-11-25T12:41:12.000Z","updated":"2023-11-25T13:54:42.229Z","comments":true,"path":"2023/11/25/nat实验/","permalink":"http://example.com/2023/11/25/nat%E5%AE%9E%E9%AA%8C/","excerpt":"静态nat静态NAT实现了私有地址和公有地址的一对一映射。如果希望一台主机优先使用某个关联地址，或者想要外部网络使用一个指定的公网地址访问内部服务器时，可以使用静态NAT。但是在大型网络中，这种一对一的IP地址映射无法缓解公用地址短缺的问题。","text":"静态nat静态NAT实现了私有地址和公有地址的一对一映射。如果希望一台主机优先使用某个关联地址，或者想要外部网络使用一个指定的公网地址访问内部服务器时，可以使用静态NAT。但是在大型网络中，这种一对一的IP地址映射无法缓解公用地址短缺的问题。 静态NAT实现了私有地址和共有地址一对一的映射（一个私有地址对应一个共有地址），并没有做到缓解地址短缺的问题，只是做到了地址转换。 一个公网地址只会分配给唯一且固定的内网地址 如图配置ip地址和网关 r1上配置静态nat（注意是在公网的接口上，出接口） 注意配置一条静态路由，不然没有路由的下一跳会被丢弃 在r1上查看nat映射关系：dis nat static 验证一下： 发现去往2.2.2.2的源地址变为2.2.2.3，说明nat完成转换。 静态nat两种配置方式： 1.接口下（上述实验采用这种方式）：进入到连接外网路由器的出接口下，然后在接口视图下配置nat映射关系 2.全局：在全局视图下，配置好nat映射关系，再进入到出接口，执行：nat static enable 动态nat动态NAT通过使用地址池来实现。 如上图，当内部主机A和主机B需要与公网中的目的主机通信时，网关RTA会从配置的公网地址池中选择一个未使用的公网地址与之做映射。每台主机都会分配到地址池中的一个唯一地址。当不需要此连接时，对应的地址映射将会被删除，公网地址也会被恢复到地址池中待用。当网关收到回复报文后，会根据之前的映射再次进行转换之后转发给对应主机。 注意： 动态NAT实际上实现的还是私有地址和公有地址一对一的关系，但是共有地址不再绑定给特定的内网地址。实现了一定程度的缓解地址短缺问题。动态NAT地址池中的地址用尽以后，只能等待被占用的公用IP被释放后，其他主机才能使用它来访问公网。 动态NAT转换流程：1）路由器上配置一个内部地址池（公司内部所有主机用到的私有IP）动态映射一个外部地址池（所购买的公有IP）。2）当有一个内网主机访问外网时，路由器首先查看NAT地址转换表；3）若无，则再查看是否配置了动态NAT映射，若配置，则将IP包头中的源IP与内部地址池进行匹配，若有匹配项，则将该内网IP从内部地址池中取出，同时取出外部地址池中的一个IP地址，动态形成NAT地址转换表。注意，外部地址池的公网IP地址取出后，外部地址池中将没有该公网IP了。4）默认当该主机24小时没有联系外网时，该动态NAT条目会自动消失，所被取出的公私有地址重新回到地址池中。 ip如图，pc的网关192.168.1.254 r1上配置默认路由，ip route-static 0.0.0.0 0 172.16.1.2 r1上配置动态地址池： 地址池验证： 配置acl策略： 在r1的外网出接口上调用： 验证： 其中源IP为3、4、5不定，说明是在动态分配外网地址。动态NAT配置完成。 在动态NAT实验中，最后利用PC1测试连通性时，间歇性会丢包 可能的原因：ping的时候默认按地址池中可用地址顺序从1~254进行地址转换，放大nat地址池可解决。 NAPT 如上图，RTA收到一个私网主机发送的报文，源IP地址是192.168.1.1，源端口号是1025，目的IP地址是100.1.1.1，目的端口是80。RTA会从配置的公网地址池中选择一个空闲的公网IP地址和端口号，并建立相应的NAPT表项。这些NAPT表项指定了报文的私网IP地址和端口号与公网IP地址和端口号的映射关系。之后，RTA将报文的源IP地址和端口号转换成公网地址200.10.10.1和端口号2843，并转发报文到公网。当网关RTA收到回复报文后，会根据之前的映射表再次进行转换之后转发给主机A。主机B同理。 注意： NAPT技术允许多个内部地址映射到同一个公有地址的不同端口。NAPT实现了私有地址对共有地址多对一 相当于一种特殊的动态nat 1、端口NAT和动态NAT的配置过程基本一致，只是在应用到接口时，配置命令少no-pat2、端口NAT一个地址可以给多个源地址转换，不是单对单的转换，所以节省了nat地址！3、端口NAT实际应用较多，静态NAT和动态NAT因为地址不能节约，所以实际应用少 Easy IP Easy IP本质上是NAPT（所以原理与NAPT大致相似）由于网关设备出接口IP地址为公网地址，所以可以利用该出接口地址来作为地址转换的公有地址。Easy IP适用于小规模局域网中的主机访问Internet的场景。小规模局域网通常部署在小型的网吧或者办公室中，这些地方内部主机不多，出接口可以通过拨号方式获取一个临时公网IP地址。Easy IP可以实现内部主机使用这个临时公网IP地址访问Internet。 Easy IP适用于小规模局域网中的主机访问Internet的场景。小规模局域网通常部署在小型的网吧或者办公室中，这些地方内部主机不多，出接口可以通过拨号方式获取一个临时公网IP地址。Easy IP可以实现内部主机使用这个临时公网IP地址访问Internet。 Easy IP的配置：1.创建ACL：acl 2000 2.允许1.0的数据进行转换：rule 5 permit source 192.168.1.0 0 .0.0.255 3.进入公网出接口 4.应用acl：nat outbound 2000 （相较于napt少了地址池） 验证： 源地址为出接口地址172.16.1.1，只是端口不同","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"nat","slug":"nat","permalink":"http://example.com/tags/nat/"}]},{"title":"DHCP基础配置","slug":"DHCP基础配置","date":"2023-11-25T06:34:51.000Z","updated":"2023-12-03T13:57:57.899Z","comments":true,"path":"2023/11/25/DHCP基础配置/","permalink":"http://example.com/2023/11/25/DHCP%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/","excerpt":"DHCP是一种终端自动配置协议，客户端通过DHCP协议可获取一个合法的动态IP地址。","text":"DHCP是一种终端自动配置协议，客户端通过DHCP协议可获取一个合法的动态IP地址。 概述随着网络规模的扩大和网络复杂度的提高，网络配置越来越复杂，经常出现计算机位置变化（如便携机或无线网络）和计算机数量超过可分配的IP地址的情况。动态主机配置协议DHCP（Dynamic Host Configuration Protocol）就是为满足这些需求而发展起来的。DHCP协议以服务器&#x2F;客户端（Server&#x2F;Client）模式工作，DHCP客户端向DHCP服务器动态地请求配置信息，DHCP服务器可以很方便地为客户端动态发送配置信息。 DHCP服务器DHCP Server即DHCP服务器，负责客户端IP地址的分配。客户端向服务器发送配置申请报文（包括IP地址、子网掩码、缺省网关等参数），服务器根据策略返回携带相应配置信息的报文，请求报文和回应报文都采用UDP进行封装。 DHCP中继DHCP Relay即DHCP中继，它是为解决服务器和客户端不在同一个网段而提出来的，它提供了对DHCP广播报文的透明传输功能，能够把DHCP客户端的广播报文透明地传送到其它网段的DHCP服务器上，同样能够把DHCP服务器端的广播报文透明地传送到其它网段的DHCP客户端。 基本命令基本命令pc： ipconfig &#x2F;release—释放ip地址ipconfig &#x2F;renew—重新获取ip 将DHCP转化为固定的地址： ip pool 名字—进入地址池staic-bind ip-address 要分配的固定ip mac-address 目标的mac地址—添加固定地址到pc端lease day &lt;0-999&gt;—修改租期（不建议修改） 将部分ip地址排除地址池，用于静态路由配置 ip pool 名字—进入地址池excluded-ip-address 192.168.1.1 192.168.1.50—把1.1到1.50的地址排除出地址池不使用 重置与查看地址池 reset ip pool name 名字—重置ip配置dis ip pool name 名字—查看指定地址池dis ip pool—查看地址池dis ip pool 名字 used—查看使用情况 配置global全局模式 先配置物理接口 interface 接口号—进入物理接口ip address ip地址—配置物理接口IP DHCP enable—开启DHCP功能ip pool 名字—创建一个ip地址池（有几个网段就建几个池）network 192.168.1.0 mask 24—给ip地址池添加一个网段gateway-list 192.168.1.1—设置192.168.1.1这个ip地址为网关dns-list 8.8.8.8 192.168.1.1—配置DNS为8.8.8.8（前面的优先）interface ip地址—进入物理接口dhcp select global—给接口配置全局模式 将pc更改为DHCP获取IP方式，就可以自动分配ip地址了 interface配置方式基于接口的DHCP的配置方式：配置物理接口的ip网关： interface 接口号—进入接口ip address IP网关—配置网关 dhcp enable—开启服务dhcp select interface—选择interface这个配置方式dhcp server dns-list 8.8.8.8-–配置DNS服务 注意：这种配置方式分配的ip地址网段，是该接口所在的网段的ip地址，网关就是这个接口的ip地址 relay（中继）配置方式 用于在服务器上做配置，路由器进行转发，减少负载量，可以对整个网络体系进行配置首先要实现服务器与个网段互通在服务器的配置： 服务器物理接口配置ipip route-static 0.0.0.0 0 下一跳的ip—服务器配置缺省路由保证互通dhcp enable—在服务器开启dhcp功能ip pool 名字—创建ip地址池（需要几个网段就创建几个地址池）network 192.168.1.0 mask 24—创建网段gateway-list 192.168.1.1—创建网关dns-list 8.8.8.8—创建dnsinterface 物理接口—进入物理接口dhcp select global—选择全局配置模式 在路由器&#x2F;核心交换机上的配置 dhcp enable—开启dhcp功能interface 接口号—进入接口 （需要几个网段就分别进入配置）dhcp select relay—开启中继模式dhcp relay server-ip 服务器物理ip—选择中继分配的接口 基本实验 R1和R3模拟客户端，作为DHCP Client。 R2作为DHCP Server为R1和R3分配IP地址。 动态主机配置协议DHCP（Dynamic Host Configuration Protocol）是一种用于集中对用户IP地址进行动态管理和配置的技术。即使规模较小的网络，通过DHCP也可以使后续增加网络设备变得简单快捷。 DHCP协议由RFC 2131定义，采用客户端&#x2F;服务器通信模式，由客户端（DHCP Client）向服务器（DHCP Server）提出配置申请，服务器返回为客户端分配的配置信息。 DHCP可以提供两种地址分配机制，网络管理员可以根据网络需求为不同的主机选择不同的分配策略。 • 动态分配机制：通过DHCP为主机分配一个有使用期限（这个使用期限通常叫做租期）的IP地址。这种分配机制适用于主机需要临时接入网络或者空闲地址数小于网络主机总数且主机不需要永久连接网络的场景。 • 静态分配机制：网络管理员通过DHCP为指定的主机分配固定的IP地址。相比手工静态配置IP地址，通过DHCP方式静态分配机制避免人工配置发生错误，方便管理员统一维护管理。 配置R2 ip：略 开启DHCP功能[R1]dhcp enable Info: The operation may take a few seconds. Please wait for a moment.done. dhcp enable命令是DHCP相关功能的总开关，DHCP Client和DHCP Server等功能都要在执行dhcp enable命令使能DHCP功能后才会生效。 [R2]dhcp enable Info: The operation may take a few seconds. Please wait for a moment.done. [R3]dhcp enable Info: The operation may take a few seconds. Please wait for a moment.done. 配置地址池# 配置R2的GigabitEthernet 0&#x2F;0&#x2F;0的接口地址池，为R1分配IP地址 [R2]interface GigabitEthernet 0&#x2F;0&#x2F;0 [R2-GigabitEthernet0&#x2F;0&#x2F;0]dhcp select interface dhcp select interface命令用来开启接口采用接口地址池的DHCP Server功能。若不执行此命令，则无法配置接口地址池的相关参数。 [R2-GigabitEthernet0&#x2F;0&#x2F;0]dhcp server dns-list 10.0.12.2 dhcp server dns-list命令用来指定接口地址池下的DNS服务器地址。最多可以配置8个DNS Server的IP地址，用空格分隔。 # 配置全局地址池 [R2]ip pool GlobalPool Info: It’s successful to create an IP address pool. 创建名为G**lobalPool的地址池 [R2-ip-pool-GlobalPool]network 10.0.23.0 mask 24 network命令用来配置全局地址池下可分配的网段地址。 [R2-ip-pool-GlobalPool]dns-list 10.0.23.2 [R2-ip-pool-GlobalPool]gateway-list 10.0.23.2 gateway-list命令用来为DHCP Client配置出口网关地址。R3在获取地址之后，会生成一条默认路由，下一跳地址为10.0.23.2。 [R2-ip-pool-GlobalPool]lease day 2 hour 2 lease命令用来配置地址池下的地址租期。当租约被设置为unlimited时，代表租期无限制。缺省情况下，IP地址租期是1天。 [R2-ip-pool-GlobalPool]static-bind ip-address 10.0.23.3 mac-address 00e0-fc6f-6d1f static-bind命令用来将DHCP Server全局地址池下的IP地址与MAC地址进行绑定。00e0-fc6f-6d1f为当前实验环境下R3的GigabitEthernet0&#x2F;0&#x2F;0接口的MAC地址，可以在R3上通过命令“display interface GigabitEthernet0&#x2F;0&#x2F;0”来查看接口的MAC地址。配置完这条命令之后，R3会获得固定的IP–10.0.23.3。 [R2-ip-pool-GlobalPool]quit #开启R2 GigabitEthernet 0&#x2F;0&#x2F;1接口的DHCP Server功能，为R3分配IP地址 [R2]interface GigabitEthernet 0&#x2F;0&#x2F;1 [R2-GigabitEthernet0&#x2F;0&#x2F;1]dhcp select global dhcp select global命令用来开启接口采用全局地址池的DHCP Server功能。当接口收到DHCP Client请求之后，会到所有全局地址池中查找对应的地址池，然后分配可用的地址给DHCP Client。 配置DHCP Client[R1]interface GigabitEthernet 0&#x2F;0&#x2F;0 [R1-GigabitEthernet0&#x2F;0&#x2F;0] ip address dhcp-alloc [R3]interface GigabitEthernet 0&#x2F;0&#x2F;0 [R3-GigabitEthernet0&#x2F;0&#x2F;0] ip address dhcp-alloc 结果验证查看R1和R3的地址及路由等信息[R1]display ip interface brief Interface IP Address&#x2F;Mask Physical Protocol GigabitEthernet0&#x2F;0&#x2F;0 10.0.12.254&#x2F;24 up up 仅保留关键信息，可以看到R1已经获取到了IP地址**。 [R1]display dns server Type: D:Dynamic S:Static No. Type IP Address 1 D 10.0.12.2 仅保留关键信息，可以看到R1已经获取到了DNS地址**。 [R1]display ip routing-table Destination&#x2F;Mask Proto Pre Cost Flags NextHop Interface 0.0.0.0&#x2F;0 Unr 60 0 D 10.0.12.2 GigabitEthernet0&#x2F;0&#x2F;0 仅保留关键信息，可以看到R1已经获取到了默认路由**。 [R3]display ip interface brief Interface IP Address&#x2F;Mask Physical Protocol GigabitEthernet0&#x2F;0&#x2F;0 10.0.23.3&#x2F;24 up up 仅保留关键信息，可以看到R3已经获取到了固定的IP地址**。 [R3]display dns server Type: D:Dynamic S:Static No. Type IP Address 1 D 2.23.0.10 仅保留关键信息，可以看到R3已经获取到了DNS地址**。 [R3]display ip routing-table Route Flags: R - relay, D - download to fib -—————————————————————————– Routing Tables: Public ​ Destinations : 8 Routes : 8 Destination&#x2F;Mask Proto Pre Cost Flags NextHop Interface 0.0.0.0&#x2F;0 Unr 60 0 D 10.0.23.2 GigabitEthernet0&#x2F;0&#x2F;0 仅保留关键信息，可以看到R3已经获取到了默认路由**。 2、查看R2上的地址分配情况[R2]display ip pool name GlobalPool Pool-name : GlobalPool Pool-No : 1 Lease : 2 Days 2 Hours 0 Minutes Domain-name : - DNS-server0 : 10.0.23.2 NBNS-server0 : - Netbios-type : - Position : Local Status : Unlocked Gateway-0 : 10.0.23.2 Mask : 255.255.255.0 VPN instance : – -—————————————————————————- ​ Start End Total Used Idle(Expired) Conflict Disable -—————————————————————————- ​ 10.0.23.1 10.0.23.254 253 1 252(0) 0 0 -—————————————————————————- display ip pool命令用来查看已配置的IP地址池信息。包括地址池的名称、租期、锁定状态、地址池中IP地址的状态等。 [R2]display ip pool interface GigabitEthernet0&#x2F;0&#x2F;1 Pool-name : GigabitEthernet****0&#x2F;0&#x2F;1 Pool-No : 0 Lease : 1 Days 0 Hours 0 Minutes Domain-name : - DNS-server0 : 10.0.12.2 NBNS-server0 : - Netbios-type : - Position : Interface Status : Unlocked Gateway-0 : 10.0.12.2 Mask : 255.255.255.0 VPN instance : – -—————————————————————————- ​ Start End Total Used Idle(Expired) Conflict Disable -—————————————————————————- ​ 10.0.12.1 10.0.12.254 253 1 252(0) 0 0 -—————————————————————————- 当配置接口地址池时，地址池的名称为接口的名称。分配的网关地址为该接口的IP地址，且无法修改。 中继实验交换机4上有多个vlan，交换机1模拟dhcp服务器实现为多个vlan分配地址，交换机3作为dhcp终极连接服务器和客户端 实验步骤创建VLAN[S1]vlan 40 [S3]vlan batch 10 20 30 40 [S4]vlan batch 10 20 30 配置接口放通相应的VLAN[S4]interface GigabitEthernet0&#x2F;0&#x2F;3 [S4-GigabitEthernet0&#x2F;0&#x2F;3] port link-type trunk [S4-GigabitEthernet0&#x2F;0&#x2F;3] port trunk allow-pass vlan 10 20 30 [S4-GigabitEthernet0&#x2F;0&#x2F;3] quit [S3]interface GigabitEthernet0&#x2F;0&#x2F;1 [S3-GigabitEthernet0&#x2F;0&#x2F;1] port link-type access [S3-GigabitEthernet0&#x2F;0&#x2F;1] port default vlan 40 [S3-GigabitEthernet0&#x2F;0&#x2F;1] quit [S3]interface GigabitEthernet0&#x2F;0&#x2F;3 [S3-GigabitEthernet0&#x2F;0&#x2F;3] port link-type trunk [S3-GigabitEthernet0&#x2F;0&#x2F;3] port trunk allow-pass vlan 10 20 30 [S3-GigabitEthernet0&#x2F;0&#x2F;3] quit [S1]interface GigabitEthernet0&#x2F;0&#x2F;12 [S1-GigabitEthernet0&#x2F;0&#x2F;12] port link-type access [S1-GigabitEthernet0&#x2F;0&#x2F;12] port default vlan 40 [S1-GigabitEthernet0&#x2F;0&#x2F;12] quit 交换机4和交换机3之间因为放通多个vlan，所以使用trunk口，交换机3和交换机1之间只有一个vlan40，所以配置access口，pvid&#x3D;40 VLANIF配置[S4]interface Vlanif 10 [S4-Vlanif10] quit [S4]interface Vlanif 20 [S4-Vlanif20] quit [S4]interface Vlanif 30 [S4-Vlanif30] quit [S3]interface Vlanif 10 [S3-Vlanif10] ip address 10.0.10.3 24 [S3-Vlanif10] quit [S3]interface Vlanif 20 [S3-Vlanif20] ip address 10.0.20.3 24 [S3-Vlanif20] quit [S3]interface Vlanif 30 [S3-Vlanif30] ip address 10.0.30.3 24 [S3-Vlanif30] quit [S3]interface Vlanif 40 [S3-Vlanif40] ip address 10.0.40.3 24 [S3-Vlanif40] quit [S1]interface Vlanif 40 [S1-Vlanif40] ip address 10.0.40.1 24 [S1-Vlanif40] quit 检查一下交换机3和1之间的连通性 （开启DHCP服务，配置全局地址池，同时为S4上的VLANIF30分配静态IP地址。）： 开启DHCP服务[S1]dhcp enable 创建地址池VLAN10，用于给S4的VLANIF10分配地址[S1]ip pool vlan10 &#x2F;&#x2F;创建地址池名为vlan10 [S1-ip-pool-vlan10] gateway-list 10.0.10.3 &#x2F;&#x2F;网关是中继上的vlanif 10 [S1-ip-pool-vlan10] network 10.0.10.0 mask 255.255.255.0 &#x2F;&#x2F;设置分配ip范围是10.0.10.1-10.0.10.255 [S1-ip-pool-vlan10] dns-list 10.0.10.3 [S1-ip-pool-vlan10] quit 创建地址池VLAN20，用于给S4的VLANIF20分配地址[S1]ip pool vlan20 [S1-ip-pool-vlan20] gateway-list 10.0.20.3 [S1-ip-pool-vlan20] network 10.0.20.0 mask 255.255.255.0 [S1-ip-pool-vlan20] dns-list 10.0.20.3 [S1-ip-pool-vlan20] quit 创建地址池VLAN30，用于给S4的VLANIF30分配地址[S1]ip pool vlan30 [S1-ip-pool-vlan30] gateway-list 10.0.30.3 [S1-ip-pool-vlan30] network 10.0.30.0 mask 255.255.255.0 [S1-ip-pool-vlan30] dns-list 10.0.30.3 [S1-ip-pool-vlan30] quit 查看s4的vlanif30的mac为了实现给s4的vlanif30口静态绑定一个指定的ip地址，我们需要先查看一下mac 在S1上为S4的VLANIF30配置静态地址分配 给s4的vlanif口静态分配ip：10.0.30.2 在VLANIF40接口下使能DHCP Server[S1]interface Vlanif 40 [S1-Vlanif40] dhcp select global &#x2F;&#x2F;全局的使能 查看IP地址池配置情况[S1]display ip pool name vlan30 地址池vlan30已经存在一个“Used”地址，该地址为静态分配的地址。 配置前往用户网段的路由[S1]ip route-static 10.0.10.0 24 10.0.40.3 [S1]ip route-static 10.0.20.0 24 10.0.40.3 [S1]ip route-static 10.0.30.0 24 10.0.40.3 （或者配置缺省路由） 保证连通性 在S3上完成DHCP Relay相关配置 开启DHCP服务[S3]dhcp enable 在接口上配置DHCP Relay，指定DHCP Server[S3]interface Vlanif10 [S3-Vlanif10] dhcp select relay [S3-Vlanif10] dhcp relay server-ip 10.0.40.1 [S3-Vlanif10] quit [S3]interface Vlanif20 [S3-Vlanif20] dhcp select relay [S3-Vlanif20] dhcp relay server-ip 10.0.40.1 [S3-Vlanif20] quit [S3]interface Vlanif30 [S3-Vlanif30] dhcp select relay [S3-Vlanif30] dhcp relay server-ip 10.0.40.1 [S3-Vlanif30] quit 查看relay配置 DHCP Client配置在S4上配置VLANIF10、20、30接口通过DHCP获取IP地址 开启DHCP服务[S4]dhcp enable 开启接口通过DHCP获取地址[S4]interface Vlanif10 [S4-Vlanif10] ip address dhcp-alloc [S4-Vlanif10] quit [S4]interface Vlanif20 [S4-Vlanif20] ip address dhcp-alloc [S4-Vlanif20] quit [S4]interface Vlanif30 [S4-Vlanif30] ip address dhcp-alloc [S4-Vlanif30] quit 查看各个接口IP地址获取情况display interface Vlanif 10 Vlanif10 current state : UP Line protocol current state : UP Last line protocol up time : 2020-06-05 17:37:57 UTC-08:00 Description: Route Port,The Maximum Transmit Unit is 1500 Internet Address is allocated by DHCP, 10.0.10.254&#x2F;24 [S4]display interface Vlanif 20 Vlanif20 current state : UP Line protocol current state : UP Last line protocol up time : 2020-06-05 17:41:23 UTC-08:00 Description: Route Port,The Maximum Transmit Unit is 1500 Internet Address is allocated by DHCP, 10.0.20.254&#x2F;24 [S4]display interface Vlanif 30 Vlanif30 current state : UP Line protocol current state : UP Last line protocol up time : 2020-06-05 17:43:22 UTC-08:00 Description: Route Port,The Maximum Transmit Unit is 1500 Internet Address is allocated by DHCP, 10.0.30.2&#x2F;24 接口已经通过DHCP获取到IP地址，并且VLANIF30的地址为静态分配的地址：10.0.30.2。","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"DHCP Relay","slug":"DHCP-Relay","permalink":"http://example.com/tags/DHCP-Relay/"},{"name":"DHCP","slug":"DHCP","permalink":"http://example.com/tags/DHCP/"}]},{"title":"vlan间通信","slug":"vlan间通信","date":"2023-11-24T07:17:21.000Z","updated":"2023-11-25T07:51:39.450Z","comments":true,"path":"2023/11/24/vlan间通信/","permalink":"http://example.com/2023/11/24/vlan%E9%97%B4%E9%80%9A%E4%BF%A1/","excerpt":"VLAN间通信背景划分VLAN后，不同VLAN的用户间不能二层互访，这样能起到隔离广播的作用。但实际应用中，不同VLAN的用户又常有互访的需求，此时就需要实现不同VLAN的用户互访，简称VLAN间互访。","text":"VLAN间通信背景划分VLAN后，不同VLAN的用户间不能二层互访，这样能起到隔离广播的作用。但实际应用中，不同VLAN的用户又常有互访的需求，此时就需要实现不同VLAN的用户互访，简称VLAN间互访。 实验拓扑 详解：R2划入vlan2，R3划入vlan3，与交换机之间采用access口，由于交换机g0&#x2F;0&#x2F;1需要通过多个vlan，所以配成trunk口。R2和R3相当于主机，发送和接受的数据都不带标签，交换机g0&#x2F;0&#x2F;2收到R2发送的数据，打上标签vlan2，然后发出去；交换机g0&#x2F;0&#x2F;1收到数据后，发现vlan的标签允许通过，则数据带着vlan2的标签通过；然后交换机g0&#x2F;0&#x2F;3口转发数据时，发现自己的pvid是vlan3，和vlan2不一样，所以不接受，则vlan2和vlan3不能通信。 在某些场景下，需要特定vlan之间通信 方法一：dot1q接口 在r1上配置两个dot1q接口，g0&#x2F;0&#x2F;1.1和g0&#x2F;0&#x2F;1.2，分别对应vlan2和vlan3，作用就是可以终结vlan标签（剥离），vlan2的标签到r1后，被剥离掉vlan2的标签，然后转发时又被g0&#x2F;0&#x2F;1.2打上vlan3的标签，交换机g0&#x2F;0&#x2F;1通过，到g0&#x2F;0&#x2F;3，access口发现和自己的pvid一样，然后剥离掉标签，转发数据帧给r3. 方法二：vlanif接口：交换机上配置vlanif2和vlanif3，ip地址配成192.168.2.254和192.168.3.254 其实就是相当于两个不同网段的网关，然后实现三层的转发 Access接口交换机上常用来连接用户PC、服务器等终端设备的接口。Access接口所连接的这些设备的网卡往往只收发无标记帧。Access接口只能加入一个VLAN。只能允许一个VLAN通过。 转发原则 接收原则： ①收到不带标签的数据帧，打上标签，vlan id&#x3D;端口的PVID ②收到带标签的数据帧，检查数据帧vlan id是否和端口的PVID相同，相同直接接收；不同拒绝接收 发送原则： ①数据帧vlan id和端口PVID 相同，剥离标签发送； ②数据帧vlan id和端口PVID 不同，禁止发送。 Trunk接口Trunk接口允许多个VLAN的数据帧通过，这些数据帧通过802.1Q Tag实现区分。Trunk接口常用于交换机之间的互联，也用于连接路由器、防火墙等设备的 子接口 转发原则 接收原则： ①收到不带标签的数据帧，打上标签，vlan id&#x3D;端口的PVID，然后查看该vlanid是否在允许列表中，是–接收，不是–拒绝 ②收到带标签的数据帧，查看该vlan id是否在允许列表中，是–接收，不是–拒绝 发送原则： 查看vlan id是否在允许列表中，I:不是–拒绝发送；II：是，查看接口的PVID和vlan id是否相同，相同–剥标签发送；不同–直接发送。 Hybrid接口Hybrid接口与Trunk接口类似，也允许多个VLAN的数据帧通过，这些数据帧通过802.1Q Tag实现区分。用户可以灵活指定Hybrid接口在发送某个（或某些）VLAN的数据帧时是否携带Tag 转发原则 接收原则： ①收到不带标签的数据帧，打上标签，vlan id&#x3D;端口的PVID，然后查看该vlanid是否在允许列表中，是–接收，不是–拒绝 ②收到带标签的数据帧，查看该vlan id是否在允许列表中，是–接收，不是–拒绝发送原则：查看vlan id是否在允许列表中，I:不是–拒绝发送；II：是，是否带标签发送取决于接口的配置。 PVID可以手工修改，默认是1，access口的就是本身的vlan号，trunk可以有一个主vlan和多个副vlan，收到的数据和主vlan相同就剥离转发，收到和主vlan不一样的标签，查表，看看是不是在允许通过的列表，如果有，就带着原来的转发，要是没有，就不让过去啦。 实验配置过程# R2和R3的IP地址及网关配置 system-view Enter system view, return user view with Ctrl+Z. [R2]interface GigabitEthernet 0&#x2F;0&#x2F;1 [R2-GigabitEthernet0&#x2F;0&#x2F;1]ip address 192.168.2.1 24 [R2-GigabitEthernet0&#x2F;0&#x2F;1]quit [R2]ip route-static 0.0.0.0 0 192.168.2.254 配置默认路由，相当于给设备配置了网关。 system-view Enter system view, return user view with Ctrl+Z. [R3]interface GigabitEthernet 0&#x2F;0&#x2F;1 [R3-GigabitEthernet0&#x2F;0&#x2F;1]ip address 192.168.3.1 24 [R3-GigabitEthernet0&#x2F;0&#x2F;1]quit [R3]ip route-static 0.0.0.0 0 192.168.3.254 # 在S1上对R2和R3进行VLAN划分 [S1]vlan batch 2 3 Info: This operation may take a few seconds. Please wait for a moment…done. [S1]interface GigabitEthernet 0&#x2F;0&#x2F;2 [S1-GigabitEthernet0&#x2F;0&#x2F;2]port link-type access [S1-GigabitEthernet0&#x2F;0&#x2F;2]port default vlan 2 [S1-GigabitEthernet0&#x2F;0&#x2F;2]quit [S1]interface GigabitEthernet 0&#x2F;0&#x2F;3 [S1-GigabitEthernet0&#x2F;0&#x2F;3]port link-type access [S1-GigabitEthernet0&#x2F;0&#x2F;3]port default vlan 3 步骤 1 通过Dot1q终结子接口实现VLAN间互访 # 配置S1上的Trunk接口 [S1]interface GigabitEthernet 0&#x2F;0&#x2F;1 [S1-GigabitEthernet0&#x2F;0&#x2F;1]port trunk allow-pass vlan 2 3 因为VLAN间互访数据要由R1来终结VLAN，所以S1和R1之间的链路要允许VLAN2和VLAN3通过**。 # 在R1上创建并配置Dot1q终结子接口 [R1]interface GigabitEthernet 0&#x2F;0&#x2F;1.2 创建并进入子接口视图。2代表子接口的编号，一般建议子接口编号与VLAN ID相同，方便记忆。 [R1-GigabitEthernet0&#x2F;0&#x2F;1.2]dot1q termination vid 2 dot1q termination vid vlan-id命令用来配置子接口Dot1q终结的VLAN ID。 以此配置为例：当GigabitEthernet0&#x2F;0&#x2F;1接口收到带有VLAN 2标签的数据之后，会交由2号子接口进行VLAN终结操作并做后续处理。从2号子接口发出的数据也会带上VLAN 2的标签。 [R1-GigabitEthernet0&#x2F;0&#x2F;1.2]arp broadcast enable 终结子接口不能转发广播报文，在收到广播报文后它们直接把该报文丢弃。为了允许终结子接口能转发广播报文，可以通过在子接口上执行命令arp broadcast enable使能终结子接口的ARP广播功能。部分设备默认使能该功能，此命令的配置根据设备而定。 [R1-GigabitEthernet0&#x2F;0&#x2F;1.2]ip address 192.168.2.254 24 [R1-GigabitEthernet0&#x2F;0&#x2F;1.2]quit [R1]interface GigabitEthernet 0&#x2F;0&#x2F;1.3 [R1-GigabitEthernet0&#x2F;0&#x2F;1.3]dot1q termination vid 3 [R1-GigabitEthernet0&#x2F;0&#x2F;1.3]arp broadcast enable [R1-GigabitEthernet0&#x2F;0&#x2F;1.3]ip address 192.168.3.254 24 [R1-GigabitEthernet0&#x2F;0&#x2F;1.3]quit # 检测VLAN间互访联通性 ping 192.168.3.1 PING 192.168.3.1: 56 data bytes, press CTRL_C to break Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;1 ttl&#x3D;254 time&#x3D;60 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;2 ttl&#x3D;254 time&#x3D;40 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;3 ttl&#x3D;254 time&#x3D;110 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;4 ttl&#x3D;254 time&#x3D;70 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;5 ttl&#x3D;254 time&#x3D;100 ms — 192.168.3.1 ping statistics — 5 packet(s) transmitted 5 packet(s) received 0.00% packet loss round-trip min&#x2F;avg&#x2F;max &#x3D; 40&#x2F;76&#x2F;110 ms tracert 192.168.3.1 traceroute to 192.168.3.1(192.168.3.1), max hops: 30 ,packet length: 40,press CTRL_C to break 1 192.168.2.254 30 ms 50 ms 50 ms 2 192.168.3.1 70 ms 60 ms 60 ms 此时VLAN2和VLAN3之间已经可以正常的互访。 步骤 2 通过VLANIF接口实现VLAN间互访 # 清除上一步配置 [S1]interface GigabitEthernet 0&#x2F;0&#x2F;1 [S1-GigabitEthernet0&#x2F;0&#x2F;1]undo port trunk allow-pass vlan 2 3 [S1-GigabitEthernet0&#x2F;0&#x2F;1]undo port link-type [R1]undo interface GigabitEthernet 0&#x2F;0&#x2F;1.2 [R1]undo interface GigabitEthernet 0&#x2F;0&#x2F;1.3 # 在S1上创建相应的VLANIF接口 [S1]interface Vlanif 2 interface vlanif vlan-id命令用来创建VLANIF接口并进入VLANIF接口视图。只有先通过命令创建VLAN后，才能执行interface vlanif命令创建VLANIF接口。 [S1-Vlanif2]ip address 192.168.2.254 24 [S1-Vlanif2]quit [S1]interface Vlanif 3 [S1-Vlanif3]ip address 192.168.3.254 24 [S1-Vlanif3]quit # 检测VLAN间互访联通性 ping 192.168.3.1 PING 192.168.3.1: 56 data bytes, press CTRL_C to break Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;1 ttl&#x3D;254 time&#x3D;100 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;2 ttl&#x3D;254 time&#x3D;50 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;3 ttl&#x3D;254 time&#x3D;50 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;4 ttl&#x3D;254 time&#x3D;60 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;5 ttl&#x3D;254 time&#x3D;70 ms — 192.168.3.1 ping statistics — 5 packet(s) transmitted 5 packet(s) received 0.00% packet loss round-trip min&#x2F;avg&#x2F;max &#x3D; 50&#x2F;66&#x2F;100 ms tracert 192.168.3.1 traceroute to 192.168.3.1(192.168.3.1), max hops: 30 ,packet length: 40,press CTRL_C to break 1 192.168.2.254 40 ms 30 ms 20 ms 2 192.168.3.1 40 ms 30 ms 40 ms 此时VLAN2和VLAN3之间已经可以正常的互访。","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"vlan间通信","slug":"vlan间通信","permalink":"http://example.com/tags/vlan%E9%97%B4%E9%80%9A%E4%BF%A1/"},{"name":"dot1q","slug":"dot1q","permalink":"http://example.com/tags/dot1q/"},{"name":"vlanif","slug":"vlanif","permalink":"http://example.com/tags/vlanif/"}]}],"categories":[{"name":"基础知识","slug":"基础知识","permalink":"http://example.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"name":"ie实验","slug":"ie实验","permalink":"http://example.com/categories/ie%E5%AE%9E%E9%AA%8C/"},{"name":"综合实验","slug":"综合实验","permalink":"http://example.com/categories/%E7%BB%BC%E5%90%88%E5%AE%9E%E9%AA%8C/"},{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"Qos","slug":"Qos","permalink":"http://example.com/tags/Qos/"},{"name":"队列","slug":"队列","permalink":"http://example.com/tags/%E9%98%9F%E5%88%97/"},{"name":"EVPN","slug":"EVPN","permalink":"http://example.com/tags/EVPN/"},{"name":"ospfv3","slug":"ospfv3","permalink":"http://example.com/tags/ospfv3/"},{"name":"isis（ipv6）","slug":"isis（ipv6）","permalink":"http://example.com/tags/isis%EF%BC%88ipv6%EF%BC%89/"},{"name":"bgp（ipv6）","slug":"bgp（ipv6）","permalink":"http://example.com/tags/bgp%EF%BC%88ipv6%EF%BC%89/"},{"name":"跨域","slug":"跨域","permalink":"http://example.com/tags/%E8%B7%A8%E5%9F%9F/"},{"name":"Hub&Spoke","slug":"Hub-Spoke","permalink":"http://example.com/tags/Hub-Spoke/"},{"name":"RT","slug":"RT","permalink":"http://example.com/tags/RT/"},{"name":"端口隔离","slug":"端口隔离","permalink":"http://example.com/tags/%E7%AB%AF%E5%8F%A3%E9%9A%94%E7%A6%BB/"},{"name":"DHCP Snooping","slug":"DHCP-Snooping","permalink":"http://example.com/tags/DHCP-Snooping/"},{"name":"MAC地址漂移","slug":"MAC地址漂移","permalink":"http://example.com/tags/MAC%E5%9C%B0%E5%9D%80%E6%BC%82%E7%A7%BB/"},{"name":"MAC地址表安全","slug":"MAC地址表安全","permalink":"http://example.com/tags/MAC%E5%9C%B0%E5%9D%80%E8%A1%A8%E5%AE%89%E5%85%A8/"},{"name":"BGP高级特性","slug":"BGP高级特性","permalink":"http://example.com/tags/BGP%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/"},{"name":"as-path-filter","slug":"as-path-filter","permalink":"http://example.com/tags/as-path-filter/"},{"name":"comunity-filter","slug":"comunity-filter","permalink":"http://example.com/tags/comunity-filter/"},{"name":"正则表达式","slug":"正则表达式","permalink":"http://example.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"备份RR","slug":"备份RR","permalink":"http://example.com/tags/%E5%A4%87%E4%BB%BDRR/"},{"name":"分级RR","slug":"分级RR","permalink":"http://example.com/tags/%E5%88%86%E7%BA%A7RR/"},{"name":"ORF","slug":"ORF","permalink":"http://example.com/tags/ORF/"},{"name":"IGP高级特性","slug":"IGP高级特性","permalink":"http://example.com/tags/IGP%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/"},{"name":"IPv6","slug":"IPv6","permalink":"http://example.com/tags/IPv6/"},{"name":"DHCPv6","slug":"DHCPv6","permalink":"http://example.com/tags/DHCPv6/"},{"name":"ICMPv6","slug":"ICMPv6","permalink":"http://example.com/tags/ICMPv6/"},{"name":"防火墙","slug":"防火墙","permalink":"http://example.com/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"},{"name":"server-map","slug":"server-map","permalink":"http://example.com/tags/server-map/"},{"name":"堆叠","slug":"堆叠","permalink":"http://example.com/tags/%E5%A0%86%E5%8F%A0/"},{"name":"数通基础","slug":"数通基础","permalink":"http://example.com/tags/%E6%95%B0%E9%80%9A%E5%9F%BA%E7%A1%80/"},{"name":"VRP系统","slug":"VRP系统","permalink":"http://example.com/tags/VRP%E7%B3%BB%E7%BB%9F/"},{"name":"ARP","slug":"ARP","permalink":"http://example.com/tags/ARP/"},{"name":"MPLS VPN","slug":"MPLS-VPN","permalink":"http://example.com/tags/MPLS-VPN/"},{"name":"MP-BGP","slug":"MP-BGP","permalink":"http://example.com/tags/MP-BGP/"},{"name":"VRF","slug":"VRF","permalink":"http://example.com/tags/VRF/"},{"name":"STP","slug":"STP","permalink":"http://example.com/tags/STP/"},{"name":"RSTP","slug":"RSTP","permalink":"http://example.com/tags/RSTP/"},{"name":"MSTP","slug":"MSTP","permalink":"http://example.com/tags/MSTP/"},{"name":"vlan pool","slug":"vlan-pool","permalink":"http://example.com/tags/vlan-pool/"},{"name":"option 43","slug":"option-43","permalink":"http://example.com/tags/option-43/"},{"name":"漫游","slug":"漫游","permalink":"http://example.com/tags/%E6%BC%AB%E6%B8%B8/"},{"name":"VRRP","slug":"VRRP","permalink":"http://example.com/tags/VRRP/"},{"name":"SSH","slug":"SSH","permalink":"http://example.com/tags/SSH/"},{"name":"BGP","slug":"BGP","permalink":"http://example.com/tags/BGP/"},{"name":"IGMP","slug":"IGMP","permalink":"http://example.com/tags/IGMP/"},{"name":"PIM","slug":"PIM","permalink":"http://example.com/tags/PIM/"},{"name":"stp拓扑变更","slug":"stp拓扑变更","permalink":"http://example.com/tags/stp%E6%8B%93%E6%89%91%E5%8F%98%E6%9B%B4/"},{"name":"PPP","slug":"PPP","permalink":"http://example.com/tags/PPP/"},{"name":"PPPoE","slug":"PPPoE","permalink":"http://example.com/tags/PPPoE/"},{"name":"IS-IS","slug":"IS-IS","permalink":"http://example.com/tags/IS-IS/"},{"name":"ospf","slug":"ospf","permalink":"http://example.com/tags/ospf/"},{"name":"交换机工作原理","slug":"交换机工作原理","permalink":"http://example.com/tags/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"},{"name":"子网划分","slug":"子网划分","permalink":"http://example.com/tags/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/"},{"name":"ap上线","slug":"ap上线","permalink":"http://example.com/tags/ap%E4%B8%8A%E7%BA%BF/"},{"name":"wlan","slug":"wlan","permalink":"http://example.com/tags/wlan/"},{"name":"USG5500","slug":"USG5500","permalink":"http://example.com/tags/USG5500/"},{"name":"防火墙nat","slug":"防火墙nat","permalink":"http://example.com/tags/%E9%98%B2%E7%81%AB%E5%A2%99nat/"},{"name":"rstp","slug":"rstp","permalink":"http://example.com/tags/rstp/"},{"name":"mstp","slug":"mstp","permalink":"http://example.com/tags/mstp/"},{"name":"链路聚合","slug":"链路聚合","permalink":"http://example.com/tags/%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/"},{"name":"lacp","slug":"lacp","permalink":"http://example.com/tags/lacp/"},{"name":"eth-trunk","slug":"eth-trunk","permalink":"http://example.com/tags/eth-trunk/"},{"name":"mpls","slug":"mpls","permalink":"http://example.com/tags/mpls/"},{"name":"ldp","slug":"ldp","permalink":"http://example.com/tags/ldp/"},{"name":"hybrid","slug":"hybrid","permalink":"http://example.com/tags/hybrid/"},{"name":"tag","slug":"tag","permalink":"http://example.com/tags/tag/"},{"name":"telnet","slug":"telnet","permalink":"http://example.com/tags/telnet/"},{"name":"aaa","slug":"aaa","permalink":"http://example.com/tags/aaa/"},{"name":"FTP","slug":"FTP","permalink":"http://example.com/tags/FTP/"},{"name":"BFD","slug":"BFD","permalink":"http://example.com/tags/BFD/"},{"name":"BGP路由优选","slug":"BGP路由优选","permalink":"http://example.com/tags/BGP%E8%B7%AF%E7%94%B1%E4%BC%98%E9%80%89/"},{"name":"BGP路由反射器","slug":"BGP路由反射器","permalink":"http://example.com/tags/BGP%E8%B7%AF%E7%94%B1%E5%8F%8D%E5%B0%84%E5%99%A8/"},{"name":"路由策略","slug":"路由策略","permalink":"http://example.com/tags/%E8%B7%AF%E7%94%B1%E7%AD%96%E7%95%A5/"},{"name":"nat","slug":"nat","permalink":"http://example.com/tags/nat/"},{"name":"DHCP Relay","slug":"DHCP-Relay","permalink":"http://example.com/tags/DHCP-Relay/"},{"name":"DHCP","slug":"DHCP","permalink":"http://example.com/tags/DHCP/"},{"name":"vlan间通信","slug":"vlan间通信","permalink":"http://example.com/tags/vlan%E9%97%B4%E9%80%9A%E4%BF%A1/"},{"name":"dot1q","slug":"dot1q","permalink":"http://example.com/tags/dot1q/"},{"name":"vlanif","slug":"vlanif","permalink":"http://example.com/tags/vlanif/"}]}