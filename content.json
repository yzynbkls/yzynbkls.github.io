{"meta":{"title":"沃德发","subtitle":"相互吹捧，共同进步😍😍😍","description":null,"author":"Yang","url":"http://example.com","root":"/"},"pages":[{"title":"categories","date":"2023-11-23T11:58:42.000Z","updated":"2023-11-23T11:59:22.023Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2023-11-23T12:01:15.000Z","updated":"2023-11-23T12:04:24.284Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"BGP实验","slug":"BGP实验","date":"2023-11-28T02:58:58.000Z","updated":"2023-11-28T07:45:03.915Z","comments":true,"path":"2023/11/28/BGP实验/","permalink":"http://example.com/2023/11/28/BGP%E5%AE%9E%E9%AA%8C/","excerpt":"BGP基础实验设备连接方式、IP地址规划、BGP AS号如图所示，所有设备均创建Loopback0接口，IP地址为10.0.x.x&#x2F;32，其中x为设备编号，所有设备都使用Loopback0接口IP地址作为BGP Router ID。R1、R5上存在Loopback1模拟用户网段。 R2、R3、R4之间运行OSPF，在R2、R3、R4的互联接口、Loopback0接口上激活OSPF。!","text":"BGP基础实验设备连接方式、IP地址规划、BGP AS号如图所示，所有设备均创建Loopback0接口，IP地址为10.0.x.x&#x2F;32，其中x为设备编号，所有设备都使用Loopback0接口IP地址作为BGP Router ID。R1、R5上存在Loopback1模拟用户网段。 R2、R3、R4之间运行OSPF，在R2、R3、R4的互联接口、Loopback0接口上激活OSPF。! 实验背景你是公司的网络管理员。公司的网络采用了BGP协议作为路由协议。公司的网络由多个自治系统组成，不同的分支机构使用了不同的AS号，现在你需要完成公司网络的搭建工作。在公司总部使用了OSPF作为IGP，公司内部不同分支机构使用的是私有的BGP AS号。 1.配置ip如拓扑图配置各个接口ip，和loopback 0 ：10.0.x.x r1 loopback 1 ：10.1.1.1 24 r5 loopback 1 ：10.1.5.5 24 r2 r3 r4配置ospf：略 2.配置IBGP对等体在R2、R3、R4之间基于Loopback0接口建立全互联的IBGP对等体关系。 #R2上配置BGP [R2]bgp 64512 [R2-bgp] router-id 10.0.2.2 [R2-bgp] peer 10.0.3.3 as-number 64512 [R2-bgp] peer 10.0.3.3 connect-interface LoopBack0 [R2-bgp] peer 10.0.4.4 as-number 64512 [R2-bgp] peer 10.0.4.4 connect-interface LoopBack0 #R3上配置BGP [R3]bgp 64512 [R3-bgp] router-id 10.0.3.3 [R3-bgp] peer 10.0.2.2 as-number 64512 [R3-bgp] peer 10.0.2.2 connect-interface LoopBack0 [R3-bgp] peer 10.0.4.4 as-number 64512 [R3-bgp] peer 10.0.4.4 connect-interface LoopBack0 #R4上配置BGP [R4]bgp 64512 [R4-bgp] peer 10.0.2.2 as-number 64512 [R4-bgp] peer 10.0.2.2 connect-interface LoopBack0 [R4-bgp] peer 10.0.3.3 as-number 64512 [R4-bgp] peer 10.0.3.3 connect-interface LoopBack0 #分别在R2、R3、R4上检查BGP对等体状态 3.配置EBGP对等体（一般情况使用直连接口建立EBGp） 在R1与R2、R4与R5之间基于Loopback0接口建立EBGP对等体关系，为保证能够正常建立，在R1、R2上配置静态路由使Loopback0之间路由可达（R4、R5同样操作）。 #在R1、R2上配置静态路由 [R1]ip route-static 10.0.2.2 32 10.0.12.2 [R2]ip route-static 10.0.1.1 32 10.0.12.1 #在R4、R5上配置静态路由 [R4]ip route-static 10.0.5.5 32 10.0.45.5 [R5]ip route-static 10.0.4.4 32 10.0.45.4 这里配置静态路由，因为要建立TCP会话的前提，需要在数据层面两路由器相通，所以需要需要手工配置静态路由，实现loopback 0 之间互通 #配置R1、R2之间的EBGP对等体 [R1]bgp 64513 [R1-bgp] router-id 10.0.1.1 [R1-bgp] peer 10.0.2.2 as-number 64512 [R1-bgp] peer 10.0.2.2 ebgp-max-hop 2 [R1-bgp] peer 10.0.2.2 connect-interface LoopBack0 [R2]bgp 64512 [R2-bgp] peer 10.0.1.1 as-number 64513 [R2-bgp] peer 10.0.1.1 ebgp-max-hop 2 [R2-bgp] peer 10.0.1.1 connect-interface LoopBack0 默认情况下，EBGP连接允许的最大跳数为1，这导致EBGP对等体之间只能使用直连链路建立EBGP对等体关系，为使用环回口作为更新源需要手动修改EBGP连接允许的最大跳数。 #配置R4、R5之间的EBGP对等体 [R4]bgp 64512 [R4-bgp] peer 10.0.5.5 as-number 64514 [R4-bgp] peer 10.0.5.5 ebgp-max-hop 2 [R4-bgp] peer 10.0.5.5 connect-interface LoopBack0 [R5]bgp 64514 [R5-bgp] router-id 10.0.5.5 [R5-bgp] peer 10.0.4.4 as-number 64512 [R5-bgp] peer 10.0.4.4 ebgp-max-hop 2 [R5-bgp] peer 10.0.4.4 connect-interface LoopBack0 #在R1、R5上检查EBGP对等体状态 4.在BGP中发布路由在R1、R5上将Loopback1接口路由发布到BGP #在R1、R5上通过network命令发布路由 [R1]bgp 64513 [R1-bgp] network 10.1.1.1 24 [R5]bgp 64514 [R5-bgp] network 10.1.5.5 24 在R3上查看BGP路由表 可以看到此时R3上已经学习到R1、R5上发布的BGP路由，但是都是非有效路由，这是因为它们的下一跳在R3上都不可达，为此可以在R2、R4上通过next-hop-local命令修改下一跳地址为R2、R4的更新源地址。 原因：ebgp对等体在发送数据时，下一跳地址为自身更新源地址，ibgp收到ebgp发送的数据，下一跳不变 #在R2、R4上将路由的下一跳地址修改为自身 [R2]bgp 64512 [R2-bgp] peer 10.0.3.3 next-hop-local [R2-bgp] peer 10.0.4.4 next-hop-local [R4]bgp 64512 [R4-bgp] peer 10.0.2.2 next-hop-local [R4-bgp] peer 10.0.3.3 next-hop-local peer next-hop-local命令一般在ASBR上配置。当设备通过EBGP邻居学到路由再转发给其他IBGP邻居时，默认不修改下一跳，但其EBGP邻居发来的路由的下一跳都是其EBGP邻居的Peer地址，本端对等体所属AS域内的IBGP邻居收到这样的路由后，由于下一跳不可达导致路由无法活跃。因此，需要在ASBR上对IBGP邻居配置peer next-hop-local命令，使得发给IBGP邻居的路由的下一跳是其自身的地址，IBGP邻居收到这样的路由后（由于域内都配置了IGP）发现下一跳可达，路由即为活跃路由。 此命令为覆盖式命令。 执行peer next-hop-local命令后，设备向IBGP对等体&#x2F;对等体组通告路由时，把下一跳属性设为自身的IP地址。 peer next-hop-local命令仅应用于IBGP对等体间。 再次r3上查看bgp路由表 此时两条BGP路由都变成了有效、最优的状态。 #在R1、R5上查看BGP路由表 R1、R5之间相互学习到了对端Loopback1接口路由。 BGP路由汇总实验 BGP AS号、互联地址如图所示，所有设备均创建Loopback0接口，IP地址为10.0.x.x&#x2F;32，其中x为设备编号。 R1、R2、R3使用Loopback0地址作为BGP Router ID，基于直连接口建立EBGP对等体关系。 R1、R3上存在Loopback1、Loopback2接口，用于模拟用户网段。 1.配置ip略 2.配置EBGPd对等体#配置R1 [R1]bgp 64511 [R1-bgp] router-id 10.0.1.1 [R1-bgp] peer 10.0.12.2 as-number 64512 #配置R2 #配置R3 [R3]bgp 64513 [R3-bgp] router-id 10.0.3.3 [R3-bgp] peer 10.0.23.2 as-number 64512 3.BGP路由自动汇总在R1上开启BGP路由自动汇总，将Loopback1、Loopback2接口路由发布到BGP中，并进行自动汇总。 #创建IP前缀列表1，匹配Loopback1、Loopback2接口路由 [R1]ip ip-prefix 1 permit 172.16.0.0 16 greater-equal 24 less-equal 24 #创建Route-Policy hcip，并创建节点10，在其中调用IP前缀列表1 [R1]route-policy hcip permit node 10 [R1-route-policy] if-match ip-prefix 1 [R1-route-policy] quit [R1]bgp 64511 [R1-bgp] import-route direct route-policy hcip [R1-bgp] summary automatic Info: Automatic summarization is valid only for the routes imported through the import-route command. 自动汇总只对通过import-route命令引入的路由生效。 #在R1上查看BGP路由表 display bgp routing-table Loopback1、Loopback2接口路由已经发布到BGP，由于R1激活了BGP路由自动汇总，因此R1会将这些路由汇总成172.16.0.0&#x2F;16，同时抑制所有的明细路由，通过明细路由前的“s”标记可以看出，该标记的含义为“suppressed”，表示被抑制，最终R1只对外通告汇总路由172.16.0.0&#x2F;16。 #在R2上查看BGP路由表 display bgp routing-table R2上只能看到一条主类路由172.16.0.0&#x2F;16。 #在R2上查看BGP路由172.16.0.0的明细信息 display bgp routing-table 172.16.0.0 该路由的路径属性中存在Aggregator属性，其中携带了汇总路由生成设备所属的AS号以及其Router ID 4.BGP路由手动汇总在R3上将Loopback1、Loopback2接口路由发布到BGP，在R2上通过aggregate命令执行手动汇总，并抑制明细路由的对外发布。 #创建IP前缀列表1，匹配Loopback1、Loopback2接口路由 [R3]ip ip-prefix 1 permit 172.17.0.0 16 greater-equal 24 less-equal 24 #创建Route-Policy hcip，并创建节点10，在其中调用IP前缀列表1 [R3]route-policy hcip permit node 10 [R3-route-policy] if-match ip-prefix 1 [R3-route-policy] quit #将Loopback1、Loopback2接口路由发布到BGP [R3]bgp 64513 [R3-bgp] import-route direct route-policy hcip #查看R2的BGP路由表 display bgp routing-table ​ 在R2的BGP路由表中已经存在R3通告的BGP路由172.17.1.0&#x2F;24、172.17.2.0&#x2F;24。 #R2上执行手动路由汇总，将172.17.1.0&#x2F;24、172.17.2.0&#x2F;24汇总成172.17.0.0&#x2F;22，并抑制明细路由的对外通告 [R2]bgp 64512 [R2-bgp] aggregate 172.17.0.0 22 detail-suppressed #查看R2的BGP路由表 display bgp routing-table ​ 此时在R2的BGP路由表中可以看到汇总后的路由。 #在R2上查看BGP路由172.16.0.0&#x2F;22的明细信息 display bgp routing-table 172.17.0.0 22 从输出信息可以看到AS_Path值为Nil，代表了AS_Path属性值为空，这意味着丢失了明细的AS_Path属性值，BGP依赖AS_Path实现防环，因此AS_Path属性的丢失可能带来路由环路。从该条路由对外通告的对等体中可以看到10.0.23.3（R3)。 #查看R3的BGP路由表 在R3的BGP路由表中可以看到汇总路由172.17.0.0&#x2F;22。 #为防止路由环路，在R2上执行手动汇总时增加as-set关键字 [R2]bgp 64512 [R2-bgp] aggregate 172.17.0.0 255.255.252.0 detail-suppressed as-set #再次在R2上查看BGP路由172.17.0.0&#x2F;22的明细信息 可以看到此时AS_Path属性值为64513，此时该条路由依旧向10.0.23.3（R3）通告。 R3收到关于172.17.0.0&#x2F;22的通告之后，在AS_Path中将看到自身的AS号（64153），将会忽略该路由通告。此时R3的BGP路由表中无法看到汇总路由172.17.0.0&#x2F;22，因此通过在手动路由汇总的配置中使用as-set关键字顺利地规避了路由环路的产生。 BGP路由反射器","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"BGP","slug":"BGP","permalink":"http://example.com/tags/BGP/"}]},{"title":"路由策略","slug":"路由策略","date":"2023-11-26T12:36:59.000Z","updated":"2023-11-26T13:26:00.594Z","comments":true,"path":"2023/11/26/路由策略/","permalink":"http://example.com/2023/11/26/%E8%B7%AF%E7%94%B1%E7%AD%96%E7%95%A5/","excerpt":"设备互联方式、互联地址如图所示，所有设备均创建Loopback0，其IP地址为10.0.x.x&#x2F;32，其中x为设备编号，R1、R2、R3在互联接口、Loopback0接口上激活OSPF。 R3、R4属于IS-IS Area 49.0001，两者都是Level-1路由器，R3、R4的系统ID采用0000.0000.000x格式，其中x为设备编号。","text":"设备互联方式、互联地址如图所示，所有设备均创建Loopback0，其IP地址为10.0.x.x&#x2F;32，其中x为设备编号，R1、R2、R3在互联接口、Loopback0接口上激活OSPF。 R3、R4属于IS-IS Area 49.0001，两者都是Level-1路由器，R3、R4的系统ID采用0000.0000.000x格式，其中x为设备编号。 R1上存在三个业务网段A、B、C（使用Loopback1、2、3接口路由模拟），在R1上将直连路由引入到OSPF，但是OSPF域内的路由器上不需要C业务的路由，为此在R1上引入直连路由时通过Route-Policy过滤引入的路由。 R2上不需要A业务网段的路由，但是R3上需要A、B业务网段的路由，为此在R2上配置Filter-Policy对OSPF接收的路由进行过滤。 IS-IS域内的路由器需要访问A业务，因此需要在R3上执行路由重分发，将OSPF路由引入到IS-IS，但是IS-IS域内的路由器不需要访问B业务，为此在R1上引入直连路由时为A、B业务网段路由打上不同的路由标记，R3上执行重分发时根据路由标记过滤B业务网段路由。 任务思路 设备基础IP地址配置。 配置R1、R2、R3之间的OSPF，在互联接口、Loopback0接口上激活OSPF。在R3、R4之间配置IS-IS。 在R1上将直连路由引入到OSPF中，同时配置路由策略不引入C业务网段的路由，将A、B业务网段路由分别打上路由标记10、20。 在R2上配置Filter-Policy对接收的OSPF路由进行过滤，只接收B业务网段的路由。 在R3上将OSPF路由引入到IS-IS中，通过Route-Policy匹配路由标记，只引入A业务网段的OSPF外部路由。 1.配置ip#配置R1的GE0&#x2F;0&#x2F;2、Loopback0接口IP地址 [R1]interface GigabitEthernet0&#x2F;0&#x2F;2 [R1-GigabitEthernet0&#x2F;0&#x2F;2] ip address 10.0.12.1 255.255.255.0 [R1-GigabitEthernet0&#x2F;0&#x2F;2] quit [R1]interface LoopBack0 [R1-LoopBack0] ip address 10.0.1.1 255.255.255.255 [R1-LoopBack0] quit #在R1上创建多个环回口，用于模拟业务网段A、B、C [R1]interface LoopBack1 [R1-LoopBack1] ip address 172.16.1.1 255.255.255.0 [R1-LoopBack1] quit [R1]interface LoopBack2 [R1-LoopBack2] ip address 172.16.2.1 255.255.255.0 [R1-LoopBack2] quit [R1]interface LoopBack3 [R1-LoopBack3] ip address 172.16.3.1 255.255.255.0 [R1-LoopBack3] quit #配置R2的GE0&#x2F;0&#x2F;2、GE0&#x2F;0&#x2F;3、Loopback0接口IP地址 [R2]interface LoopBack0 [R2-LoopBack0] ip address 10.0.2.2 255.255.255.255 [R2-LoopBack0] quit [R2]interface GigabitEthernet0&#x2F;0&#x2F;2 [R2-GigabitEthernet0&#x2F;0&#x2F;2] ip address 10.0.23.2 255.255.255.0 [R2-GigabitEthernet0&#x2F;0&#x2F;2] quit [R2]interface GigabitEthernet0&#x2F;0&#x2F;3 [R2-GigabitEthernet0&#x2F;0&#x2F;3] ip address 10.0.12.2 255.255.255.0 [R2-GigabitEthernet0&#x2F;0&#x2F;3] quit #配置R3的GE0&#x2F;0&#x2F;2、GE0&#x2F;0&#x2F;3、Loopback0接口IP地址 [R3]interface LoopBack0 [R3-LoopBack0] ip address 10.0.3.3 255.255.255.255 [R3-LoopBack0] quit [R3]interface GigabitEthernet0&#x2F;0&#x2F;2 [R3-GigabitEthernet0&#x2F;0&#x2F;2] ip address 10.0.34.3 255.255.255.0 [R3-GigabitEthernet0&#x2F;0&#x2F;2] quit [R3]interface GigabitEthernet0&#x2F;0&#x2F;3 [R3-GigabitEthernet0&#x2F;0&#x2F;3] ip address 10.0.23.3 255.255.255.0 [R3-GigabitEthernet0&#x2F;0&#x2F;3] quit #配置R4的GE0&#x2F;0&#x2F;3、Loopback0接口IP地址 [R4]interface GigabitEthernet0&#x2F;0&#x2F;3 [R4-GigabitEthernet0&#x2F;0&#x2F;3] ip address 10.0.34.4 255.255.255.0 [R4-GigabitEthernet0&#x2F;0&#x2F;3] quit [R4]interface LoopBack0 [R4-LoopBack0] ip address 10.0.4.4 255.255.255.255 [R4-LoopBack0] quit #在R2、R4上检查IP地址连通性 2.配置ospf和isis#配置R1 [R1]ospf 1 router-id 10.0.1.1 [R1-ospf-1] area 0 [R1-ospf-1-area-0.0.0.0] network 10.0.1.1 0.0.0.0 [R1-ospf-1-area-0.0.0.0] network 10.0.12.1 0.0.0.0 [R1-ospf-1-area-0.0.0.0] quit [R1-ospf-1] quit #配置R2 [R2]ospf 1 router-id 10.0.2.2 [R2-ospf-1] area 0.0.0.0 [R2-ospf-1-area-0.0.0.0] network 10.0.2.2 0.0.0.0 [R2-ospf-1-area-0.0.0.0] network 10.0.12.2 0.0.0.0 [R2-ospf-1-area-0.0.0.0] network 10.0.23.2 0.0.0.0 [R2-ospf-1-area-0.0.0.0] quit [R2-ospf-1] quit #配置R3 [R3]ospf 1 router-id 10.0.3.3 [R3-ospf-1] area 0.0.0.0 [R3-ospf-1-area-0.0.0.0] network 10.0.3.3 0.0.0.0 [R3-ospf-1-area-0.0.0.0] network 10.0.23.3 0.0.0.0 [R3-ospf-1-area-0.0.0.0] quit [R3-ospf-1] quit #在R2上检查OSPF邻居的概要信息 R3、R4上配置IS-IS，区域为49.0001，系统ID采用0000.0000.000x格式（x为设备编号），两台设备都为Level-1路由器，在互联接口、R4的Loopback0接口上激活IS-IS。 #配置R3 [R3]isis 1 [R3-isis-1] is-level level-1 [R3-isis-1] network-entity 49.0001.0000.0000.0003.00 [R3-isis-1] quit [R3]interface GigabitEthernet0&#x2F;0&#x2F;2 [R3-GigabitEthernet0&#x2F;0&#x2F;2] isis enable 1 [R3-GigabitEthernet0&#x2F;0&#x2F;2] quit #配置R4 [R4]isis 1 [R4-isis-1] is-level level-1 [R4-isis-1] network-entity 49.0001.0000.0000.0004.00 [R4-isis-1] quit [R4]interface GigabitEthernet0&#x2F;0&#x2F;3 [R4-GigabitEthernet0&#x2F;0&#x2F;3] isis enable 1 [R4-GigabitEthernet0&#x2F;0&#x2F;3] quit [R4]interface LoopBack 0 [R4-LoopBack0] isis enable 1 [R4-LoopBack0] quit #在R3上检查IS-IS邻居状态 3.在R1上引入直连路由在R1上将直连路由引入到OSPF中，同时配置路由策略过滤C业务网段，将A、B业务网段路由分别打上路由标记10、20。 #创建IP前缀列表1，匹配Loopback1接口路由（A业务网段） [R1]ip ip-prefix 1 index 10 permit 172.16.1.0 24 greater-equal 24 less-equal 24 #创建IP前缀列表2，匹配Loopback2接口路由（B业务网段） [R1]ip ip-prefix 2 index 10 permit 172.16.2.0 24 greater-equal 24 less-equal 24 #创建Route-Policy hcip，并创建节点10、20，分别调用IP前缀列表1、2，打上路由标记 [R1]route-policy hcip permit node 10 [R1-route-policy] if-match ip-prefix 1 [R1-route-policy] apply tag 10 [R1-route-policy] quit [R1]route-policy hcip permit node 20 [R1-route-policy] if-match ip-prefix 2 [R1-route-policy] apply tag 20 [R1-route-policy] quit #在R1的OSPF中引入直连路由，调用Route-Policy hcip [R1]ospf 1 [R1-ospf-1] import-route direct route-policy hcip r1上查看ospf lsdb，Loopback1、2接口路由已经被成功引入OSPF中。 #在R1上查看OSPF LSDB中AS-external LSA 172.16.1.0的相关信息 [R1]display ospf lsdb ase 172.16.1.0 ​ OSPF Process 1 with Router ID 10.0.1.1 ​ Link State Database Type : External Ls id : 172.16.1.0 Adv rtr : 10.0.1.1 Ls age : 165 Len : 36 Options : E seq# : 80000001 chksum : 0xa954 Net mask : 255.255.255.0 TOS 0 Metric: 1 E type : 2 Forwarding Address : 0.0.0.0 Tag : 10 Priority : Low 外部路由172.16.1.0&#x2F;24已经被打上Tag 10。 #在R1上查看OSPF LSDB中AS-external LSA 172.16.2.0的相关信息 [R1]display ospf lsdb ase 172.16.2.0 ​ OSPF Process 1 with Router ID 10.0.1.1 ​ Link State Database Type : External Ls id : 172.16.2.0 Adv rtr : 10.0.1.1 Ls age : 355 Len : 36 Options : E seq# : 80000001 chksum : 0x539f Net mask : 255.255.255.0 TOS 0 Metric: 1 E type : 2 Forwarding Address : 0.0.0.0 Tag : 20 Priority : Low 外部路由172.16.2.0&#x2F;24已经被打上Tag 20。 4.在R2上配置过滤策略在R2上配置Filter-Policy对接收的OSPF路由进行过滤，只接收B业务网段的路由。 #查看配置Filter-Policy前的OSPF路由表 display ospf routing #查看配置Filter-Policy前的IP路由表中的OSPF路由 display ip routing-table protocol ospf 在OSPF路由表以及IP路由表中都可以看到OSPF外部路由172.16.1.0&#x2F;24、172.16.2.0&#x2F;24。 #配置基础ACL [R2]acl number 2000 [R2-acl-basic-2000] rule 5 deny source 172.16.1.0 0.0.0.255 [R2-acl-basic-2000] rule 10 permit #在OSPF中部署入方向的Filter-Policy，调用ACL 2000 [R2]ospf 1 [R2-ospf-1] filter-policy 2000 import #查看配置Filter-Policy后的OSPF路由表 dis ospf routing 发现两条外部路由都还存在 #查看配置Filter-Policy后的IP路由表中的OSPF路由 display ip routing-table protocol ospf 在IP路由表中路由172.16.2.0&#x2F;24已经不存在，但是在OSPF路由表中依旧存在。这验证了对于OSPF，Filter-Policy只是限制路由加入IP路由表，不影响本地的LSDB以及LSA的传递。 #在R3上查看IP路由表中的OSPF路由 display ip routing-table protocol ospf R3的IP路由表中OSPF外部路由172.16.1.0&#x2F;24、172.16.2.0&#x2F;24依旧存在。 5.在R3上将OSPF路由引入到IS-IS在R3上将OSPF路由引入到IS-IS中，通过Route-Policy匹配路由标记，只引入A业务网段的OSPF外部路由。 #创建Route-Policy hcip [R3]route-policy hcip permit node 10 [R3-route-policy] if-match tag 10 [R3-route-policy] quit #在IS-IS中引入OSPF路由，调用Route-Policy hcip只引入A业务网段的OSPF外部路由 [R3]isis 1 [R3-isis-1] import-route ospf 1 level-1 route-policy hcip （注意指定level） #查看R3的IS-IS路由表 display isis route Level-1的路由重分发表中只有172.16.1.0&#x2F;24。","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"路由策略","slug":"路由策略","permalink":"http://example.com/tags/%E8%B7%AF%E7%94%B1%E7%AD%96%E7%95%A5/"}]},{"title":"nat实验","slug":"nat实验","date":"2023-11-25T12:41:12.000Z","updated":"2023-11-25T13:54:42.229Z","comments":true,"path":"2023/11/25/nat实验/","permalink":"http://example.com/2023/11/25/nat%E5%AE%9E%E9%AA%8C/","excerpt":"静态nat静态NAT实现了私有地址和公有地址的一对一映射。如果希望一台主机优先使用某个关联地址，或者想要外部网络使用一个指定的公网地址访问内部服务器时，可以使用静态NAT。但是在大型网络中，这种一对一的IP地址映射无法缓解公用地址短缺的问题。","text":"静态nat静态NAT实现了私有地址和公有地址的一对一映射。如果希望一台主机优先使用某个关联地址，或者想要外部网络使用一个指定的公网地址访问内部服务器时，可以使用静态NAT。但是在大型网络中，这种一对一的IP地址映射无法缓解公用地址短缺的问题。 静态NAT实现了私有地址和共有地址一对一的映射（一个私有地址对应一个共有地址），并没有做到缓解地址短缺的问题，只是做到了地址转换。 一个公网地址只会分配给唯一且固定的内网地址 如图配置ip地址和网关 r1上配置静态nat（注意是在公网的接口上，出接口） 注意配置一条静态路由，不然没有路由的下一跳会被丢弃 在r1上查看nat映射关系：dis nat static 验证一下： 发现去往2.2.2.2的源地址变为2.2.2.3，说明nat完成转换。 静态nat两种配置方式： 1.接口下（上述实验采用这种方式）：进入到连接外网路由器的出接口下，然后在接口视图下配置nat映射关系 2.全局：在全局视图下，配置好nat映射关系，再进入到出接口，执行：nat static enable 动态nat动态NAT通过使用地址池来实现。 如上图，当内部主机A和主机B需要与公网中的目的主机通信时，网关RTA会从配置的公网地址池中选择一个未使用的公网地址与之做映射。每台主机都会分配到地址池中的一个唯一地址。当不需要此连接时，对应的地址映射将会被删除，公网地址也会被恢复到地址池中待用。当网关收到回复报文后，会根据之前的映射再次进行转换之后转发给对应主机。 注意： 动态NAT实际上实现的还是私有地址和公有地址一对一的关系，但是共有地址不再绑定给特定的内网地址。实现了一定程度的缓解地址短缺问题。动态NAT地址池中的地址用尽以后，只能等待被占用的公用IP被释放后，其他主机才能使用它来访问公网。 动态NAT转换流程：1）路由器上配置一个内部地址池（公司内部所有主机用到的私有IP）动态映射一个外部地址池（所购买的公有IP）。2）当有一个内网主机访问外网时，路由器首先查看NAT地址转换表；3）若无，则再查看是否配置了动态NAT映射，若配置，则将IP包头中的源IP与内部地址池进行匹配，若有匹配项，则将该内网IP从内部地址池中取出，同时取出外部地址池中的一个IP地址，动态形成NAT地址转换表。注意，外部地址池的公网IP地址取出后，外部地址池中将没有该公网IP了。4）默认当该主机24小时没有联系外网时，该动态NAT条目会自动消失，所被取出的公私有地址重新回到地址池中。 ip如图，pc的网关192.168.1.254 r1上配置默认路由，ip route-static 0.0.0.0 0 172.16.1.2 r1上配置动态地址池： 地址池验证： 配置acl策略： 在r1的外网出接口上调用： 验证： 其中源IP为3、4、5不定，说明是在动态分配外网地址。动态NAT配置完成。 在动态NAT实验中，最后利用PC1测试连通性时，间歇性会丢包 可能的原因：ping的时候默认按地址池中可用地址顺序从1~254进行地址转换，放大nat地址池可解决。 NAPT 如上图，RTA收到一个私网主机发送的报文，源IP地址是192.168.1.1，源端口号是1025，目的IP地址是100.1.1.1，目的端口是80。RTA会从配置的公网地址池中选择一个空闲的公网IP地址和端口号，并建立相应的NAPT表项。这些NAPT表项指定了报文的私网IP地址和端口号与公网IP地址和端口号的映射关系。之后，RTA将报文的源IP地址和端口号转换成公网地址200.10.10.1和端口号2843，并转发报文到公网。当网关RTA收到回复报文后，会根据之前的映射表再次进行转换之后转发给主机A。主机B同理。 注意： NAPT技术允许多个内部地址映射到同一个公有地址的不同端口。NAPT实现了私有地址对共有地址多对一 相当于一种特殊的动态nat 1、端口NAT和动态NAT的配置过程基本一致，只是在应用到接口时，配置命令少no-pat2、端口NAT一个地址可以给多个源地址转换，不是单对单的转换，所以节省了nat地址！3、端口NAT实际应用较多，静态NAT和动态NAT因为地址不能节约，所以实际应用少 Easy IP Easy IP本质上是NAPT（所以原理与NAPT大致相似）由于网关设备出接口IP地址为公网地址，所以可以利用该出接口地址来作为地址转换的公有地址。Easy IP适用于小规模局域网中的主机访问Internet的场景。小规模局域网通常部署在小型的网吧或者办公室中，这些地方内部主机不多，出接口可以通过拨号方式获取一个临时公网IP地址。Easy IP可以实现内部主机使用这个临时公网IP地址访问Internet。 Easy IP适用于小规模局域网中的主机访问Internet的场景。小规模局域网通常部署在小型的网吧或者办公室中，这些地方内部主机不多，出接口可以通过拨号方式获取一个临时公网IP地址。Easy IP可以实现内部主机使用这个临时公网IP地址访问Internet。 Easy IP的配置：1.创建ACL：acl 2000 2.允许1.0的数据进行转换：rule 5 permit source 192.168.1.0 0 .0.0.255 3.进入公网出接口 4.应用acl：nat outbound 2000 （相较于napt少了地址池） 验证： 源地址为出接口地址172.16.1.1，只是端口不同","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"nat","slug":"nat","permalink":"http://example.com/tags/nat/"}]},{"title":"DHCP基础配置","slug":"DHCP基础配置","date":"2023-11-25T06:34:51.000Z","updated":"2023-11-25T07:52:19.845Z","comments":true,"path":"2023/11/25/DHCP基础配置/","permalink":"http://example.com/2023/11/25/DHCP%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/","excerpt":"DHCP是一种终端自动配置协议，客户端通过DHCP协议可获取一个合法的动态IP地址。","text":"DHCP是一种终端自动配置协议，客户端通过DHCP协议可获取一个合法的动态IP地址。 概述随着网络规模的扩大和网络复杂度的提高，网络配置越来越复杂，经常出现计算机位置变化（如便携机或无线网络）和计算机数量超过可分配的IP地址的情况。动态主机配置协议DHCP（Dynamic Host Configuration Protocol）就是为满足这些需求而发展起来的。DHCP协议以服务器&#x2F;客户端（Server&#x2F;Client）模式工作，DHCP客户端向DHCP服务器动态地请求配置信息，DHCP服务器可以很方便地为客户端动态发送配置信息。 DHCP服务器DHCP Server即DHCP服务器，负责客户端IP地址的分配。客户端向服务器发送配置申请报文（包括IP地址、子网掩码、缺省网关等参数），服务器根据策略返回携带相应配置信息的报文，请求报文和回应报文都采用UDP进行封装。 DHCP中继DHCP Relay即DHCP中继，它是为解决服务器和客户端不在同一个网段而提出来的，它提供了对DHCP广播报文的透明传输功能，能够把DHCP客户端的广播报文透明地传送到其它网段的DHCP服务器上，同样能够把DHCP服务器端的广播报文透明地传送到其它网段的DHCP客户端。 DHCP基础配置交换机4上有多个vlan，交换机1模拟dhcp服务器实现为多个vlan分配地址，交换机3作为dhcp终极连接服务器和客户端 实验步骤创建VLAN[S1]vlan 40 [S3]vlan batch 10 20 30 40 [S4]vlan batch 10 20 30 配置接口放通相应的VLAN[S4]interface GigabitEthernet0&#x2F;0&#x2F;3 [S4-GigabitEthernet0&#x2F;0&#x2F;3] port link-type trunk [S4-GigabitEthernet0&#x2F;0&#x2F;3] port trunk allow-pass vlan 10 20 30 [S4-GigabitEthernet0&#x2F;0&#x2F;3] quit [S3]interface GigabitEthernet0&#x2F;0&#x2F;1 [S3-GigabitEthernet0&#x2F;0&#x2F;1] port link-type access [S3-GigabitEthernet0&#x2F;0&#x2F;1] port default vlan 40 [S3-GigabitEthernet0&#x2F;0&#x2F;1] quit [S3]interface GigabitEthernet0&#x2F;0&#x2F;3 [S3-GigabitEthernet0&#x2F;0&#x2F;3] port link-type trunk [S3-GigabitEthernet0&#x2F;0&#x2F;3] port trunk allow-pass vlan 10 20 30 [S3-GigabitEthernet0&#x2F;0&#x2F;3] quit [S1]interface GigabitEthernet0&#x2F;0&#x2F;12 [S1-GigabitEthernet0&#x2F;0&#x2F;12] port link-type access [S1-GigabitEthernet0&#x2F;0&#x2F;12] port default vlan 40 [S1-GigabitEthernet0&#x2F;0&#x2F;12] quit 交换机4和交换机3之间因为放通多个vlan，所以使用trunk口，交换机3和交换机1之间只有一个vlan40，所以配置access口，pvid&#x3D;40 VLANIF配置[S4]interface Vlanif 10 [S4-Vlanif10] quit [S4]interface Vlanif 20 [S4-Vlanif20] quit [S4]interface Vlanif 30 [S4-Vlanif30] quit [S3]interface Vlanif 10 [S3-Vlanif10] ip address 10.0.10.3 24 [S3-Vlanif10] quit [S3]interface Vlanif 20 [S3-Vlanif20] ip address 10.0.20.3 24 [S3-Vlanif20] quit [S3]interface Vlanif 30 [S3-Vlanif30] ip address 10.0.30.3 24 [S3-Vlanif30] quit [S3]interface Vlanif 40 [S3-Vlanif40] ip address 10.0.40.3 24 [S3-Vlanif40] quit [S1]interface Vlanif 40 [S1-Vlanif40] ip address 10.0.40.1 24 [S1-Vlanif40] quit 检查一下交换机3和1之间的连通性 （开启DHCP服务，配置全局地址池，同时为S4上的VLANIF30分配静态IP地址。）： 开启DHCP服务[S1]dhcp enable 创建地址池VLAN10，用于给S4的VLANIF10分配地址[S1]ip pool vlan10 &#x2F;&#x2F;创建地址池名为vlan10 [S1-ip-pool-vlan10] gateway-list 10.0.10.3 &#x2F;&#x2F;网关是中继上的vlanif 10 [S1-ip-pool-vlan10] network 10.0.10.0 mask 255.255.255.0 &#x2F;&#x2F;设置分配ip范围是10.0.10.1-10.0.10.255 [S1-ip-pool-vlan10] dns-list 10.0.10.3 [S1-ip-pool-vlan10] quit 创建地址池VLAN20，用于给S4的VLANIF20分配地址[S1]ip pool vlan20 [S1-ip-pool-vlan20] gateway-list 10.0.20.3 [S1-ip-pool-vlan20] network 10.0.20.0 mask 255.255.255.0 [S1-ip-pool-vlan20] dns-list 10.0.20.3 [S1-ip-pool-vlan20] quit 创建地址池VLAN30，用于给S4的VLANIF30分配地址[S1]ip pool vlan30 [S1-ip-pool-vlan30] gateway-list 10.0.30.3 [S1-ip-pool-vlan30] network 10.0.30.0 mask 255.255.255.0 [S1-ip-pool-vlan30] dns-list 10.0.30.3 [S1-ip-pool-vlan30] quit 查看s4的vlanif30的mac为了实现给s4的vlanif30口静态绑定一个指定的ip地址，我们需要先查看一下mac 在S1上为S4的VLANIF30配置静态地址分配 给s4的vlanif口静态分配ip：10.0.30.2 在VLANIF40接口下使能DHCP Server[S1]interface Vlanif 40 [S1-Vlanif40] dhcp select global &#x2F;&#x2F;全局的使能 查看IP地址池配置情况[S1]display ip pool name vlan30 地址池vlan30已经存在一个“Used”地址，该地址为静态分配的地址。 配置前往用户网段的路由[S1]ip route-static 10.0.10.0 24 10.0.40.3 [S1]ip route-static 10.0.20.0 24 10.0.40.3 [S1]ip route-static 10.0.30.0 24 10.0.40.3 （或者配置缺省路由） 保证连通性 在S3上完成DHCP Relay相关配置 开启DHCP服务[S3]dhcp enable 在接口上配置DHCP Relay，指定DHCP Server[S3]interface Vlanif10 [S3-Vlanif10] dhcp select relay [S3-Vlanif10] dhcp relay server-ip 10.0.40.1 [S3-Vlanif10] quit [S3]interface Vlanif20 [S3-Vlanif20] dhcp select relay [S3-Vlanif20] dhcp relay server-ip 10.0.40.1 [S3-Vlanif20] quit [S3]interface Vlanif30 [S3-Vlanif30] dhcp select relay [S3-Vlanif30] dhcp relay server-ip 10.0.40.1 [S3-Vlanif30] quit 查看relay配置 DHCP Client配置在S4上配置VLANIF10、20、30接口通过DHCP获取IP地址 开启DHCP服务[S4]dhcp enable 开启接口通过DHCP获取地址[S4]interface Vlanif10 [S4-Vlanif10] ip address dhcp-alloc [S4-Vlanif10] quit [S4]interface Vlanif20 [S4-Vlanif20] ip address dhcp-alloc [S4-Vlanif20] quit [S4]interface Vlanif30 [S4-Vlanif30] ip address dhcp-alloc [S4-Vlanif30] quit 查看各个接口IP地址获取情况display interface Vlanif 10 Vlanif10 current state : UP Line protocol current state : UP Last line protocol up time : 2020-06-05 17:37:57 UTC-08:00 Description: Route Port,The Maximum Transmit Unit is 1500 Internet Address is allocated by DHCP, 10.0.10.254&#x2F;24 [S4]display interface Vlanif 20 Vlanif20 current state : UP Line protocol current state : UP Last line protocol up time : 2020-06-05 17:41:23 UTC-08:00 Description: Route Port,The Maximum Transmit Unit is 1500 Internet Address is allocated by DHCP, 10.0.20.254&#x2F;24 [S4]display interface Vlanif 30 Vlanif30 current state : UP Line protocol current state : UP Last line protocol up time : 2020-06-05 17:43:22 UTC-08:00 Description: Route Port,The Maximum Transmit Unit is 1500 Internet Address is allocated by DHCP, 10.0.30.2&#x2F;24 接口已经通过DHCP获取到IP地址，并且VLANIF30的地址为静态分配的地址：10.0.30.2。","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"DHCP Relay","slug":"DHCP-Relay","permalink":"http://example.com/tags/DHCP-Relay/"},{"name":"DHCP","slug":"DHCP","permalink":"http://example.com/tags/DHCP/"}]},{"title":"vlan间通信","slug":"vlan间通信","date":"2023-11-24T07:17:21.000Z","updated":"2023-11-25T07:51:39.450Z","comments":true,"path":"2023/11/24/vlan间通信/","permalink":"http://example.com/2023/11/24/vlan%E9%97%B4%E9%80%9A%E4%BF%A1/","excerpt":"VLAN间通信背景划分VLAN后，不同VLAN的用户间不能二层互访，这样能起到隔离广播的作用。但实际应用中，不同VLAN的用户又常有互访的需求，此时就需要实现不同VLAN的用户互访，简称VLAN间互访。","text":"VLAN间通信背景划分VLAN后，不同VLAN的用户间不能二层互访，这样能起到隔离广播的作用。但实际应用中，不同VLAN的用户又常有互访的需求，此时就需要实现不同VLAN的用户互访，简称VLAN间互访。 实验拓扑 详解：R2划入vlan2，R3划入vlan3，与交换机之间采用access口，由于交换机g0&#x2F;0&#x2F;1需要通过多个vlan，所以配成trunk口。R2和R3相当于主机，发送和接受的数据都不带标签，交换机g0&#x2F;0&#x2F;2收到R2发送的数据，打上标签vlan2，然后发出去；交换机g0&#x2F;0&#x2F;1收到数据后，发现vlan的标签允许通过，则数据带着vlan2的标签通过；然后交换机g0&#x2F;0&#x2F;3口转发数据时，发现自己的pvid是vlan3，和vlan2不一样，所以不接受，则vlan2和vlan3不能通信。 在某些场景下，需要特定vlan之间通信 方法一：dot1q接口 在r1上配置两个dot1q接口，g0&#x2F;0&#x2F;1.1和g0&#x2F;0&#x2F;1.2，分别对应vlan2和vlan3，作用就是可以终结vlan标签（剥离），vlan2的标签到r1后，被剥离掉vlan2的标签，然后转发时又被g0&#x2F;0&#x2F;1.2打上vlan3的标签，交换机g0&#x2F;0&#x2F;1通过，到g0&#x2F;0&#x2F;3，access口发现和自己的pvid一样，然后剥离掉标签，转发数据帧给r3. 方法二：vlanif接口：交换机上配置vlanif2和vlanif3，ip地址配成192.168.2.254和192.168.3.254 其实就是相当于两个不同网段的网关，然后实现三层的转发 Access接口交换机上常用来连接用户PC、服务器等终端设备的接口。Access接口所连接的这些设备的网卡往往只收发无标记帧。Access接口只能加入一个VLAN。只能允许一个VLAN通过。 转发原则 接收原则： ①收到不带标签的数据帧，打上标签，vlan id&#x3D;端口的PVID ②收到带标签的数据帧，检查数据帧vlan id是否和端口的PVID相同，相同直接接收；不同拒绝接收 发送原则： ①数据帧vlan id和端口PVID 相同，剥离标签发送； ②数据帧vlan id和端口PVID 不同，禁止发送。 Trunk接口Trunk接口允许多个VLAN的数据帧通过，这些数据帧通过802.1Q Tag实现区分。Trunk接口常用于交换机之间的互联，也用于连接路由器、防火墙等设备的 子接口 转发原则 接收原则： ①收到不带标签的数据帧，打上标签，vlan id&#x3D;端口的PVID，然后查看该vlanid是否在允许列表中，是–接收，不是–拒绝 ②收到带标签的数据帧，查看该vlan id是否在允许列表中，是–接收，不是–拒绝 发送原则： 查看vlan id是否在允许列表中，I:不是–拒绝发送；II：是，查看接口的PVID和vlan id是否相同，相同–剥标签发送；不同–直接发送。 Hybrid接口Hybrid接口与Trunk接口类似，也允许多个VLAN的数据帧通过，这些数据帧通过802.1Q Tag实现区分。用户可以灵活指定Hybrid接口在发送某个（或某些）VLAN的数据帧时是否携带Tag 转发原则 接收原则： ①收到不带标签的数据帧，打上标签，vlan id&#x3D;端口的PVID，然后查看该vlanid是否在允许列表中，是–接收，不是–拒绝 ②收到带标签的数据帧，查看该vlan id是否在允许列表中，是–接收，不是–拒绝发送原则：查看vlan id是否在允许列表中，I:不是–拒绝发送；II：是，是否带标签发送取决于接口的配置。 PVID可以手工修改，默认是1，access口的就是本身的vlan号，trunk可以有一个主vlan和多个副vlan，收到的数据和主vlan相同就剥离转发，收到和主vlan不一样的标签，查表，看看是不是在允许通过的列表，如果有，就带着原来的转发，要是没有，就不让过去啦。 实验配置过程# R2和R3的IP地址及网关配置 system-view Enter system view, return user view with Ctrl+Z. [R2]interface GigabitEthernet 0&#x2F;0&#x2F;1 [R2-GigabitEthernet0&#x2F;0&#x2F;1]ip address 192.168.2.1 24 [R2-GigabitEthernet0&#x2F;0&#x2F;1]quit [R2]ip route-static 0.0.0.0 0 192.168.2.254 配置默认路由，相当于给设备配置了网关。 system-view Enter system view, return user view with Ctrl+Z. [R3]interface GigabitEthernet 0&#x2F;0&#x2F;1 [R3-GigabitEthernet0&#x2F;0&#x2F;1]ip address 192.168.3.1 24 [R3-GigabitEthernet0&#x2F;0&#x2F;1]quit [R3]ip route-static 0.0.0.0 0 192.168.3.254 # 在S1上对R2和R3进行VLAN划分 [S1]vlan batch 2 3 Info: This operation may take a few seconds. Please wait for a moment…done. [S1]interface GigabitEthernet 0&#x2F;0&#x2F;2 [S1-GigabitEthernet0&#x2F;0&#x2F;2]port link-type access [S1-GigabitEthernet0&#x2F;0&#x2F;2]port default vlan 2 [S1-GigabitEthernet0&#x2F;0&#x2F;2]quit [S1]interface GigabitEthernet 0&#x2F;0&#x2F;3 [S1-GigabitEthernet0&#x2F;0&#x2F;3]port link-type access [S1-GigabitEthernet0&#x2F;0&#x2F;3]port default vlan 3 步骤 1 通过Dot1q终结子接口实现VLAN间互访 # 配置S1上的Trunk接口 [S1]interface GigabitEthernet 0&#x2F;0&#x2F;1 [S1-GigabitEthernet0&#x2F;0&#x2F;1]port trunk allow-pass vlan 2 3 因为VLAN间互访数据要由R1来终结VLAN，所以S1和R1之间的链路要允许VLAN2和VLAN3通过**。 # 在R1上创建并配置Dot1q终结子接口 [R1]interface GigabitEthernet 0&#x2F;0&#x2F;1.2 创建并进入子接口视图。2代表子接口的编号，一般建议子接口编号与VLAN ID相同，方便记忆。 [R1-GigabitEthernet0&#x2F;0&#x2F;1.2]dot1q termination vid 2 dot1q termination vid vlan-id命令用来配置子接口Dot1q终结的VLAN ID。 以此配置为例：当GigabitEthernet0&#x2F;0&#x2F;1接口收到带有VLAN 2标签的数据之后，会交由2号子接口进行VLAN终结操作并做后续处理。从2号子接口发出的数据也会带上VLAN 2的标签。 [R1-GigabitEthernet0&#x2F;0&#x2F;1.2]arp broadcast enable 终结子接口不能转发广播报文，在收到广播报文后它们直接把该报文丢弃。为了允许终结子接口能转发广播报文，可以通过在子接口上执行命令arp broadcast enable使能终结子接口的ARP广播功能。部分设备默认使能该功能，此命令的配置根据设备而定。 [R1-GigabitEthernet0&#x2F;0&#x2F;1.2]ip address 192.168.2.254 24 [R1-GigabitEthernet0&#x2F;0&#x2F;1.2]quit [R1]interface GigabitEthernet 0&#x2F;0&#x2F;1.3 [R1-GigabitEthernet0&#x2F;0&#x2F;1.3]dot1q termination vid 3 [R1-GigabitEthernet0&#x2F;0&#x2F;1.3]arp broadcast enable [R1-GigabitEthernet0&#x2F;0&#x2F;1.3]ip address 192.168.3.254 24 [R1-GigabitEthernet0&#x2F;0&#x2F;1.3]quit # 检测VLAN间互访联通性 ping 192.168.3.1 PING 192.168.3.1: 56 data bytes, press CTRL_C to break Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;1 ttl&#x3D;254 time&#x3D;60 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;2 ttl&#x3D;254 time&#x3D;40 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;3 ttl&#x3D;254 time&#x3D;110 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;4 ttl&#x3D;254 time&#x3D;70 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;5 ttl&#x3D;254 time&#x3D;100 ms — 192.168.3.1 ping statistics — 5 packet(s) transmitted 5 packet(s) received 0.00% packet loss round-trip min&#x2F;avg&#x2F;max &#x3D; 40&#x2F;76&#x2F;110 ms tracert 192.168.3.1 traceroute to 192.168.3.1(192.168.3.1), max hops: 30 ,packet length: 40,press CTRL_C to break 1 192.168.2.254 30 ms 50 ms 50 ms 2 192.168.3.1 70 ms 60 ms 60 ms 此时VLAN2和VLAN3之间已经可以正常的互访。 步骤 2 通过VLANIF接口实现VLAN间互访 # 清除上一步配置 [S1]interface GigabitEthernet 0&#x2F;0&#x2F;1 [S1-GigabitEthernet0&#x2F;0&#x2F;1]undo port trunk allow-pass vlan 2 3 [S1-GigabitEthernet0&#x2F;0&#x2F;1]undo port link-type [R1]undo interface GigabitEthernet 0&#x2F;0&#x2F;1.2 [R1]undo interface GigabitEthernet 0&#x2F;0&#x2F;1.3 # 在S1上创建相应的VLANIF接口 [S1]interface Vlanif 2 interface vlanif vlan-id命令用来创建VLANIF接口并进入VLANIF接口视图。只有先通过命令创建VLAN后，才能执行interface vlanif命令创建VLANIF接口。 [S1-Vlanif2]ip address 192.168.2.254 24 [S1-Vlanif2]quit [S1]interface Vlanif 3 [S1-Vlanif3]ip address 192.168.3.254 24 [S1-Vlanif3]quit # 检测VLAN间互访联通性 ping 192.168.3.1 PING 192.168.3.1: 56 data bytes, press CTRL_C to break Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;1 ttl&#x3D;254 time&#x3D;100 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;2 ttl&#x3D;254 time&#x3D;50 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;3 ttl&#x3D;254 time&#x3D;50 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;4 ttl&#x3D;254 time&#x3D;60 ms Reply from 192.168.3.1: bytes&#x3D;56 Sequence&#x3D;5 ttl&#x3D;254 time&#x3D;70 ms — 192.168.3.1 ping statistics — 5 packet(s) transmitted 5 packet(s) received 0.00% packet loss round-trip min&#x2F;avg&#x2F;max &#x3D; 50&#x2F;66&#x2F;100 ms tracert 192.168.3.1 traceroute to 192.168.3.1(192.168.3.1), max hops: 30 ,packet length: 40,press CTRL_C to break 1 192.168.2.254 40 ms 30 ms 20 ms 2 192.168.3.1 40 ms 30 ms 40 ms 此时VLAN2和VLAN3之间已经可以正常的互访。","categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"vlan间通信","slug":"vlan间通信","permalink":"http://example.com/tags/vlan%E9%97%B4%E9%80%9A%E4%BF%A1/"},{"name":"dot1q","slug":"dot1q","permalink":"http://example.com/tags/dot1q/"},{"name":"vlanif","slug":"vlanif","permalink":"http://example.com/tags/vlanif/"}]}],"categories":[{"name":"ip实验","slug":"ip实验","permalink":"http://example.com/categories/ip%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"BGP","slug":"BGP","permalink":"http://example.com/tags/BGP/"},{"name":"路由策略","slug":"路由策略","permalink":"http://example.com/tags/%E8%B7%AF%E7%94%B1%E7%AD%96%E7%95%A5/"},{"name":"nat","slug":"nat","permalink":"http://example.com/tags/nat/"},{"name":"DHCP Relay","slug":"DHCP-Relay","permalink":"http://example.com/tags/DHCP-Relay/"},{"name":"DHCP","slug":"DHCP","permalink":"http://example.com/tags/DHCP/"},{"name":"vlan间通信","slug":"vlan间通信","permalink":"http://example.com/tags/vlan%E9%97%B4%E9%80%9A%E4%BF%A1/"},{"name":"dot1q","slug":"dot1q","permalink":"http://example.com/tags/dot1q/"},{"name":"vlanif","slug":"vlanif","permalink":"http://example.com/tags/vlanif/"}]}